{"repository_name":"github.com/z64/discordcr","body":"[![docs](https://img.shields.io/badge/docs-latest-green.svg?style=flat-square)](https://z64.github.io/discordcr)\n\n# discordcr\n\n(The \"cr\" stands for \"creative name\".)\n\ndiscordcr is a minimalist [Discord](https://discordapp.com/) API library for\n[Crystal](https://crystal-lang.org/), designed to be a complement to\n[discordrb](https://github.com/meew0/discordrb) for users who want more control\nand performance and who care less about ease-of-use.\n\ndiscordcr isn't designed for beginners to the Discord API - while experience\nwith making bots isn't *required*, it's certainly recommended. If you feel\noverwhelmed by the complex documentation, try\n[discordrb](https://github.com/meew0/discordrb) first and then check back.\n\nUnlike many other libs which handle a lot of stuff, like caching or resolving,\nthemselves automatically, discordcr requires the user to do such things\nmanually. It also doesn't provide any advanced abstractions for REST calls;\nthe methods perform the HTTP request with the given data but nothing else.\nThis means that the user has full control over them, but also full\nresponsibility. discordcr does not support user accounts; it may work but\nlikely doesn't.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  discordcr:\n    github: z64/discordcr\n```\n\n## Usage\n\nAn example bot can be found\n[here](https://github.com/z64/discordcr/blob/master/examples/ping.cr). More\nexamples will come in the future.\n\nA short overview of library structure: the `Client` class includes the `REST`\nmodule, which handles the REST parts of Discord's API; the `Client` itself\nhandles the gateway, i. e. the interactive parts such as receiving messages. It\nis possible to use only the REST parts by never calling the `#run` method on a\n`Client`, which is what does the actual gateway connection.\n\nThe example linked above has an example of an event (`on_message_create`) that\nis called through the gateway, and of a REST call (`client.create_message`).\nOther gateway events and REST calls work much in the same way - see the\ndocumentation for what specific events and REST calls do.\n\nCaching is done using a separate `Cache` class that needs to be added into\nclients manually:\n\n```cr\nclient = Discord::Client.new # ...\ncache = Discord::Cache.new(client)\nclient.cache = cache\n```\n\nResolution requests for objects can now be done on the `cache` object instead of\ndirectly over REST, this ensures that if an object is needed more than once\nthere will still only be one request to Discord. (There may even be no request\nat all, if the requested data has already been obtained over the gateway.)\nAn example of how to use the cache once it has been instantiated:\n\n```cr\n# Get the username of the user with ID 66237334693085184\nuser = cache.resolve_user(66237334693085184_u64)\nuser = cache.resolve_user(66237334693085184_u64) # won't do a request to Discord\nputs user.username\n```\n\nApart from this, API documentation is also available, at\nhttps://z64.github.io/discordcr.\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/z64/discordcr/blob/master/CONTRIBUTING.md).\n\n## Contributors\n\n- [meew0](https://github.com/meew0) - creator, maintainer\n- [RX14](https://github.com/RX14) - Crystal expert, maintainer\n","program":{"html_id":"github.com/z64/discordcr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/z64/discordcr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr/Discord","path":"Discord.html","kind":"module","full_name":"Discord","name":"Discord","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/mappings/converters.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/converters.cr"},{"filename":"discordcr/mappings/channel.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"},{"filename":"discordcr/mappings/user.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr"},{"filename":"discordcr/mappings/voice.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/voice.cr"},{"filename":"discordcr/mappings/guild.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"},{"filename":"discordcr/mappings/gateway.cr","line_number":6,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"},{"filename":"discordcr/mappings/invite.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/invite.cr"},{"filename":"discordcr/mappings/oauth2.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr"},{"filename":"discordcr/mappings/permissions.cr","line_number":1,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr"},{"filename":"discordcr/mappings/rest.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/rest.cr"},{"filename":"discordcr/mappings/vws.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/vws.cr"},{"filename":"discordcr/mappings/webhook.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/webhook.cr"},{"filename":"discordcr/cache.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr"},{"filename":"discordcr/logger.cr","line_number":8,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/logger.cr"},{"filename":"discordcr/version.cr","line_number":1,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/version.cr"},{"filename":"discordcr/errors.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr"},{"filename":"discordcr/rest.cr","line_number":10,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr"},{"filename":"discordcr/client.cr","line_number":7,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr"},{"filename":"discordcr/dca.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"},{"filename":"discordcr/sodium.cr","line_number":1,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/sodium.cr"},{"filename":"discordcr/websocket.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr"},{"filename":"discordcr/voice.cr","line_number":8,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr"},{"filename":"discordcr.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"LOGGER","value":"Logger.new(STDOUT)","doc":"The built in logger.","summary":"<p>The built in logger.</p>"},{"name":"VERSION","value":"\"0.3.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"every(time_span:Time::Span,&block)-class-method","html_id":"every(time_span:Time::Span,&amp;block)-class-method","name":"every","doc":"Runs the given block every *time_span*. This method takes into account the\nexecution time for the block to keep the intervals accurate.\n\nNote that if the block takes longer to execute than the given *time_span*,\nthere will be no delay: the next iteration follows immediately, with no\nattempt to get in sync.","summary":"<p>Runs the given block every <em>time_span</em>.</p>","abstract":false,"args":[{"name":"time_span","doc":null,"default_value":"","external_name":"time_span","restriction":"Time::Span"}],"args_string":"(time_span : Time::Span, &block)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L293","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L293","def":{"name":"every","args":[{"name":"time_span","doc":null,"default_value":"","external_name":"time_span","restriction":"Time::Span"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do |i|\n  timed_run(time_span) do\n    yield\n  end\nend"}},{"id":"timed_run(total_time:Time::Span,&block)-class-method","html_id":"timed_run(total_time:Time::Span,&amp;block)-class-method","name":"timed_run","doc":"Utility function that runs the given block and measures the time it takes,\nthen sleeps the given time minus that time. This is useful for voice code\nbecause (in most cases) voice data should be sent to Discord at a rate of\none frame every 20 ms, and if the processing and sending takes a certain\namount of time, then noticeable choppiness can be heard.","summary":"<p>Utility function that runs the given block and measures the time it takes, then sleeps the given time minus that time.</p>","abstract":false,"args":[{"name":"total_time","doc":null,"default_value":"","external_name":"total_time","restriction":"Time::Span"}],"args_string":"(total_time : Time::Span, &block)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L278","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L278","def":{"name":"timed_run","args":[{"name":"total_time","doc":null,"default_value":"","external_name":"total_time","restriction":"Time::Span"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"t1 = Time.now\nyield\ndelta = Time.now - t1\nsleep_time = ({total_time - delta, Time::Span.zero}).max\nsleep(sleep_time)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr/Discord/APIError","path":"Discord/APIError.html","kind":"struct","full_name":"Discord::APIError","name":"APIError","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/errors.cr","line_number":35,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"An API error response.","summary":"<p>An API error response.</p>","class_methods":[],"constructors":[{"id":"new(__temp_1067:JSON::PullParser)-class-method","html_id":"new(__temp_1067:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1067","doc":null,"default_value":"","external_name":"__temp_1067","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1067 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1067","doc":null,"default_value":"","external_name":"__temp_1067","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1067)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"code:Int32-instance-method","html_id":"code:Int32-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code"}},{"id":"code=(_code:Int32)-instance-method","html_id":"code=(_code:Int32)-instance-method","name":"code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"Int32"}],"args_string":"(_code : Int32)","source_link":null,"source_link":null,"def":{"name":"code=","args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code = _code"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message"}},{"id":"message=(_message:String)-instance-method","html_id":"message=(_message:String)-instance-method","name":"message=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_message","doc":null,"default_value":"","external_name":"_message","restriction":"String"}],"args_string":"(_message : String)","source_link":null,"source_link":null,"def":{"name":"message=","args":[{"name":"_message","doc":null,"default_value":"","external_name":"_message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message = _message"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _code = @code\n  if _code.nil?\n  else\n    json.field(\"code\") do\n      _code.to_json(json)\n    end\n  end\n  _message = @message\n  if _message.nil?\n  else\n    json.field(\"message\") do\n      _message.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Attachment","path":"Discord/Attachment.html","kind":"struct","full_name":"Discord::Attachment","name":"Attachment","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":208,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_233:JSON::PullParser)-class-method","html_id":"new(__temp_233:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_233","doc":null,"default_value":"","external_name":"__temp_233","restriction":"::JSON::PullParser"}],"args_string":"(__temp_233 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_233","doc":null,"default_value":"","external_name":"__temp_233","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_233)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"filename:String-instance-method","html_id":"filename:String-instance-method","name":"filename","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"filename","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@filename"}},{"id":"filename=(_filename:String)-instance-method","html_id":"filename=(_filename:String)-instance-method","name":"filename=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_filename","doc":null,"default_value":"","external_name":"_filename","restriction":"String"}],"args_string":"(_filename : String)","source_link":null,"source_link":null,"def":{"name":"filename=","args":[{"name":"_filename","doc":null,"default_value":"","external_name":"_filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@filename = _filename"}},{"id":"height:UInt32?-instance-method","html_id":"height:UInt32?-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height"}},{"id":"height=(_height:::Union(UInt32,Nil))-instance-method","html_id":"height=(_height:::Union(UInt32,Nil))-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_height : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"height=","args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = _height"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"proxy_url:String-instance-method","html_id":"proxy_url:String-instance-method","name":"proxy_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"proxy_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_url"}},{"id":"proxy_url=(_proxy_url:String)-instance-method","html_id":"proxy_url=(_proxy_url:String)-instance-method","name":"proxy_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_proxy_url","doc":null,"default_value":"","external_name":"_proxy_url","restriction":"String"}],"args_string":"(_proxy_url : String)","source_link":null,"source_link":null,"def":{"name":"proxy_url=","args":[{"name":"_proxy_url","doc":null,"default_value":"","external_name":"_proxy_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_url = _proxy_url"}},{"id":"size:UInt32-instance-method","html_id":"size:UInt32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size"}},{"id":"size=(_size:UInt32)-instance-method","html_id":"size=(_size:UInt32)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_size","doc":null,"default_value":"","external_name":"_size","restriction":"UInt32"}],"args_string":"(_size : UInt32)","source_link":null,"source_link":null,"def":{"name":"size=","args":[{"name":"_size","doc":null,"default_value":"","external_name":"_size","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = _size"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _filename = @filename\n  if _filename.nil?\n  else\n    json.field(\"filename\") do\n      _filename.to_json(json)\n    end\n  end\n  _size = @size\n  if _size.nil?\n  else\n    json.field(\"size\") do\n      _size.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _proxy_url = @proxy_url\n  if _proxy_url.nil?\n  else\n    json.field(\"proxy_url\") do\n      _proxy_url.to_json(json)\n    end\n  end\n  _height = @height\n  if _height.nil?\n  else\n    json.field(\"height\") do\n      _height.to_json(json)\n    end\n  end\n  _width = @width\n  if _width.nil?\n  else\n    json.field(\"width\") do\n      _width.to_json(json)\n    end\n  end\nend"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:String)-instance-method","html_id":"url=(_url:String)-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"args_string":"(_url : String)","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"width:UInt32?-instance-method","html_id":"width:UInt32?-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width"}},{"id":"width=(_width:::Union(UInt32,Nil))-instance-method","html_id":"width=(_width:::Union(UInt32,Nil))-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_width : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"width=","args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = _width"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Cache","path":"Discord/Cache.html","kind":"class","full_name":"Discord::Cache","name":"Cache","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/cache.cr","line_number":35,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"A cache is a utility class that stores various kinds of Discord objects,\nlike `User`s, `Role`s etc. Its purpose is to reduce both the load on\nDiscord's servers and reduce the latency caused by having to do an API call.\nIt is recommended to use caching for bots that interact heavily with\nDiscord-provided data, like for example administration bots, as opposed to\nbots that only interact by sending and receiving messages. For that latter\nkind, caching is usually even counter-productive as it only unnecessarily\nincreases memory usage.\n\nCaching can either be used standalone, in a purely REST-based way:\n```\nclient = Discord::Client.new(token: \"Bot token\", client_id: 123_u64)\ncache = Discord::Cache.new(client)\n\nputs cache.resolve_user(66237334693085184) # will perform API call\nputs cache.resolve_user(66237334693085184) # will not perform an API call, as the data is now cached\n```\n\nIt can also be integrated more deeply into a `Client` (specifically one that\nuses a gateway connection) to reduce cache misses even more by automatically\ncaching data received over the gateway:\n```\nclient = Discord::Client.new(token: \"Bot token\", client_id: 123_u64)\ncache = Discord::Cache.new(client)\nclient.cache = cache # Integrate the cache into the client\n```\n\nNote that if a cache is *not* used this way, its data will slowly go out of\nsync with Discord, and unless it is used in an environment with few changes\nlikely to occur, a client without a gateway connection should probably\nrefrain from caching at all.","summary":"<p>A cache is a utility class that stores various kinds of Discord objects, like <code><a href=\"../Discord/User.html\">User</a></code>s, <code><a href=\"../Discord/Role.html\">Role</a></code>s etc.</p>","class_methods":[],"constructors":[{"id":"new(client:Client)-class-method","html_id":"new(client:Client)-class-method","name":"new","doc":"Creates a new cache with a *client* that requests (in case of cache\nmisses) should be done on.","summary":"<p>Creates a new cache with a <em>client</em> that requests (in case of cache misses) should be done on.</p>","abstract":false,"args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":"Client"}],"args_string":"(client : Client)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L74","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L74","def":{"name":"new","args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":"Client"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_guild_channel(guild_id:UInt64,channel_id:UInt64)-instance-method","html_id":"add_guild_channel(guild_id:UInt64,channel_id:UInt64)-instance-method","name":"add_guild_channel","doc":"Marks a channel, identified by the *channel_id*, as belonging to a particular\nguild, identified by the *guild_id*.","summary":"<p>Marks a channel, identified by the <em>channel_id</em>, as belonging to a particular guild, identified by the <em>guild_id</em>.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L242","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L242","def":{"name":"add_guild_channel","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"local_channels = __temp_28 = guild_id\n@guild_channels[__temp_28]? || (@guild_channels[__temp_28] = [] of UInt64)\n\nlocal_channels << channel_id\n"}},{"id":"add_guild_role(guild_id:UInt64,role_id:UInt64)-instance-method","html_id":"add_guild_role(guild_id:UInt64,role_id:UInt64)-instance-method","name":"add_guild_role","doc":"Marks a role, identified by the *role_id*, as belonging to a particular\nguild, identified by the *guild_id*.","summary":"<p>Marks a role, identified by the <em>role_id</em>, as belonging to a particular guild, identified by the <em>guild_id</em>.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, role_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L225","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L225","def":{"name":"add_guild_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"local_roles = __temp_26 = guild_id\n@guild_roles[__temp_26]? || (@guild_roles[__temp_26] = [] of UInt64)\n\nlocal_roles << role_id\n"}},{"id":"cache(member:GuildMember,guild_id:UInt64)-instance-method","html_id":"cache(member:GuildMember,guild_id:UInt64)-instance-method","name":"cache","doc":"Adds a specific *member* to the cache, given the *guild_id* it is on.","summary":"<p>Adds a specific <em>member</em> to the cache, given the <em>guild_id</em> it is on.</p>","abstract":false,"args":[{"name":"member","doc":null,"default_value":"","external_name":"member","restriction":"GuildMember"},{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(member : GuildMember, guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L189","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L189","def":{"name":"cache","args":[{"name":"member","doc":null,"default_value":"","external_name":"member","restriction":"GuildMember"},{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"local_members = __temp_22 = guild_id\n@members[__temp_22]? || (@members[__temp_22] = Hash(UInt64, GuildMember).new)\n\nlocal_members[member.user.id] = member\n"}},{"id":"cache(user:User)-instance-method","html_id":"cache(user:User)-instance-method","name":"cache","doc":"Adds a specific *user* to the cache.","summary":"<p>Adds a specific <em>user</em> to the cache.</p>","abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"User"}],"args_string":"(user : User)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L174","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L174","def":{"name":"cache","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@users[user.id] = user"}},{"id":"cache(channel:Channel)-instance-method","html_id":"cache(channel:Channel)-instance-method","name":"cache","doc":"Adds a specific *channel* to the cache.","summary":"<p>Adds a specific <em>channel</em> to the cache.</p>","abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"}],"args_string":"(channel : Channel)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L179","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L179","def":{"name":"cache","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels[channel.id] = channel"}},{"id":"cache(guild:Guild)-instance-method","html_id":"cache(guild:Guild)-instance-method","name":"cache","doc":"Adds a specific *guild* to the cache.","summary":"<p>Adds a specific <em>guild</em> to the cache.</p>","abstract":false,"args":[{"name":"guild","doc":null,"default_value":"","external_name":"guild","restriction":"Guild"}],"args_string":"(guild : Guild)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L184","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L184","def":{"name":"cache","args":[{"name":"guild","doc":null,"default_value":"","external_name":"guild","restriction":"Guild"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guilds[guild.id] = guild"}},{"id":"cache(role:Role)-instance-method","html_id":"cache(role:Role)-instance-method","name":"cache","doc":"Adds a specific *role* to the cache.","summary":"<p>Adds a specific <em>role</em> to the cache.</p>","abstract":false,"args":[{"name":"role","doc":null,"default_value":"","external_name":"role","restriction":"Role"}],"args_string":"(role : Role)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L195","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L195","def":{"name":"cache","args":[{"name":"role","doc":null,"default_value":"","external_name":"role","restriction":"Role"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles[role.id] = role"}},{"id":"cache_current_user(current_user:User)-instance-method","html_id":"cache_current_user(current_user:User)-instance-method","name":"cache_current_user","doc":"Caches the current user.","summary":"<p>Caches the current user.</p>","abstract":false,"args":[{"name":"current_user","doc":null,"default_value":"","external_name":"current_user","restriction":"User"}],"args_string":"(current_user : User)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L206","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L206","def":{"name":"cache_current_user","args":[{"name":"current_user","doc":null,"default_value":"","external_name":"current_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_user = current_user"}},{"id":"cache_dm_channel(channel_id:UInt64,recipient_id:UInt64)-instance-method","html_id":"cache_dm_channel(channel_id:UInt64,recipient_id:UInt64)-instance-method","name":"cache_dm_channel","doc":"Adds a particular DM channel to the cache, given the *channel_id* and the\n*recipient_id*.","summary":"<p>Adds a particular DM channel to the cache, given the <em>channel_id</em> and the <em>recipient_id</em>.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, recipient_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L201","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L201","def":{"name":"cache_dm_channel","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dm_channels[recipient_id] = channel_id"}},{"id":"cache_multiple_members(members:Array(GuildMember),guild_id:UInt64)-instance-method","html_id":"cache_multiple_members(members:Array(GuildMember),guild_id:UInt64)-instance-method","name":"cache_multiple_members","doc":"Adds multiple *members* at once to the cache, given the *guild_id* they\nall share. This method exists to slightly reduce the overhead of\nprocessing chunks; outside of that it is likely not of much use.","summary":"<p>Adds multiple <em>members</em> at once to the cache, given the <em>guild_id</em> they all share.</p>","abstract":false,"args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(GuildMember)"},{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(members : Array(GuildMember), guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L211","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L211","def":{"name":"cache_multiple_members","args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(GuildMember)"},{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"local_members = __temp_24 = guild_id\n@members[__temp_24]? || (@members[__temp_24] = Hash(UInt64, GuildMember).new)\n\nmembers.each do |member|\n  local_members[member.user.id] = member\nend\n"}},{"id":"channels:Hash(UInt64,Discord::Channel)-instance-method","html_id":"channels:Hash(UInt64,Discord::Channel)-instance-method","name":"channels","doc":"A map of cached channels, i. e. all channels on all servers the bot is on,\nas well as all DM channels.","summary":"<p>A map of cached channels, i.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Discord::Channel)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L43","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L43","def":{"name":"channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels"}},{"id":"delete_channel(id:UInt64)-instance-method","html_id":"delete_channel(id:UInt64)-instance-method","name":"delete_channel","doc":"Deletes a channel from the cache given its *ID*.","summary":"<p>Deletes a channel from the cache given its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L143","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L143","def":{"name":"delete_channel","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels.delete(id)"}},{"id":"delete_current_user-instance-method","html_id":"delete_current_user-instance-method","name":"delete_current_user","doc":"Deletes the current user from the cache, if that will ever be necessary.","summary":"<p>Deletes the current user from the cache, if that will ever be necessary.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L169","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L169","def":{"name":"delete_current_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_user = nil"}},{"id":"delete_dm_channel(recipient_id:UInt64)-instance-method","html_id":"delete_dm_channel(recipient_id:UInt64)-instance-method","name":"delete_dm_channel","doc":"Deletes a DM channel with a particular user given the *recipient_id*.","summary":"<p>Deletes a DM channel with a particular user given the <em>recipient_id</em>.</p>","abstract":false,"args":[{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"args_string":"(recipient_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L164","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L164","def":{"name":"delete_dm_channel","args":[{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dm_channels.delete(recipient_id)"}},{"id":"delete_guild(id:UInt64)-instance-method","html_id":"delete_guild(id:UInt64)-instance-method","name":"delete_guild","doc":"Deletes a guild from the cache given its *ID*.","summary":"<p>Deletes a guild from the cache given its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L148","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L148","def":{"name":"delete_guild","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guilds.delete(id)"}},{"id":"delete_member(guild_id:UInt64,user_id:UInt64)-instance-method","html_id":"delete_member(guild_id:UInt64,user_id:UInt64)-instance-method","name":"delete_member","doc":"Deletes a member from the cache given its *user_id* and the *guild_id* it\nis on.","summary":"<p>Deletes a member from the cache given its <em>user_id</em> and the <em>guild_id</em> it is on.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L154","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L154","def":{"name":"delete_member","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@members[guild_id]?.try(&.delete(user_id))"}},{"id":"delete_role(id:UInt64)-instance-method","html_id":"delete_role(id:UInt64)-instance-method","name":"delete_role","doc":"Deletes a role from the cache given its *ID*.","summary":"<p>Deletes a role from the cache given its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L159","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L159","def":{"name":"delete_role","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles.delete(id)"}},{"id":"delete_user(id:UInt64)-instance-method","html_id":"delete_user(id:UInt64)-instance-method","name":"delete_user","doc":"Deletes a user from the cache given its *ID*.","summary":"<p>Deletes a user from the cache given its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L138","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L138","def":{"name":"delete_user","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@users.delete(id)"}},{"id":"dm_channels:Hash(UInt64,UInt64)-instance-method","html_id":"dm_channels:Hash(UInt64,UInt64)-instance-method","name":"dm_channels","doc":"Mapping of users to the respective DM channels the bot has open with them,\nrepresented as {user ID => channel ID}.","summary":"<p>Mapping of users to the respective DM channels the bot has open with them, represented as {user ID => channel ID}.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L62","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L62","def":{"name":"dm_channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dm_channels"}},{"id":"guild_channels(guild_id:UInt64):Array(UInt64)-instance-method","html_id":"guild_channels(guild_id:UInt64):Array(UInt64)-instance-method","name":"guild_channels","doc":"Returns all channels of a guild, identified by its *guild_id*.","summary":"<p>Returns all channels of a guild, identified by its <em>guild_id</em>.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64) : Array(UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L236","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L236","def":{"name":"guild_channels","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(UInt64)","visibility":"Public","body":"@guild_channels[guild_id]"}},{"id":"guild_channels:Hash(UInt64,Array(UInt64))-instance-method","html_id":"guild_channels:Hash(UInt64,Array(UInt64))-instance-method","name":"guild_channels","doc":"Mapping of guilds to the channels on them, represented as {guild ID =>\n[channel IDs]}.","summary":"<p>Mapping of guilds to the channels on them, represented as {guild ID => [channel IDs]}.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Array(UInt64))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L70","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L70","def":{"name":"guild_channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_channels"}},{"id":"guild_roles(guild_id:UInt64):Array(UInt64)-instance-method","html_id":"guild_roles(guild_id:UInt64):Array(UInt64)-instance-method","name":"guild_roles","doc":"Returns all roles of a guild, identified by its *guild_id*.","summary":"<p>Returns all roles of a guild, identified by its <em>guild_id</em>.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64) : Array(UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L219","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L219","def":{"name":"guild_roles","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(UInt64)","visibility":"Public","body":"@guild_roles[guild_id]"}},{"id":"guild_roles:Hash(UInt64,Array(UInt64))-instance-method","html_id":"guild_roles:Hash(UInt64,Array(UInt64))-instance-method","name":"guild_roles","doc":"Mapping of guilds to the roles on them, represented as {guild ID =>\n[role IDs]}.","summary":"<p>Mapping of guilds to the roles on them, represented as {guild ID => [role IDs]}.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Array(UInt64))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L66","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L66","def":{"name":"guild_roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_roles"}},{"id":"guilds:Hash(UInt64,Discord::Guild)-instance-method","html_id":"guilds:Hash(UInt64,Discord::Guild)-instance-method","name":"guilds","doc":"A map of guilds (servers) the bot is on. Doesn't ignore guilds temporarily\ndeleted due to an outage; so if an outage is going on right now the\naffected guilds would be missing here too.","summary":"<p>A map of guilds (servers) the bot is on.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Discord::Guild)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L48","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L48","def":{"name":"guilds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guilds"}},{"id":"members:Hash(UInt64,Hash(UInt64,Discord::GuildMember))-instance-method","html_id":"members:Hash(UInt64,Hash(UInt64,Discord::GuildMember))-instance-method","name":"members","doc":"A double map of members on servers, represented as {guild ID => {user ID\n=> member}}. Will only contain previously and currently online members as\nwell as all members that have been chunked (see\n`Client#request_guild_members`).","summary":"<p>A double map of members on servers, represented as {guild ID => {user ID => member}}.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Hash(UInt64, Discord::GuildMember))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L54","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L54","def":{"name":"members","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@members"}},{"id":"remove_guild_channel(guild_id:UInt64,channel_id:UInt64)-instance-method","html_id":"remove_guild_channel(guild_id:UInt64,channel_id:UInt64)-instance-method","name":"remove_guild_channel","doc":"Marks a channel as not belonging to a particular guild anymore.","summary":"<p>Marks a channel as not belonging to a particular guild anymore.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L248","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L248","def":{"name":"remove_guild_channel","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_channels[guild_id]?.try do |local_channels|\n  local_channels.delete(channel_id)\nend"}},{"id":"remove_guild_role(guild_id:UInt64,role_id:UInt64)-instance-method","html_id":"remove_guild_role(guild_id:UInt64,role_id:UInt64)-instance-method","name":"remove_guild_role","doc":"Marks a role as not belonging to a particular guild anymore.","summary":"<p>Marks a role as not belonging to a particular guild anymore.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, role_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L231","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L231","def":{"name":"remove_guild_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_roles[guild_id]?.try do |local_roles|\n  local_roles.delete(role_id)\nend"}},{"id":"resolve_channel(id:UInt64):Channel-instance-method","html_id":"resolve_channel(id:UInt64):Channel-instance-method","name":"resolve_channel","doc":"Resolves a channel by its *ID*. If the requested object is not cached, it\nwill do an API call.","summary":"<p>Resolves a channel by its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64) : Channel","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L95","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L95","def":{"name":"resolve_channel","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Channel","visibility":"Public","body":"@channels.fetch(id) do\n  @channels[id] = @client.get_channel(id)\nend"}},{"id":"resolve_current_user:User-instance-method","html_id":"resolve_current_user:User-instance-method","name":"resolve_current_user","doc":"Resolves the current user's profile. Requires no parameters since the\nendpoint has none either. If there is a gateway connection this should\nalways be cached.","summary":"<p>Resolves the current user's profile.</p>","abstract":false,"args":[],"args_string":" : User","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L133","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L133","def":{"name":"resolve_current_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"User","visibility":"Public","body":"@current_user || (@current_user = @client.get_current_user)"}},{"id":"resolve_dm_channel(recipient_id:UInt64):UInt64-instance-method","html_id":"resolve_dm_channel(recipient_id:UInt64):UInt64-instance-method","name":"resolve_dm_channel","doc":"Resolves the ID of a DM channel with a particular user by the recipient's\n*recipient_id*. If there is no such channel cached, one will be created.","summary":"<p>Resolves the ID of a DM channel with a particular user by the recipient's <em>recipient_id</em>.</p>","abstract":false,"args":[{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"args_string":"(recipient_id : UInt64) : UInt64","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L122","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L122","def":{"name":"resolve_dm_channel","args":[{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@dm_channels.fetch(recipient_id) do\n  channel = @client.create_dm(recipient_id)\n  cache(Channel.new(channel))\n  channel.id\nend"}},{"id":"resolve_guild(id:UInt64):Guild-instance-method","html_id":"resolve_guild(id:UInt64):Guild-instance-method","name":"resolve_guild","doc":"Resolves a guild by its *ID*. If the requested object is not cached, it\nwill do an API call.","summary":"<p>Resolves a guild by its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64) : Guild","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L101","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L101","def":{"name":"resolve_guild","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Guild","visibility":"Public","body":"@guilds.fetch(id) do\n  @guilds[id] = @client.get_guild(id)\nend"}},{"id":"resolve_member(guild_id:UInt64,user_id:UInt64):GuildMember-instance-method","html_id":"resolve_member(guild_id:UInt64,user_id:UInt64):GuildMember-instance-method","name":"resolve_member","doc":"Resolves a member by the *guild_id* of the guild the member is on, and the\n*user_id* of the member itself. An API request will be performed if the\nobject is not cached.","summary":"<p>Resolves a member by the <em>guild_id</em> of the guild the member is on, and the <em>user_id</em> of the member itself.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64) : GuildMember","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L108","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L108","def":{"name":"resolve_member","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GuildMember","visibility":"Public","body":"local_members = __temp_20 = guild_id\n@members[__temp_20]? || (@members[__temp_20] = Hash(UInt64, GuildMember).new)\n\nlocal_members.fetch(user_id) do\n  local_members[user_id] = @client.get_guild_member(guild_id, user_id)\nend\n"}},{"id":"resolve_role(id:UInt64):Role-instance-method","html_id":"resolve_role(id:UInt64):Role-instance-method","name":"resolve_role","doc":"Resolves a role by its *ID*. No API request will be performed if the role\nis not cached, because there is no endpoint for individual roles; however\nall roles should be cached at all times so it won't be a problem.","summary":"<p>Resolves a role by its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64) : Role","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L116","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L116","def":{"name":"resolve_role","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Role","visibility":"Public","body":"@roles[id]"}},{"id":"resolve_user(id:UInt64):User-instance-method","html_id":"resolve_user(id:UInt64):User-instance-method","name":"resolve_user","doc":"Resolves a user by its *ID*. If the requested object is not cached, it\nwill do an API call.","summary":"<p>Resolves a user by its <em>ID</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(id : UInt64) : User","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L89","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L89","def":{"name":"resolve_user","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"User","visibility":"Public","body":"@users.fetch(id) do\n  @users[id] = @client.get_user(id)\nend"}},{"id":"roles:Hash(UInt64,Discord::Role)-instance-method","html_id":"roles:Hash(UInt64,Discord::Role)-instance-method","name":"roles","doc":"A map of all roles on servers the bot is on. Does not discriminate by\nguild, as role IDs are unique even across guilds.","summary":"<p>A map of all roles on servers the bot is on.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Discord::Role)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L58","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L58","def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"users:Hash(UInt64,Discord::User)-instance-method","html_id":"users:Hash(UInt64,Discord::User)-instance-method","name":"users","doc":"A map of cached users. These aren't necessarily all the users in servers\nthe bot has access to, but rather all the users that have been seen by\nthe bot in the past (and haven't been deleted by means of `delete_user`).","summary":"<p>A map of cached users.</p>","abstract":false,"args":[],"args_string":" : Hash(UInt64, Discord::User)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L39","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/cache.cr#L39","def":{"name":"users","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@users"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Channel","path":"Discord/Channel.html","kind":"struct","full_name":"Discord::Channel","name":"Channel","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":41,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_64:JSON::PullParser)-class-method","html_id":"new(__temp_64:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_64","doc":null,"default_value":"","external_name":"__temp_64","restriction":"::JSON::PullParser"}],"args_string":"(__temp_64 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_64","doc":null,"default_value":"","external_name":"__temp_64","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_64)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"application_id:UInt64?-instance-method","html_id":"application_id:UInt64?-instance-method","name":"application_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"application_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@application_id"}},{"id":"application_id=(_application_id:::Union(UInt64,Nil))-instance-method","html_id":"application_id=(_application_id:::Union(UInt64,Nil))-instance-method","name":"application_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_application_id","doc":null,"default_value":"","external_name":"_application_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_application_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"application_id=","args":[{"name":"_application_id","doc":null,"default_value":"","external_name":"_application_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@application_id = _application_id"}},{"id":"bitrate:UInt32?-instance-method","html_id":"bitrate:UInt32?-instance-method","name":"bitrate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"bitrate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bitrate"}},{"id":"bitrate=(_bitrate:::Union(UInt32,Nil))-instance-method","html_id":"bitrate=(_bitrate:::Union(UInt32,Nil))-instance-method","name":"bitrate=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bitrate","doc":null,"default_value":"","external_name":"_bitrate","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_bitrate : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"bitrate=","args":[{"name":"_bitrate","doc":null,"default_value":"","external_name":"_bitrate","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bitrate = _bitrate"}},{"id":"guild_id:UInt64?-instance-method","html_id":"guild_id:UInt64?-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:::Union(UInt64,Nil))-instance-method","html_id":"guild_id=(_guild_id:::Union(UInt64,Nil))-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_guild_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"icon:Bool?-instance-method","html_id":"icon:Bool?-instance-method","name":"icon","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"icon","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon"}},{"id":"icon=(_icon:::Union(Bool,Nil))-instance-method","html_id":"icon=(_icon:::Union(Bool,Nil))-instance-method","name":"icon=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_icon : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"icon=","args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon = _icon"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"last_message_id:UInt64?-instance-method","html_id":"last_message_id:UInt64?-instance-method","name":"last_message_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"last_message_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_message_id"}},{"id":"last_message_id=(_last_message_id:::Union(UInt64,Nil))-instance-method","html_id":"last_message_id=(_last_message_id:::Union(UInt64,Nil))-instance-method","name":"last_message_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_message_id","doc":null,"default_value":"","external_name":"_last_message_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_last_message_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"last_message_id=","args":[{"name":"_last_message_id","doc":null,"default_value":"","external_name":"_last_message_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_message_id = _last_message_id"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:::Union(String,Nil))-instance-method","html_id":"name=(_name:::Union(String,Nil))-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_name : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"nsfw:Bool?-instance-method","html_id":"nsfw:Bool?-instance-method","name":"nsfw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"nsfw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nsfw"}},{"id":"nsfw=(_nsfw:::Union(Bool,Nil))-instance-method","html_id":"nsfw=(_nsfw:::Union(Bool,Nil))-instance-method","name":"nsfw=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nsfw","doc":null,"default_value":"","external_name":"_nsfw","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_nsfw : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"nsfw=","args":[{"name":"_nsfw","doc":null,"default_value":"","external_name":"_nsfw","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nsfw = _nsfw"}},{"id":"owner_id:UInt64?-instance-method","html_id":"owner_id:UInt64?-instance-method","name":"owner_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"owner_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner_id"}},{"id":"owner_id=(_owner_id:::Union(UInt64,Nil))-instance-method","html_id":"owner_id=(_owner_id:::Union(UInt64,Nil))-instance-method","name":"owner_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_owner_id","doc":null,"default_value":"","external_name":"_owner_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_owner_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"owner_id=","args":[{"name":"_owner_id","doc":null,"default_value":"","external_name":"_owner_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner_id = _owner_id"}},{"id":"parent_id:UInt64?-instance-method","html_id":"parent_id:UInt64?-instance-method","name":"parent_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"parent_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent_id"}},{"id":"parent_id=(_parent_id:::Union(UInt64,Nil))-instance-method","html_id":"parent_id=(_parent_id:::Union(UInt64,Nil))-instance-method","name":"parent_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_parent_id","doc":null,"default_value":"","external_name":"_parent_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_parent_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"parent_id=","args":[{"name":"_parent_id","doc":null,"default_value":"","external_name":"_parent_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent_id = _parent_id"}},{"id":"permission_overwrites:Array(Discord::Overwrite)?-instance-method","html_id":"permission_overwrites:Array(Discord::Overwrite)?-instance-method","name":"permission_overwrites","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Overwrite)?","source_link":null,"source_link":null,"def":{"name":"permission_overwrites","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@permission_overwrites"}},{"id":"permission_overwrites=(_permission_overwrites:::Union(Array(Overwrite),Nil))-instance-method","html_id":"permission_overwrites=(_permission_overwrites:::Union(Array(Overwrite),Nil))-instance-method","name":"permission_overwrites=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_permission_overwrites","doc":null,"default_value":"","external_name":"_permission_overwrites","restriction":"::Union(Array(Overwrite), ::Nil)"}],"args_string":"(_permission_overwrites : ::Union(Array(Overwrite), Nil))","source_link":null,"source_link":null,"def":{"name":"permission_overwrites=","args":[{"name":"_permission_overwrites","doc":null,"default_value":"","external_name":"_permission_overwrites","restriction":"::Union(Array(Overwrite), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@permission_overwrites = _permission_overwrites"}},{"id":"position:Int32?-instance-method","html_id":"position:Int32?-instance-method","name":"position","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"source_link":null,"def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position"}},{"id":"position=(_position:::Union(Int32,Nil))-instance-method","html_id":"position=(_position:::Union(Int32,Nil))-instance-method","name":"position=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_position","doc":null,"default_value":"","external_name":"_position","restriction":"::Union(Int32, ::Nil)"}],"args_string":"(_position : ::Union(Int32, Nil))","source_link":null,"source_link":null,"def":{"name":"position=","args":[{"name":"_position","doc":null,"default_value":"","external_name":"_position","restriction":"::Union(Int32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position = _position"}},{"id":"recipients:Array(Discord::User)?-instance-method","html_id":"recipients:Array(Discord::User)?-instance-method","name":"recipients","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::User)?","source_link":null,"source_link":null,"def":{"name":"recipients","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipients"}},{"id":"recipients=(_recipients:::Union(Array(User),Nil))-instance-method","html_id":"recipients=(_recipients:::Union(Array(User),Nil))-instance-method","name":"recipients=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_recipients","doc":null,"default_value":"","external_name":"_recipients","restriction":"::Union(Array(User), ::Nil)"}],"args_string":"(_recipients : ::Union(Array(User), Nil))","source_link":null,"source_link":null,"def":{"name":"recipients=","args":[{"name":"_recipients","doc":null,"default_value":"","external_name":"_recipients","restriction":"::Union(Array(User), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipients = _recipients"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      if _type\n        ChannelTypeConverter.to_json(_type, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        MaybeSnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _permission_overwrites = @permission_overwrites\n  if _permission_overwrites.nil?\n  else\n    json.field(\"permission_overwrites\") do\n      _permission_overwrites.to_json(json)\n    end\n  end\n  _topic = @topic\n  if _topic.nil?\n  else\n    json.field(\"topic\") do\n      _topic.to_json(json)\n    end\n  end\n  _last_message_id = @last_message_id\n  if _last_message_id.nil?\n  else\n    json.field(\"last_message_id\") do\n      if _last_message_id\n        MaybeSnowflakeConverter.to_json(_last_message_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _bitrate = @bitrate\n  if _bitrate.nil?\n  else\n    json.field(\"bitrate\") do\n      _bitrate.to_json(json)\n    end\n  end\n  _user_limit = @user_limit\n  if _user_limit.nil?\n  else\n    json.field(\"user_limit\") do\n      _user_limit.to_json(json)\n    end\n  end\n  _recipients = @recipients\n  if _recipients.nil?\n  else\n    json.field(\"recipients\") do\n      _recipients.to_json(json)\n    end\n  end\n  _nsfw = @nsfw\n  if _nsfw.nil?\n  else\n    json.field(\"nsfw\") do\n      _nsfw.to_json(json)\n    end\n  end\n  _icon = @icon\n  if _icon.nil?\n  else\n    json.field(\"icon\") do\n      _icon.to_json(json)\n    end\n  end\n  _owner_id = @owner_id\n  if _owner_id.nil?\n  else\n    json.field(\"owner_id\") do\n      if _owner_id\n        MaybeSnowflakeConverter.to_json(_owner_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _application_id = @application_id\n  if _application_id.nil?\n  else\n    json.field(\"application_id\") do\n      if _application_id\n        MaybeSnowflakeConverter.to_json(_application_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _position = @position\n  if _position.nil?\n  else\n    json.field(\"position\") do\n      _position.to_json(json)\n    end\n  end\n  _parent_id = @parent_id\n  if _parent_id.nil?\n  else\n    json.field(\"parent_id\") do\n      if _parent_id\n        MaybeSnowflakeConverter.to_json(_parent_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"topic:String?-instance-method","html_id":"topic:String?-instance-method","name":"topic","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"topic","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@topic"}},{"id":"topic=(_topic:::Union(String,Nil))-instance-method","html_id":"topic=(_topic:::Union(String,Nil))-instance-method","name":"topic=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_topic","doc":null,"default_value":"","external_name":"_topic","restriction":"::Union(String, ::Nil)"}],"args_string":"(_topic : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"topic=","args":[{"name":"_topic","doc":null,"default_value":"","external_name":"_topic","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@topic = _topic"}},{"id":"type:Discord::ChannelType-instance-method","html_id":"type:Discord::ChannelType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::ChannelType","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:ChannelType)-instance-method","html_id":"type=(_type:ChannelType)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"ChannelType"}],"args_string":"(_type : ChannelType)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"ChannelType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}},{"id":"user_limit:UInt32?-instance-method","html_id":"user_limit:UInt32?-instance-method","name":"user_limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"user_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_limit"}},{"id":"user_limit=(_user_limit:::Union(UInt32,Nil))-instance-method","html_id":"user_limit=(_user_limit:::Union(UInt32,Nil))-instance-method","name":"user_limit=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user_limit","doc":null,"default_value":"","external_name":"_user_limit","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_user_limit : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"user_limit=","args":[{"name":"_user_limit","doc":null,"default_value":"","external_name":"_user_limit","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_limit = _user_limit"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/ChannelType","path":"Discord/ChannelType.html","kind":"enum","full_name":"Discord::ChannelType","name":"ChannelType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/z64/discordcr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/z64/discordcr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":34,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"GuildText","value":"0_u8","doc":null,"summary":null},{"name":"DM","value":"1_u8","doc":null,"summary":null},{"name":"Voice","value":"2_u8","doc":null,"summary":null},{"name":"GroupDM","value":"3_u8","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"dm?-instance-method","html_id":"dm?-instance-method","name":"dm?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L36","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L36","def":{"name":"dm?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DM"}},{"id":"group_dm?-instance-method","html_id":"group_dm?-instance-method","name":"group_dm?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L38","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L38","def":{"name":"group_dm?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GroupDM"}},{"id":"guild_text?-instance-method","html_id":"guild_text?-instance-method","name":"guild_text?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L35","def":{"name":"guild_text?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GuildText"}},{"id":"voice?-instance-method","html_id":"voice?-instance-method","name":"voice?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L37","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L37","def":{"name":"voice?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Voice"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Client","path":"Discord/Client.html","kind":"class","full_name":"Discord::Client","name":"Client","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/client.cr","line_number":19,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"DEFAULT_PROPERTIES","value":"Gateway::IdentifyProperties.new(os: \"Crystal\", browser: \"discordcr\", device: \"discordcr\", referrer: \"\", referring_domain: \"\")","doc":"Default analytics properties sent in IDENTIFY","summary":"<p>Default analytics properties sent in IDENTIFY</p>"},{"name":"OP_DISPATCH","value":"0","doc":null,"summary":null},{"name":"OP_HEARTBEAT","value":"1","doc":null,"summary":null},{"name":"OP_HEARTBEAT_ACK","value":"11","doc":null,"summary":null},{"name":"OP_HELLO","value":"10","doc":null,"summary":null},{"name":"OP_IDENTIFY","value":"2","doc":null,"summary":null},{"name":"OP_INVALID_SESSION","value":"9","doc":null,"summary":null},{"name":"OP_RECONNECT","value":"7","doc":null,"summary":null},{"name":"OP_REQUEST_GUILD_MEMBERS","value":"8","doc":null,"summary":null},{"name":"OP_RESUME","value":"6","doc":null,"summary":null},{"name":"OP_STATUS_UPDATE","value":"3","doc":null,"summary":null},{"name":"OP_VOICE_SERVER_PING","value":"5","doc":null,"summary":null},{"name":"OP_VOICE_STATE_UPDATE","value":"4","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"The basic client class that is used to connect to Discord, send REST\nrequests, or send or receive gateway messages. It is required for doing any\nsort of interaction with Discord.\n\nA new simple client that does nothing yet can be created like this:\n```\nclient = Discord::Client.new(token: \"Bot token\", client_id: 123_u64)\n```\n\nWith this client, REST requests can now be sent. (See the `Discord::REST`\nmodule.) A gateway connection can also be started using the `#run` method.","summary":"<p>The basic client class that is used to connect to Discord, send REST requests, or send or receive gateway messages.</p>","class_methods":[],"constructors":[{"id":"new(token:String,client_id:UInt64?=nil,shard:Gateway::ShardKey?=nil,large_threshold:Int32=100,compress:Bool=false,properties:Gateway::IdentifyProperties=DEFAULT_PROPERTIES)-class-method","html_id":"new(token:String,client_id:UInt64?=nil,shard:Gateway::ShardKey?=nil,large_threshold:Int32=100,compress:Bool=false,properties:Gateway::IdentifyProperties=DEFAULT_PROPERTIES)-class-method","name":"new","doc":"Creates a new bot with the given *token* and optionally the *client_id*.\nBoth of these things can be found on a bot's application page; the token\nwill need to be revealed using the \"click to reveal\" thing on the token\n(**not** the OAuth2 secret!)\n\nIf the *shard* key is set, the gateway will operate in sharded mode. This\nmeans that this client's gateway connection will only receive packets from\na part of the guilds the bot is connected to. See\n[here](https://discordapp.com/developers/docs/topics/gateway#sharding)\nfor more information.\n\nThe *large_threshold* defines the minimum member count that, if a guild\nhas at least that many members, the client will only receive online\nmembers in GUILD_CREATE. The default value 100 is what the Discord client\nuses; the maximum value is 250. To get a list of offline members as well,\nthe `#request_guild_members` method can be used.\n\nIf *compress* is true, packets will be sent in a compressed manner.\ndiscordcr doesn't currently handle packet decompression, so until that is\nimplemented, setting this to true will cause the client to fail to parse\nanything.\n\nThe *properties* define what values are sent to Discord as analytics\nproperties. It's not recommended to change these from the default values,\nbut if you desire to do so, you can.","summary":"<p>Creates a new bot with the given <em>token</em> and optionally the <em>client_id</em>.</p>","abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"client_id","doc":null,"default_value":"nil","external_name":"client_id","restriction":"UInt64 | ::Nil"},{"name":"shard","doc":null,"default_value":"nil","external_name":"shard","restriction":"Gateway::ShardKey | ::Nil"},{"name":"large_threshold","doc":null,"default_value":"100","external_name":"large_threshold","restriction":"Int32"},{"name":"compress","doc":null,"default_value":"false","external_name":"compress","restriction":"Bool"},{"name":"properties","doc":null,"default_value":"DEFAULT_PROPERTIES","external_name":"properties","restriction":"Gateway::IdentifyProperties"}],"args_string":"(token : String, client_id : UInt64? = <span class=\"n\">nil</span>, shard : Gateway::ShardKey? = <span class=\"n\">nil</span>, large_threshold : Int32 = <span class=\"n\">100</span>, compress : Bool = <span class=\"n\">false</span>, properties : Gateway::IdentifyProperties = <span class=\"t\">DEFAULT_PROPERTIES</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L71","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L71","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"client_id","doc":null,"default_value":"nil","external_name":"client_id","restriction":"UInt64 | ::Nil"},{"name":"shard","doc":null,"default_value":"nil","external_name":"shard","restriction":"Gateway::ShardKey | ::Nil"},{"name":"large_threshold","doc":null,"default_value":"100","external_name":"large_threshold","restriction":"Int32"},{"name":"compress","doc":null,"default_value":"false","external_name":"compress","restriction":"Bool"},{"name":"properties","doc":null,"default_value":"DEFAULT_PROPERTIES","external_name":"properties","restriction":"Gateway::IdentifyProperties"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, client_id, shard, large_threshold, compress, properties)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cache:Cache?-instance-method","html_id":"cache:Cache?-instance-method","name":"cache","doc":"If this is set to any `Cache`, the data in the cache will be updated as\nthe client receives the corresponding gateway dispatches.","summary":"<p>If this is set to any <code><a href=\"../Discord/Cache.html\">Cache</a></code>, the data in the cache will be updated as the client receives the corresponding gateway dispatches.</p>","abstract":false,"args":[],"args_string":" : Cache?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L24","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L24","def":{"name":"cache","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Cache | ::Nil","visibility":"Public","body":"@cache"}},{"id":"cache=(cache:Cache?)-instance-method","html_id":"cache=(cache:Cache?)-instance-method","name":"cache=","doc":"If this is set to any `Cache`, the data in the cache will be updated as\nthe client receives the corresponding gateway dispatches.","summary":"<p>If this is set to any <code><a href=\"../Discord/Cache.html\">Cache</a></code>, the data in the cache will be updated as the client receives the corresponding gateway dispatches.</p>","abstract":false,"args":[{"name":"cache","doc":null,"default_value":"","external_name":"cache","restriction":"Cache | ::Nil"}],"args_string":"(cache : Cache?)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L24","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L24","def":{"name":"cache=","args":[{"name":"cache","doc":null,"default_value":"","external_name":"cache","restriction":"Cache | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cache = cache"}},{"id":"client_id-instance-method","html_id":"client_id-instance-method","name":"client_id","doc":"Returns this client's ID as provided in its associated Oauth2 application.\nA getter for @client_id, this will make a REST call to obtain it\nif it was not provided in the initializer.","summary":"<p>Returns this client's ID as provided in its associated Oauth2 application.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L97","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L97","def":{"name":"client_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@client_id || (@client_id = get_oauth2_application.id)"}},{"id":"inject(packet:Discord::WebSocket::Packet)-instance-method","html_id":"inject(packet:Discord::WebSocket::Packet)-instance-method","name":"inject","doc":"Injects a *packet* into the packet handler.","summary":"<p>Injects a <em>packet</em> into the packet handler.</p>","abstract":false,"args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Discord::WebSocket::Packet"}],"args_string":"(packet : Discord::WebSocket::Packet)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L229","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L229","def":{"name":"inject","args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Discord::WebSocket::Packet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"on_message(packet)"}},{"id":"on_channel_create(&handler:Channel->)-instance-method","html_id":"on_channel_create(&amp;handler:Channel-&gt;)-instance-method","name":"on_channel_create","doc":"Called when a channel has been created on a server the bot has access to,\nor when somebody has started a DM channel with the bot.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#channel-create)","summary":"<p>Called when a channel has been created on a server the bot has access to, or when somebody has started a DM channel with the bot.</p>","abstract":false,"args":[],"args_string":"(&handler : Channel -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L637","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L637","def":{"name":"on_channel_create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Channel -> )"},"return_type":"","visibility":"Public","body":"(@on_channel_create_handlers || (@on_channel_create_handlers = [] of (Channel -> ))) << handler"}},{"id":"on_channel_delete(&handler:Channel->)-instance-method","html_id":"on_channel_delete(&amp;handler:Channel-&gt;)-instance-method","name":"on_channel_delete","doc":"Called when a channel the bot has access to is deleted. This is not called\nfor other users closing the DM channel with the bot, only for the bot\nclosing the DM channel with a user.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#channel-delete)","summary":"<p>Called when a channel the bot has access to is deleted.</p>","abstract":false,"args":[],"args_string":"(&handler : Channel -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L650","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L650","def":{"name":"on_channel_delete","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Channel -> )"},"return_type":"","visibility":"Public","body":"(@on_channel_delete_handlers || (@on_channel_delete_handlers = [] of (Channel -> ))) << handler"}},{"id":"on_channel_pins_update(&handler:Gateway::ChannelPinsUpdatePayload->)-instance-method","html_id":"on_channel_pins_update(&amp;handler:Gateway::ChannelPinsUpdatePayload-&gt;)-instance-method","name":"on_channel_pins_update","doc":"Called when a channel's pinned messages are updated, where a pin was\neither added or removed.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#channel-pins-update)","summary":"<p>Called when a channel's pinned messages are updated, where a pin was either added or removed.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::ChannelPinsUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L656","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L656","def":{"name":"on_channel_pins_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::ChannelPinsUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_channel_pins_update_handlers || (@on_channel_pins_update_handlers = [] of (Gateway::ChannelPinsUpdatePayload -> ))) << handler"}},{"id":"on_channel_update(&handler:Channel->)-instance-method","html_id":"on_channel_update(&amp;handler:Channel-&gt;)-instance-method","name":"on_channel_update","doc":"Called when a channel's properties are updated, like the name or\npermission overwrites.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#channel-update)","summary":"<p>Called when a channel's properties are updated, like the name or permission overwrites.</p>","abstract":false,"args":[],"args_string":"(&handler : Channel -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L643","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L643","def":{"name":"on_channel_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Channel -> )"},"return_type":"","visibility":"Public","body":"(@on_channel_update_handlers || (@on_channel_update_handlers = [] of (Channel -> ))) << handler"}},{"id":"on_dispatch(&handler:::Tuple(String,IO::Memory)->)-instance-method","html_id":"on_dispatch(&amp;handler:::Tuple(String,IO::Memory)-&gt;)-instance-method","name":"on_dispatch","doc":"Called when the bot receives any kind of dispatch at all, even one that\nis otherwise unsupported. This can be useful for statistics, e. g. how\nmany gateway events are received per second. It can also be useful to\nhandle new API changes not yet supported by the lib.\n\nThe parameter passed to the event will be a tuple of `{type, data}`, where\n`type` is the event type (e.g. \"MESSAGE_CREATE\") and `data` is the\nunprocessed JSON event data.","summary":"<p>Called when the bot receives any kind of dispatch at all, even one that is otherwise unsupported.</p>","abstract":false,"args":[],"args_string":"(&handler : ::Tuple(String, IO::Memory) -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L615","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L615","def":{"name":"on_dispatch","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(::Tuple(String, IO::Memory) -> )"},"return_type":"","visibility":"Public","body":"(@on_dispatch_handlers || (@on_dispatch_handlers = [] of (::Tuple(String, IO::Memory) -> ))) << handler"}},{"id":"on_guild_ban_add(&handler:Gateway::GuildBanPayload->)-instance-method","html_id":"on_guild_ban_add(&amp;handler:Gateway::GuildBanPayload-&gt;)-instance-method","name":"on_guild_ban_add","doc":"Called when somebody is banned from a guild. A `#on_guild_member_remove`\nevent is also called.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-ban-add)","summary":"<p>Called when somebody is banned from a guild.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildBanPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L683","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L683","def":{"name":"on_guild_ban_add","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildBanPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_ban_add_handlers || (@on_guild_ban_add_handlers = [] of (Gateway::GuildBanPayload -> ))) << handler"}},{"id":"on_guild_ban_remove(&handler:Gateway::GuildBanPayload->)-instance-method","html_id":"on_guild_ban_remove(&amp;handler:Gateway::GuildBanPayload-&gt;)-instance-method","name":"on_guild_ban_remove","doc":"Called when somebody is unbanned from a guild.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-ban-remove)","summary":"<p>Called when somebody is unbanned from a guild.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildBanPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L688","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L688","def":{"name":"on_guild_ban_remove","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildBanPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_ban_remove_handlers || (@on_guild_ban_remove_handlers = [] of (Gateway::GuildBanPayload -> ))) << handler"}},{"id":"on_guild_create(&handler:Gateway::GuildCreatePayload->)-instance-method","html_id":"on_guild_create(&amp;handler:Gateway::GuildCreatePayload-&gt;)-instance-method","name":"on_guild_create","doc":"Called when the bot is added to a guild, a guild unavailable due to an\noutage becomes available again, or the guild is streamed after READY.\nTo verify that it is the first case, you can check the `unavailable`\nproperty in `Gateway::GuildCreatePayload`.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-create)","summary":"<p>Called when the bot is added to a guild, a guild unavailable due to an outage becomes available again, or the guild is streamed after READY.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildCreatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L664","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L664","def":{"name":"on_guild_create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildCreatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_create_handlers || (@on_guild_create_handlers = [] of (Gateway::GuildCreatePayload -> ))) << handler"}},{"id":"on_guild_delete(&handler:Gateway::GuildDeletePayload->)-instance-method","html_id":"on_guild_delete(&amp;handler:Gateway::GuildDeletePayload-&gt;)-instance-method","name":"on_guild_delete","doc":"Called when the bot leaves a guild or a guild becomes unavailable due to\nan outage. To verify that it is the former case, you can check the\n`unavailable` property.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-delete)","summary":"<p>Called when the bot leaves a guild or a guild becomes unavailable due to an outage.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildDeletePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L677","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L677","def":{"name":"on_guild_delete","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildDeletePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_delete_handlers || (@on_guild_delete_handlers = [] of (Gateway::GuildDeletePayload -> ))) << handler"}},{"id":"on_guild_emoji_update(&handler:Gateway::GuildEmojiUpdatePayload->)-instance-method","html_id":"on_guild_emoji_update(&amp;handler:Gateway::GuildEmojiUpdatePayload-&gt;)-instance-method","name":"on_guild_emoji_update","doc":"Called when a guild's emoji are updated.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-emoji-update)","summary":"<p>Called when a guild's emoji are updated.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildEmojiUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L693","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L693","def":{"name":"on_guild_emoji_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildEmojiUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_emoji_update_handlers || (@on_guild_emoji_update_handlers = [] of (Gateway::GuildEmojiUpdatePayload -> ))) << handler"}},{"id":"on_guild_integrations_update(&handler:Gateway::GuildIntegrationsUpdatePayload->)-instance-method","html_id":"on_guild_integrations_update(&amp;handler:Gateway::GuildIntegrationsUpdatePayload-&gt;)-instance-method","name":"on_guild_integrations_update","doc":"Called when a guild's integrations (Twitch, YouTube) are updated.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-integrations-update)","summary":"<p>Called when a guild's integrations (Twitch, YouTube) are updated.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildIntegrationsUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L698","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L698","def":{"name":"on_guild_integrations_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildIntegrationsUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_integrations_update_handlers || (@on_guild_integrations_update_handlers = [] of (Gateway::GuildIntegrationsUpdatePayload -> ))) << handler"}},{"id":"on_guild_member_add(&handler:Gateway::GuildMemberAddPayload->)-instance-method","html_id":"on_guild_member_add(&amp;handler:Gateway::GuildMemberAddPayload-&gt;)-instance-method","name":"on_guild_member_add","doc":"Called when somebody other than the bot joins a guild.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-member-add)","summary":"<p>Called when somebody other than the bot joins a guild.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildMemberAddPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L703","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L703","def":{"name":"on_guild_member_add","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildMemberAddPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_member_add_handlers || (@on_guild_member_add_handlers = [] of (Gateway::GuildMemberAddPayload -> ))) << handler"}},{"id":"on_guild_member_remove(&handler:Gateway::GuildMemberRemovePayload->)-instance-method","html_id":"on_guild_member_remove(&amp;handler:Gateway::GuildMemberRemovePayload-&gt;)-instance-method","name":"on_guild_member_remove","doc":"Called when somebody other than the bot leaves a guild.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-member-remove)","summary":"<p>Called when somebody other than the bot leaves a guild.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildMemberRemovePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L714","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L714","def":{"name":"on_guild_member_remove","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildMemberRemovePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_member_remove_handlers || (@on_guild_member_remove_handlers = [] of (Gateway::GuildMemberRemovePayload -> ))) << handler"}},{"id":"on_guild_member_update(&handler:Gateway::GuildMemberUpdatePayload->)-instance-method","html_id":"on_guild_member_update(&amp;handler:Gateway::GuildMemberUpdatePayload-&gt;)-instance-method","name":"on_guild_member_update","doc":"Called when a member object is updated. This happens when somebody\nchanges their nickname or has their roles changed.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-member-update)","summary":"<p>Called when a member object is updated.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildMemberUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L709","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L709","def":{"name":"on_guild_member_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildMemberUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_member_update_handlers || (@on_guild_member_update_handlers = [] of (Gateway::GuildMemberUpdatePayload -> ))) << handler"}},{"id":"on_guild_members_chunk(&handler:Gateway::GuildMembersChunkPayload->)-instance-method","html_id":"on_guild_members_chunk(&amp;handler:Gateway::GuildMembersChunkPayload-&gt;)-instance-method","name":"on_guild_members_chunk","doc":"Called when Discord sends a chunk of member objects after a\n`#request_guild_members` call. If a `Cache` is set up, this is handled\nautomatically.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-members-chunk)","summary":"<p>Called when Discord sends a chunk of member objects after a <code><a href=\"../Discord/Client.html#request_guild_members%28guild_id%3AUInt64%2Cquery%3AString%3D%26quot%3B%26quot%3B%2Climit%3AInt32%3D0%29-instance-method\">#request_guild_members</a></code> call.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildMembersChunkPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L721","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L721","def":{"name":"on_guild_members_chunk","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildMembersChunkPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_members_chunk_handlers || (@on_guild_members_chunk_handlers = [] of (Gateway::GuildMembersChunkPayload -> ))) << handler"}},{"id":"on_guild_role_create(&handler:Gateway::GuildRolePayload->)-instance-method","html_id":"on_guild_role_create(&amp;handler:Gateway::GuildRolePayload-&gt;)-instance-method","name":"on_guild_role_create","doc":"Called when a role is created on a guild.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-role-create)","summary":"<p>Called when a role is created on a guild.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildRolePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L726","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L726","def":{"name":"on_guild_role_create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildRolePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_role_create_handlers || (@on_guild_role_create_handlers = [] of (Gateway::GuildRolePayload -> ))) << handler"}},{"id":"on_guild_role_delete(&handler:Gateway::GuildRoleDeletePayload->)-instance-method","html_id":"on_guild_role_delete(&amp;handler:Gateway::GuildRoleDeletePayload-&gt;)-instance-method","name":"on_guild_role_delete","doc":"Called when a role is deleted.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-role-delete)","summary":"<p>Called when a role is deleted.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildRoleDeletePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L736","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L736","def":{"name":"on_guild_role_delete","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildRoleDeletePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_role_delete_handlers || (@on_guild_role_delete_handlers = [] of (Gateway::GuildRoleDeletePayload -> ))) << handler"}},{"id":"on_guild_role_update(&handler:Gateway::GuildRolePayload->)-instance-method","html_id":"on_guild_role_update(&amp;handler:Gateway::GuildRolePayload-&gt;)-instance-method","name":"on_guild_role_update","doc":"Called when a role's properties are updated, for example name or colour.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-role-update)","summary":"<p>Called when a role's properties are updated, for example name or colour.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::GuildRolePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L731","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L731","def":{"name":"on_guild_role_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::GuildRolePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_role_update_handlers || (@on_guild_role_update_handlers = [] of (Gateway::GuildRolePayload -> ))) << handler"}},{"id":"on_guild_update(&handler:Guild->)-instance-method","html_id":"on_guild_update(&amp;handler:Guild-&gt;)-instance-method","name":"on_guild_update","doc":"Called when a guild's properties, like name or verification level, are\nupdated.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#guild-update)","summary":"<p>Called when a guild's properties, like name or verification level, are updated.</p>","abstract":false,"args":[],"args_string":"(&handler : Guild -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L670","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L670","def":{"name":"on_guild_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Guild -> )"},"return_type":"","visibility":"Public","body":"(@on_guild_update_handlers || (@on_guild_update_handlers = [] of (Guild -> ))) << handler"}},{"id":"on_message_create(&handler:Message->)-instance-method","html_id":"on_message_create(&amp;handler:Message-&gt;)-instance-method","name":"on_message_create","doc":"Called when a message is sent to a channel the bot has access to. This\nmay be any sort of text channel, no matter private or guild.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#message-create)","summary":"<p>Called when a message is sent to a channel the bot has access to.</p>","abstract":false,"args":[],"args_string":"(&handler : Message -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L742","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L742","def":{"name":"on_message_create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Message -> )"},"return_type":"","visibility":"Public","body":"(@on_message_create_handlers || (@on_message_create_handlers = [] of (Message -> ))) << handler"}},{"id":"on_message_delete(&handler:Gateway::MessageDeletePayload->)-instance-method","html_id":"on_message_delete(&amp;handler:Gateway::MessageDeletePayload-&gt;)-instance-method","name":"on_message_delete","doc":"Called when a single message is deleted.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#message-delete)","summary":"<p>Called when a single message is deleted.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::MessageDeletePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L763","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L763","def":{"name":"on_message_delete","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::MessageDeletePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_message_delete_handlers || (@on_message_delete_handlers = [] of (Gateway::MessageDeletePayload -> ))) << handler"}},{"id":"on_message_delete_bulk(&handler:Gateway::MessageDeleteBulkPayload->)-instance-method","html_id":"on_message_delete_bulk(&amp;handler:Gateway::MessageDeleteBulkPayload-&gt;)-instance-method","name":"on_message_delete_bulk","doc":"Called when multiple messages are deleted at once, due to a bot using the\nbulk_delete endpoint.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#message-delete-bulk)","summary":"<p>Called when multiple messages are deleted at once, due to a bot using the bulk_delete endpoint.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::MessageDeleteBulkPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L769","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L769","def":{"name":"on_message_delete_bulk","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::MessageDeleteBulkPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_message_delete_bulk_handlers || (@on_message_delete_bulk_handlers = [] of (Gateway::MessageDeleteBulkPayload -> ))) << handler"}},{"id":"on_message_reaction_add(&handler:Gateway::MessageReactionPayload->)-instance-method","html_id":"on_message_reaction_add(&amp;handler:Gateway::MessageReactionPayload-&gt;)-instance-method","name":"on_message_reaction_add","doc":"Called when a reaction is added to a message.","summary":"<p>Called when a reaction is added to a message.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::MessageReactionPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L745","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L745","def":{"name":"on_message_reaction_add","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::MessageReactionPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_message_reaction_add_handlers || (@on_message_reaction_add_handlers = [] of (Gateway::MessageReactionPayload -> ))) << handler"}},{"id":"on_message_reaction_remove(&handler:Gateway::MessageReactionPayload->)-instance-method","html_id":"on_message_reaction_remove(&amp;handler:Gateway::MessageReactionPayload-&gt;)-instance-method","name":"on_message_reaction_remove","doc":"Called when a reaction is removed from a message.","summary":"<p>Called when a reaction is removed from a message.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::MessageReactionPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L748","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L748","def":{"name":"on_message_reaction_remove","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::MessageReactionPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_message_reaction_remove_handlers || (@on_message_reaction_remove_handlers = [] of (Gateway::MessageReactionPayload -> ))) << handler"}},{"id":"on_message_reaction_remove_all(&handler:Gateway::MessageReactionRemoveAllPayload->)-instance-method","html_id":"on_message_reaction_remove_all(&amp;handler:Gateway::MessageReactionRemoveAllPayload-&gt;)-instance-method","name":"on_message_reaction_remove_all","doc":"Called when all reactions are removed at once from a message.","summary":"<p>Called when all reactions are removed at once from a message.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::MessageReactionRemoveAllPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L751","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L751","def":{"name":"on_message_reaction_remove_all","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::MessageReactionRemoveAllPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_message_reaction_remove_all_handlers || (@on_message_reaction_remove_all_handlers = [] of (Gateway::MessageReactionRemoveAllPayload -> ))) << handler"}},{"id":"on_message_update(&handler:Gateway::MessageUpdatePayload->)-instance-method","html_id":"on_message_update(&amp;handler:Gateway::MessageUpdatePayload-&gt;)-instance-method","name":"on_message_update","doc":"Called when a message is updated. Most commonly this is done for edited\nmessages, but the event is also sent when embed information for an\nexisting message is updated.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#message-update)","summary":"<p>Called when a message is updated.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::MessageUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L758","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L758","def":{"name":"on_message_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::MessageUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_message_update_handlers || (@on_message_update_handlers = [] of (Gateway::MessageUpdatePayload -> ))) << handler"}},{"id":"on_presence_update(&handler:Gateway::PresenceUpdatePayload->)-instance-method","html_id":"on_presence_update(&amp;handler:Gateway::PresenceUpdatePayload-&gt;)-instance-method","name":"on_presence_update","doc":"Called when a user updates their status (online/idle/offline), the game\nthey are playing, or their streaming status. Also called when a user's\nproperties (user/avatar/discriminator) are changed.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#presence-update)","summary":"<p>Called when a user updates their status (online/idle/offline), the game they are playing, or their streaming status.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::PresenceUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L776","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L776","def":{"name":"on_presence_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::PresenceUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_presence_update_handlers || (@on_presence_update_handlers = [] of (Gateway::PresenceUpdatePayload -> ))) << handler"}},{"id":"on_ready(&handler:Gateway::ReadyPayload->)-instance-method","html_id":"on_ready(&amp;handler:Gateway::ReadyPayload-&gt;)-instance-method","name":"on_ready","doc":"Called when the bot has successfully initiated a session with Discord. It\nmarks the point when gateway packets can be set (e. g. `#status_update`).\n\nNote that this event may be called multiple times over the course of a\nbot lifetime, as it is also called when the client reconnects with a new\nsession.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#ready)","summary":"<p>Called when the bot has successfully initiated a session with Discord.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::ReadyPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L625","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L625","def":{"name":"on_ready","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::ReadyPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_ready_handlers || (@on_ready_handlers = [] of (Gateway::ReadyPayload -> ))) << handler"}},{"id":"on_resumed(&handler:Gateway::ResumedPayload->)-instance-method","html_id":"on_resumed(&amp;handler:Gateway::ResumedPayload-&gt;)-instance-method","name":"on_resumed","doc":"Called when the client has successfully resumed an existing connection\nafter reconnecting.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#resumed)","summary":"<p>Called when the client has successfully resumed an existing connection after reconnecting.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::ResumedPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L631","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L631","def":{"name":"on_resumed","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::ResumedPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_resumed_handlers || (@on_resumed_handlers = [] of (Gateway::ResumedPayload -> ))) << handler"}},{"id":"on_typing_start(&handler:Gateway::TypingStartPayload->)-instance-method","html_id":"on_typing_start(&amp;handler:Gateway::TypingStartPayload-&gt;)-instance-method","name":"on_typing_start","doc":"Called when somebody starts typing in a channel the bot has access to.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#typing-start)","summary":"<p>Called when somebody starts typing in a channel the bot has access to.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::TypingStartPayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L781","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L781","def":{"name":"on_typing_start","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::TypingStartPayload -> )"},"return_type":"","visibility":"Public","body":"(@on_typing_start_handlers || (@on_typing_start_handlers = [] of (Gateway::TypingStartPayload -> ))) << handler"}},{"id":"on_user_update(&handler:User->)-instance-method","html_id":"on_user_update(&amp;handler:User-&gt;)-instance-method","name":"on_user_update","doc":"Called when the user properties of the bot itself are changed.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#user-update)","summary":"<p>Called when the user properties of the bot itself are changed.</p>","abstract":false,"args":[],"args_string":"(&handler : User -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L786","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L786","def":{"name":"on_user_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(User -> )"},"return_type":"","visibility":"Public","body":"(@on_user_update_handlers || (@on_user_update_handlers = [] of (User -> ))) << handler"}},{"id":"on_voice_server_update(&handler:Gateway::VoiceServerUpdatePayload->)-instance-method","html_id":"on_voice_server_update(&amp;handler:Gateway::VoiceServerUpdatePayload-&gt;)-instance-method","name":"on_voice_server_update","doc":"Called when a guild's voice server changes. This event is called with\nthe current voice server when initially connecting to voice, and it is\ncalled again with the new voice server when the current server fails over\nto a new one, or when the guild's voice region changes.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#voice-server-update)","summary":"<p>Called when a guild's voice server changes.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::VoiceServerUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L800","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L800","def":{"name":"on_voice_server_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::VoiceServerUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_voice_server_update_handlers || (@on_voice_server_update_handlers = [] of (Gateway::VoiceServerUpdatePayload -> ))) << handler"}},{"id":"on_voice_state_update(&handler:VoiceState->)-instance-method","html_id":"on_voice_state_update(&amp;handler:VoiceState-&gt;)-instance-method","name":"on_voice_state_update","doc":"Called when somebody joins or leaves a voice channel, moves to a different\none, or is muted/unmuted/deafened/undeafened.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#voice-state-update)","summary":"<p>Called when somebody joins or leaves a voice channel, moves to a different one, or is muted/unmuted/deafened/undeafened.</p>","abstract":false,"args":[],"args_string":"(&handler : VoiceState -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L792","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L792","def":{"name":"on_voice_state_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(VoiceState -> )"},"return_type":"","visibility":"Public","body":"(@on_voice_state_update_handlers || (@on_voice_state_update_handlers = [] of (VoiceState -> ))) << handler"}},{"id":"on_webhooks_update(&handler:Gateway::WebhooksUpdatePayload->)-instance-method","html_id":"on_webhooks_update(&amp;handler:Gateway::WebhooksUpdatePayload-&gt;)-instance-method","name":"on_webhooks_update","doc":"Sent when a guild channel's webhook is created, updated, or deleted.\n\n[API docs for this event](https://discordapp.com/developers/docs/topics/gateway#webhooks-update)","summary":"<p>Sent when a guild channel's webhook is created, updated, or deleted.</p>","abstract":false,"args":[],"args_string":"(&handler : Gateway::WebhooksUpdatePayload -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L805","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L805","def":{"name":"on_webhooks_update","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Gateway::WebhooksUpdatePayload -> )"},"return_type":"","visibility":"Public","body":"(@on_webhooks_update_handlers || (@on_webhooks_update_handlers = [] of (Gateway::WebhooksUpdatePayload -> ))) << handler"}},{"id":"reconnect(should_suspend=false,backoff_override=nil)-instance-method","html_id":"reconnect(should_suspend=false,backoff_override=nil)-instance-method","name":"reconnect","doc":"Reconnects the websocket connection entirely. If *should_suspend* is set,\nthe session will be suspended, which means (unless other factors prevent\nthis) that the session will be resumed after reconnection. If\n*backoff_override* is set to anything other than `nil`, the reconnection\nbackoff will not use the standard formula and instead wait the value\nprovided; use `0.0` to skip waiting entirely.","summary":"<p>Reconnects the websocket connection entirely.</p>","abstract":false,"args":[{"name":"should_suspend","doc":null,"default_value":"false","external_name":"should_suspend","restriction":""},{"name":"backoff_override","doc":null,"default_value":"nil","external_name":"backoff_override","restriction":""}],"args_string":"(should_suspend = <span class=\"n\">false</span>, backoff_override = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L307","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L307","def":{"name":"reconnect","args":[{"name":"should_suspend","doc":null,"default_value":"false","external_name":"should_suspend","restriction":""},{"name":"backoff_override","doc":null,"default_value":"nil","external_name":"backoff_override","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if backoff_override\n  @backoff = backoff_override\nend\n@send_heartbeats = false\nwebsocket.close\nif should_suspend\n  @session.try(&.suspend)\nend\n"}},{"id":"request_guild_members(guild_id:UInt64,query:String=&quot;&quot;,limit:Int32=0)-instance-method","html_id":"request_guild_members(guild_id:UInt64,query:String=&amp;quot;&amp;quot;,limit:Int32=0)-instance-method","name":"request_guild_members","doc":"Requests a full list of members to be sent for a specific guild. This is\nnecessary to get the entire members list for guilds considered large (what\nis considered large can be changed using the large_threshold parameter\nin `#initialize`).\n\nThe list will arrive in the form of GUILD_MEMBERS_CHUNK dispatch events,\nwhich can be listened to using `#on_guild_members_chunk`. If a cache\nis set up, arriving members will be cached automatically.","summary":"<p>Requests a full list of members to be sent for a specific guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"query","doc":null,"default_value":"\"\"","external_name":"query","restriction":"String"},{"name":"limit","doc":null,"default_value":"0","external_name":"limit","restriction":"Int32"}],"args_string":"(guild_id : UInt64, query : String = <span class=\"s\">&quot;&quot;</span>, limit : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L347","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L347","def":{"name":"request_guild_members","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"query","doc":null,"default_value":"\"\"","external_name":"query","restriction":"String"},{"name":"limit","doc":null,"default_value":"0","external_name":"limit","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"packet = Gateway::RequestGuildMembersPacket.new(guild_id, query, limit)\nwebsocket.send(packet.to_json)\n"}},{"id":"resume(sequence:Int64?=nil)-instance-method","html_id":"resume(sequence:Int64?=nil)-instance-method","name":"resume","doc":"Sends a resume packet from the given *sequence* number, or alternatively\nthe current session's last received sequence if none is given. This will\nmake Discord replay all events since that sequence.","summary":"<p>Sends a resume packet from the given <em>sequence</em> number, or alternatively the current session's last received sequence if none is given.</p>","abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"nil","external_name":"sequence","restriction":"Int64 | ::Nil"}],"args_string":"(sequence : Int64? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L293","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L293","def":{"name":"resume","args":[{"name":"sequence","doc":null,"default_value":"nil","external_name":"sequence","restriction":"Int64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"session = @session.not_nil!\nsequence || (sequence = session.sequence)\npacket = Gateway::ResumePacket.new(@token, session.session_id, sequence)\nwebsocket.send(packet.to_json)\n"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Connects this client to the gateway. This is required if the bot needs to\ndo anything beyond making REST API calls. Calling this method will block\nexecution until the bot is forcibly stopped.","summary":"<p>Connects this client to the gateway.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L104","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L104","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  begin\n    websocket.run\n  rescue ex\n    LOGGER.error(\"Received exception from WebSocket#run:\n#{ex.inspect_with_backtrace}\")\n  end\n  @send_heartbeats = false\n  @session.try(&.suspend)\n  if @should_reconnect\n  else\n    break\n  end\n  wait_for_reconnect\n  LOGGER.info(\"Reconnecting\")\n  @websocket = initialize_websocket\nend"}},{"id":"session:Gateway::Session?-instance-method","html_id":"session:Gateway::Session?-instance-method","name":"session","doc":"The internal *session* the client is currently using, necessary to create\na voice client, for example","summary":"<p>The internal <em>session</em> the client is currently using, necessary to create a voice client, for example</p>","abstract":false,"args":[],"args_string":" : Gateway::Session?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L28","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L28","def":{"name":"session","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Gateway::Session | ::Nil","visibility":"Public","body":"@session"}},{"id":"status_update(status:String?=nil,game:GamePlaying?=nil,afk:Bool=false,since:Int64?=nil)-instance-method","html_id":"status_update(status:String?=nil,game:GamePlaying?=nil,afk:Bool=false,since:Int64?=nil)-instance-method","name":"status_update","doc":"Sends a status update to Discord. The *status* can be `\"online\"`,\n`\"idle\"`, `\"dnd\"`, or `\"invisible\"`. Setting the *game* to a `GamePlaying`\nobject makes the bot appear as playing some game on Discord. *since* and\n*afk* can be used in conjunction to signify to Discord that the status\nchange is due to inactivity on the bot's part – this fulfills no cosmetic\npurpose.","summary":"<p>Sends a status update to Discord.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":"String | ::Nil"},{"name":"game","doc":null,"default_value":"nil","external_name":"game","restriction":"GamePlaying | ::Nil"},{"name":"afk","doc":null,"default_value":"false","external_name":"afk","restriction":"Bool"},{"name":"since","doc":null,"default_value":"nil","external_name":"since","restriction":"Int64 | ::Nil"}],"args_string":"(status : String? = <span class=\"n\">nil</span>, game : GamePlaying? = <span class=\"n\">nil</span>, afk : Bool = <span class=\"n\">false</span>, since : Int64? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L322","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L322","def":{"name":"status_update","args":[{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":"String | ::Nil"},{"name":"game","doc":null,"default_value":"nil","external_name":"game","restriction":"GamePlaying | ::Nil"},{"name":"afk","doc":null,"default_value":"false","external_name":"afk","restriction":"Bool"},{"name":"since","doc":null,"default_value":"nil","external_name":"since","restriction":"Int64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"packet = Gateway::StatusUpdatePacket.new(status, game, afk, since)\nwebsocket.send(packet.to_json)\n"}},{"id":"stop(message=nil)-instance-method","html_id":"stop(message=nil)-instance-method","name":"stop","doc":"Closes the gateway connection permanently","summary":"<p>Closes the gateway connection permanently</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L128","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L128","def":{"name":"stop","args":[{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@should_reconnect = false\n@websocket.close(message)\n"}},{"id":"voice_state_update(guild_id:UInt64,channel_id:UInt64?,self_mute:Bool,self_deaf:Bool)-instance-method","html_id":"voice_state_update(guild_id:UInt64,channel_id:UInt64?,self_mute:Bool,self_deaf:Bool)-instance-method","name":"voice_state_update","doc":"Sends a voice state update to Discord. This will create a new voice\nconnection on the given *guild_id* and *channel_id*, update an existing\none with new *self_mute* and *self_deaf* status, or disconnect from voice\nif the *channel_id* is `nil`.\n\ndiscordcr doesn't support sending or receiving any data from voice\nconnections yet - this will have to be done externally until that happens.","summary":"<p>Sends a voice state update to Discord.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64 | ::Nil"},{"name":"self_mute","doc":null,"default_value":"","external_name":"self_mute","restriction":"Bool"},{"name":"self_deaf","doc":null,"default_value":"","external_name":"self_deaf","restriction":"Bool"}],"args_string":"(guild_id : UInt64, channel_id : UInt64?, self_mute : Bool, self_deaf : Bool)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L334","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L334","def":{"name":"voice_state_update","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64 | ::Nil"},{"name":"self_mute","doc":null,"default_value":"","external_name":"self_mute","restriction":"Bool"},{"name":"self_deaf","doc":null,"default_value":"","external_name":"self_deaf","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"packet = Gateway::VoiceStateUpdatePacket.new(guild_id, channel_id, self_mute, self_deaf)\nwebsocket.send(packet.to_json)\n"}},{"id":"wait_for_reconnect-instance-method","html_id":"wait_for_reconnect-instance-method","name":"wait_for_reconnect","doc":"Separate method to wait an ever-increasing amount of time before reconnecting after being disconnected in an\nunexpected way","summary":"<p>Separate method to wait an ever-increasing amount of time before reconnecting after being disconnected in an unexpected way</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L135","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L135","def":{"name":"wait_for_reconnect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LOGGER.debug(\"Attempting to reconnect in #{@backoff} seconds.\")\nsleep(@backoff.seconds)\nif @backoff < 1.0\n  @backoff = 1.0\nend\n@backoff = @backoff * 1.5\nif @backoff > 120\n  @backoff = 115 + (rand * 10)\nend\n"}},{"id":"websocket-instance-method","html_id":"websocket-instance-method","name":"websocket","doc":"The internal websocket the client is currently using","summary":"<p>The internal websocket the client is currently using</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L31","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L31","def":{"name":"websocket","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket || (@websocket = begin\n  initialize_websocket\nend)"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/CodeException","path":"Discord/CodeException.html","kind":"class","full_name":"Discord::CodeException","name":"CodeException","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Discord/StatusException","kind":"class","full_name":"Discord::StatusException","name":"StatusException"},"ancestors":[{"html_id":"github.com/z64/discordcr/Discord/StatusException","kind":"class","full_name":"Discord::StatusException","name":"StatusException"},{"html_id":"github.com/z64/discordcr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/errors.cr","line_number":44,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"This exception is raised in `REST#request` when a request fails with an\nAPI error response that has a code and a descriptive message.","summary":"<p>This exception is raised in <code><a href=\"../Discord/REST.html#request%28route_key%3ASymbol%2Cmajor_parameter%3AUInt64%3F%2Cmethod%3AString%2Cpath%3AString%2Cheaders%3AHTTP%3A%3AHeaders%2Cbody%3AString%3F%29-instance-method\">REST#request</a></code> when a request fails with an API error response that has a code and a descriptive message.</p>","class_methods":[],"constructors":[{"id":"new(response:HTTP::Client::Response,error:APIError)-class-method","html_id":"new(response:HTTP::Client::Response,error:APIError)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"HTTP::Client::Response"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"APIError"}],"args_string":"(response : HTTP::Client::Response, error : APIError)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L47","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L47","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"HTTP::Client::Response"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"APIError"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response, error)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"error:APIError-instance-method","html_id":"error:APIError-instance-method","name":"error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : APIError","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L45","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L45","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"APIError","visibility":"Public","body":"@error"}},{"id":"error_code:Int32-instance-method","html_id":"error_code:Int32-instance-method","name":"error_code","doc":"The API error code that was returned by Discord, for example 20001 or\n50016.","summary":"<p>The API error code that was returned by Discord, for example 20001 or 50016.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L52","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L52","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@error.code"}},{"id":"error_message:String-instance-method","html_id":"error_message:String-instance-method","name":"error_message","doc":"The API error message that was returned by Discord, for example \"Bots\ncannot use this endpoint\" or \"Provided too few or too many messages to\ndelete. Must provide at least 2 and fewer than 100 messages to delete.\".","summary":"<p>The API error message that was returned by Discord, for example \"Bots cannot use this endpoint\" or \"Provided too few or too many messages to delete.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L59","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L59","def":{"name":"error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@error.message"}},{"id":"message-instance-method","html_id":"message-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L63","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L63","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@response.status_code} #{@response.status_message}: Code #{@error.code} - #{@error.message}\""}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L67","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L67","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((((((io << @response.status_code) << \" \") << @response.status_message) << \": Code \") << @error.code) << \" - \") << @error.message"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Connection","path":"Discord/Connection.html","kind":"struct","full_name":"Discord::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/user.cr","line_number":52,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_297:JSON::PullParser)-class-method","html_id":"new(__temp_297:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_297","doc":null,"default_value":"","external_name":"__temp_297","restriction":"::JSON::PullParser"}],"args_string":"(__temp_297 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_297","doc":null,"default_value":"","external_name":"__temp_297","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_297)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"revoked:Bool-instance-method","html_id":"revoked:Bool-instance-method","name":"revoked","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"revoked","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@revoked"}},{"id":"revoked=(_revoked:Bool)-instance-method","html_id":"revoked=(_revoked:Bool)-instance-method","name":"revoked=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_revoked","doc":null,"default_value":"","external_name":"_revoked","restriction":"Bool"}],"args_string":"(_revoked : Bool)","source_link":null,"source_link":null,"def":{"name":"revoked=","args":[{"name":"_revoked","doc":null,"default_value":"","external_name":"_revoked","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@revoked = _revoked"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _revoked = @revoked\n  if _revoked.nil?\n  else\n    json.field(\"revoked\") do\n      _revoked.to_json(json)\n    end\n  end\nend"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:String)-instance-method","html_id":"type=(_type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"args_string":"(_type : String)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","path":"Discord/DCA1Mappings.html","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/dca.cr","line_number":91,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"Mappings for DCA1 metadata","summary":"<p>Mappings for DCA1 metadata</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings/DCA","path":"Discord/DCA1Mappings/DCA.html","kind":"struct","full_name":"Discord::DCA1Mappings::DCA","name":"DCA","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":102,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1087:JSON::PullParser)-class-method","html_id":"new(__temp_1087:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1087","doc":null,"default_value":"","external_name":"__temp_1087","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1087 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1087","doc":null,"default_value":"","external_name":"__temp_1087","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1087)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _version = @version\n  if _version.nil?\n  else\n    json.field(\"version\") do\n      _version.to_json(json)\n    end\n  end\n  _tool = @tool\n  if _tool.nil?\n  else\n    json.field(\"tool\") do\n      _tool.to_json(json)\n    end\n  end\nend"}},{"id":"tool:Discord::DCA1Mappings::Tool-instance-method","html_id":"tool:Discord::DCA1Mappings::Tool-instance-method","name":"tool","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::DCA1Mappings::Tool","source_link":null,"source_link":null,"def":{"name":"tool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tool"}},{"id":"tool=(_tool:Tool)-instance-method","html_id":"tool=(_tool:Tool)-instance-method","name":"tool=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_tool","doc":null,"default_value":"","external_name":"_tool","restriction":"Tool"}],"args_string":"(_tool : Tool)","source_link":null,"source_link":null,"def":{"name":"tool=","args":[{"name":"_tool","doc":null,"default_value":"","external_name":"_tool","restriction":"Tool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tool = _tool"}},{"id":"version:Int32-instance-method","html_id":"version:Int32-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@version"}},{"id":"version=(_version:Int32)-instance-method","html_id":"version=(_version:Int32)-instance-method","name":"version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_version","doc":null,"default_value":"","external_name":"_version","restriction":"Int32"}],"args_string":"(_version : Int32)","source_link":null,"source_link":null,"def":{"name":"version=","args":[{"name":"_version","doc":null,"default_value":"","external_name":"_version","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@version = _version"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings/Info","path":"Discord/DCA1Mappings/Info.html","kind":"struct","full_name":"Discord::DCA1Mappings::Info","name":"Info","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":129,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1120:JSON::PullParser)-class-method","html_id":"new(__temp_1120:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1120","doc":null,"default_value":"","external_name":"__temp_1120","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1120 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1120","doc":null,"default_value":"","external_name":"__temp_1120","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1120)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"album:String?-instance-method","html_id":"album:String?-instance-method","name":"album","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"album","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@album"}},{"id":"album=(_album:::Union(String,Nil))-instance-method","html_id":"album=(_album:::Union(String,Nil))-instance-method","name":"album=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_album","doc":null,"default_value":"","external_name":"_album","restriction":"::Union(String, ::Nil)"}],"args_string":"(_album : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"album=","args":[{"name":"_album","doc":null,"default_value":"","external_name":"_album","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@album = _album"}},{"id":"artist:String?-instance-method","html_id":"artist:String?-instance-method","name":"artist","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"artist","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@artist"}},{"id":"artist=(_artist:::Union(String,Nil))-instance-method","html_id":"artist=(_artist:::Union(String,Nil))-instance-method","name":"artist=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_artist","doc":null,"default_value":"","external_name":"_artist","restriction":"::Union(String, ::Nil)"}],"args_string":"(_artist : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"artist=","args":[{"name":"_artist","doc":null,"default_value":"","external_name":"_artist","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@artist = _artist"}},{"id":"comments:String?-instance-method","html_id":"comments:String?-instance-method","name":"comments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"comments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@comments"}},{"id":"comments=(_comments:::Union(String,Nil))-instance-method","html_id":"comments=(_comments:::Union(String,Nil))-instance-method","name":"comments=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_comments","doc":null,"default_value":"","external_name":"_comments","restriction":"::Union(String, ::Nil)"}],"args_string":"(_comments : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"comments=","args":[{"name":"_comments","doc":null,"default_value":"","external_name":"_comments","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@comments = _comments"}},{"id":"cover:String?-instance-method","html_id":"cover:String?-instance-method","name":"cover","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"cover","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cover"}},{"id":"cover=(_cover:::Union(String,Nil))-instance-method","html_id":"cover=(_cover:::Union(String,Nil))-instance-method","name":"cover=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_cover","doc":null,"default_value":"","external_name":"_cover","restriction":"::Union(String, ::Nil)"}],"args_string":"(_cover : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"cover=","args":[{"name":"_cover","doc":null,"default_value":"","external_name":"_cover","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cover = _cover"}},{"id":"genre:String?-instance-method","html_id":"genre:String?-instance-method","name":"genre","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"genre","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@genre"}},{"id":"genre=(_genre:::Union(String,Nil))-instance-method","html_id":"genre=(_genre:::Union(String,Nil))-instance-method","name":"genre=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_genre","doc":null,"default_value":"","external_name":"_genre","restriction":"::Union(String, ::Nil)"}],"args_string":"(_genre : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"genre=","args":[{"name":"_genre","doc":null,"default_value":"","external_name":"_genre","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@genre = _genre"}},{"id":"title:String?-instance-method","html_id":"title:String?-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"title","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@title"}},{"id":"title=(_title:::Union(String,Nil))-instance-method","html_id":"title=(_title:::Union(String,Nil))-instance-method","name":"title=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"::Union(String, ::Nil)"}],"args_string":"(_title : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"title=","args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@title = _title"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _title = @title\n  if _title.nil?\n  else\n    json.field(\"title\") do\n      _title.to_json(json)\n    end\n  end\n  _artist = @artist\n  if _artist.nil?\n  else\n    json.field(\"artist\") do\n      _artist.to_json(json)\n    end\n  end\n  _album = @album\n  if _album.nil?\n  else\n    json.field(\"album\") do\n      _album.to_json(json)\n    end\n  end\n  _genre = @genre\n  if _genre.nil?\n  else\n    json.field(\"genre\") do\n      _genre.to_json(json)\n    end\n  end\n  _comments = @comments\n  if _comments.nil?\n  else\n    json.field(\"comments\") do\n      _comments.to_json(json)\n    end\n  end\n  _cover = @cover\n  if _cover.nil?\n  else\n    json.field(\"cover\") do\n      _cover.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings/Metadata","path":"Discord/DCA1Mappings/Metadata.html","kind":"struct","full_name":"Discord::DCA1Mappings::Metadata","name":"Metadata","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":92,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1074:JSON::PullParser)-class-method","html_id":"new(__temp_1074:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1074","doc":null,"default_value":"","external_name":"__temp_1074","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1074 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1074","doc":null,"default_value":"","external_name":"__temp_1074","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1074)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dca:Discord::DCA1Mappings::DCA-instance-method","html_id":"dca:Discord::DCA1Mappings::DCA-instance-method","name":"dca","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::DCA1Mappings::DCA","source_link":null,"source_link":null,"def":{"name":"dca","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dca"}},{"id":"dca=(_dca:DCA)-instance-method","html_id":"dca=(_dca:DCA)-instance-method","name":"dca=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_dca","doc":null,"default_value":"","external_name":"_dca","restriction":"DCA"}],"args_string":"(_dca : DCA)","source_link":null,"source_link":null,"def":{"name":"dca=","args":[{"name":"_dca","doc":null,"default_value":"","external_name":"_dca","restriction":"DCA"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dca = _dca"}},{"id":"extra:JSON::Any-instance-method","html_id":"extra:JSON::Any-instance-method","name":"extra","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSON::Any","source_link":null,"source_link":null,"def":{"name":"extra","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@extra"}},{"id":"extra=(_extra:JSON::Any)-instance-method","html_id":"extra=(_extra:JSON::Any)-instance-method","name":"extra=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_extra","doc":null,"default_value":"","external_name":"_extra","restriction":"JSON::Any"}],"args_string":"(_extra : JSON::Any)","source_link":null,"source_link":null,"def":{"name":"extra=","args":[{"name":"_extra","doc":null,"default_value":"","external_name":"_extra","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@extra = _extra"}},{"id":"info:Discord::DCA1Mappings::Info?-instance-method","html_id":"info:Discord::DCA1Mappings::Info?-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::DCA1Mappings::Info?","source_link":null,"source_link":null,"def":{"name":"info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@info"}},{"id":"info=(_info:::Union(Info,Nil))-instance-method","html_id":"info=(_info:::Union(Info,Nil))-instance-method","name":"info=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_info","doc":null,"default_value":"","external_name":"_info","restriction":"::Union(Info, ::Nil)"}],"args_string":"(_info : ::Union(Info, Nil))","source_link":null,"source_link":null,"def":{"name":"info=","args":[{"name":"_info","doc":null,"default_value":"","external_name":"_info","restriction":"::Union(Info, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@info = _info"}},{"id":"opus:Discord::DCA1Mappings::Opus-instance-method","html_id":"opus:Discord::DCA1Mappings::Opus-instance-method","name":"opus","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::DCA1Mappings::Opus","source_link":null,"source_link":null,"def":{"name":"opus","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@opus"}},{"id":"opus=(_opus:Opus)-instance-method","html_id":"opus=(_opus:Opus)-instance-method","name":"opus=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_opus","doc":null,"default_value":"","external_name":"_opus","restriction":"Opus"}],"args_string":"(_opus : Opus)","source_link":null,"source_link":null,"def":{"name":"opus=","args":[{"name":"_opus","doc":null,"default_value":"","external_name":"_opus","restriction":"Opus"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@opus = _opus"}},{"id":"origin:Discord::DCA1Mappings::Origin?-instance-method","html_id":"origin:Discord::DCA1Mappings::Origin?-instance-method","name":"origin","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::DCA1Mappings::Origin?","source_link":null,"source_link":null,"def":{"name":"origin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@origin"}},{"id":"origin=(_origin:::Union(Origin,Nil))-instance-method","html_id":"origin=(_origin:::Union(Origin,Nil))-instance-method","name":"origin=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_origin","doc":null,"default_value":"","external_name":"_origin","restriction":"::Union(Origin, ::Nil)"}],"args_string":"(_origin : ::Union(Origin, Nil))","source_link":null,"source_link":null,"def":{"name":"origin=","args":[{"name":"_origin","doc":null,"default_value":"","external_name":"_origin","restriction":"::Union(Origin, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@origin = _origin"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _dca = @dca\n  if _dca.nil?\n  else\n    json.field(\"dca\") do\n      _dca.to_json(json)\n    end\n  end\n  _opus = @opus\n  if _opus.nil?\n  else\n    json.field(\"opus\") do\n      _opus.to_json(json)\n    end\n  end\n  _info = @info\n  if _info.nil?\n  else\n    json.field(\"info\") do\n      _info.to_json(json)\n    end\n  end\n  _origin = @origin\n  if _origin.nil?\n  else\n    json.field(\"origin\") do\n      _origin.to_json(json)\n    end\n  end\n  _extra = @extra\n  if _extra.nil?\n  else\n    json.field(\"extra\") do\n      _extra.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings/Opus","path":"Discord/DCA1Mappings/Opus.html","kind":"struct","full_name":"Discord::DCA1Mappings::Opus","name":"Opus","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":118,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1105:JSON::PullParser)-class-method","html_id":"new(__temp_1105:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1105","doc":null,"default_value":"","external_name":"__temp_1105","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1105 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1105","doc":null,"default_value":"","external_name":"__temp_1105","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1105)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"abr:Int32?-instance-method","html_id":"abr:Int32?-instance-method","name":"abr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"source_link":null,"def":{"name":"abr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@abr"}},{"id":"abr=(_abr:::Union(Int32,Nil))-instance-method","html_id":"abr=(_abr:::Union(Int32,Nil))-instance-method","name":"abr=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_abr","doc":null,"default_value":"","external_name":"_abr","restriction":"::Union(Int32, ::Nil)"}],"args_string":"(_abr : ::Union(Int32, Nil))","source_link":null,"source_link":null,"def":{"name":"abr=","args":[{"name":"_abr","doc":null,"default_value":"","external_name":"_abr","restriction":"::Union(Int32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@abr = _abr"}},{"id":"channels:Int32-instance-method","html_id":"channels:Int32-instance-method","name":"channels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels"}},{"id":"channels=(_channels:Int32)-instance-method","html_id":"channels=(_channels:Int32)-instance-method","name":"channels=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channels","doc":null,"default_value":"","external_name":"_channels","restriction":"Int32"}],"args_string":"(_channels : Int32)","source_link":null,"source_link":null,"def":{"name":"channels=","args":[{"name":"_channels","doc":null,"default_value":"","external_name":"_channels","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels = _channels"}},{"id":"frame_size:Int32-instance-method","html_id":"frame_size:Int32-instance-method","name":"frame_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"frame_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@frame_size"}},{"id":"frame_size=(_frame_size:Int32)-instance-method","html_id":"frame_size=(_frame_size:Int32)-instance-method","name":"frame_size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_frame_size","doc":null,"default_value":"","external_name":"_frame_size","restriction":"Int32"}],"args_string":"(_frame_size : Int32)","source_link":null,"source_link":null,"def":{"name":"frame_size=","args":[{"name":"_frame_size","doc":null,"default_value":"","external_name":"_frame_size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@frame_size = _frame_size"}},{"id":"mode:String-instance-method","html_id":"mode:String-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode"}},{"id":"mode=(_mode:String)-instance-method","html_id":"mode=(_mode:String)-instance-method","name":"mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mode","doc":null,"default_value":"","external_name":"_mode","restriction":"String"}],"args_string":"(_mode : String)","source_link":null,"source_link":null,"def":{"name":"mode=","args":[{"name":"_mode","doc":null,"default_value":"","external_name":"_mode","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = _mode"}},{"id":"sample_rate:Int32-instance-method","html_id":"sample_rate:Int32-instance-method","name":"sample_rate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"sample_rate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sample_rate"}},{"id":"sample_rate=(_sample_rate:Int32)-instance-method","html_id":"sample_rate=(_sample_rate:Int32)-instance-method","name":"sample_rate=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sample_rate","doc":null,"default_value":"","external_name":"_sample_rate","restriction":"Int32"}],"args_string":"(_sample_rate : Int32)","source_link":null,"source_link":null,"def":{"name":"sample_rate=","args":[{"name":"_sample_rate","doc":null,"default_value":"","external_name":"_sample_rate","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sample_rate = _sample_rate"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _mode = @mode\n  if _mode.nil?\n  else\n    json.field(\"mode\") do\n      _mode.to_json(json)\n    end\n  end\n  _sample_rate = @sample_rate\n  if _sample_rate.nil?\n  else\n    json.field(\"sample_rate\") do\n      _sample_rate.to_json(json)\n    end\n  end\n  _frame_size = @frame_size\n  if _frame_size.nil?\n  else\n    json.field(\"frame_size\") do\n      _frame_size.to_json(json)\n    end\n  end\n  _abr = @abr\n  if _abr.nil?\n  else\n    json.field(\"abr\") do\n      _abr.to_json(json)\n    end\n  end\n  _vbr = @vbr\n  if _vbr.nil?\n  else\n    json.field(\"vbr\") do\n      _vbr.to_json(json)\n    end\n  end\n  _channels = @channels\n  if _channels.nil?\n  else\n    json.field(\"channels\") do\n      _channels.to_json(json)\n    end\n  end\nend"}},{"id":"vbr:Bool-instance-method","html_id":"vbr:Bool-instance-method","name":"vbr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"vbr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vbr"}},{"id":"vbr=(_vbr:Bool)-instance-method","html_id":"vbr=(_vbr:Bool)-instance-method","name":"vbr=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_vbr","doc":null,"default_value":"","external_name":"_vbr","restriction":"Bool"}],"args_string":"(_vbr : Bool)","source_link":null,"source_link":null,"def":{"name":"vbr=","args":[{"name":"_vbr","doc":null,"default_value":"","external_name":"_vbr","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vbr = _vbr"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings/Origin","path":"Discord/DCA1Mappings/Origin.html","kind":"struct","full_name":"Discord::DCA1Mappings::Origin","name":"Origin","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":140,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1135:JSON::PullParser)-class-method","html_id":"new(__temp_1135:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1135","doc":null,"default_value":"","external_name":"__temp_1135","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1135 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1135","doc":null,"default_value":"","external_name":"__temp_1135","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1135)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"abr:Int32?-instance-method","html_id":"abr:Int32?-instance-method","name":"abr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"source_link":null,"def":{"name":"abr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@abr"}},{"id":"abr=(_abr:::Union(Int32,Nil))-instance-method","html_id":"abr=(_abr:::Union(Int32,Nil))-instance-method","name":"abr=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_abr","doc":null,"default_value":"","external_name":"_abr","restriction":"::Union(Int32, ::Nil)"}],"args_string":"(_abr : ::Union(Int32, Nil))","source_link":null,"source_link":null,"def":{"name":"abr=","args":[{"name":"_abr","doc":null,"default_value":"","external_name":"_abr","restriction":"::Union(Int32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@abr = _abr"}},{"id":"channels:Int32?-instance-method","html_id":"channels:Int32?-instance-method","name":"channels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"source_link":null,"def":{"name":"channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels"}},{"id":"channels=(_channels:::Union(Int32,Nil))-instance-method","html_id":"channels=(_channels:::Union(Int32,Nil))-instance-method","name":"channels=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channels","doc":null,"default_value":"","external_name":"_channels","restriction":"::Union(Int32, ::Nil)"}],"args_string":"(_channels : ::Union(Int32, Nil))","source_link":null,"source_link":null,"def":{"name":"channels=","args":[{"name":"_channels","doc":null,"default_value":"","external_name":"_channels","restriction":"::Union(Int32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels = _channels"}},{"id":"encoding:String?-instance-method","html_id":"encoding:String?-instance-method","name":"encoding","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"encoding","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@encoding"}},{"id":"encoding=(_encoding:::Union(String,Nil))-instance-method","html_id":"encoding=(_encoding:::Union(String,Nil))-instance-method","name":"encoding=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_encoding","doc":null,"default_value":"","external_name":"_encoding","restriction":"::Union(String, ::Nil)"}],"args_string":"(_encoding : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"encoding=","args":[{"name":"_encoding","doc":null,"default_value":"","external_name":"_encoding","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@encoding = _encoding"}},{"id":"source:String?-instance-method","html_id":"source:String?-instance-method","name":"source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source"}},{"id":"source=(_source:::Union(String,Nil))-instance-method","html_id":"source=(_source:::Union(String,Nil))-instance-method","name":"source=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_source","doc":null,"default_value":"","external_name":"_source","restriction":"::Union(String, ::Nil)"}],"args_string":"(_source : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"source=","args":[{"name":"_source","doc":null,"default_value":"","external_name":"_source","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source = _source"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _source = @source\n  if _source.nil?\n  else\n    json.field(\"source\") do\n      _source.to_json(json)\n    end\n  end\n  _abr = @abr\n  if _abr.nil?\n  else\n    json.field(\"abr\") do\n      _abr.to_json(json)\n    end\n  end\n  _channels = @channels\n  if _channels.nil?\n  else\n    json.field(\"channels\") do\n      _channels.to_json(json)\n    end\n  end\n  _encoding = @encoding\n  if _encoding.nil?\n  else\n    json.field(\"encoding\") do\n      _encoding.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\nend"}},{"id":"url:String?-instance-method","html_id":"url:String?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings/Tool","path":"Discord/DCA1Mappings/Tool.html","kind":"struct","full_name":"Discord::DCA1Mappings::Tool","name":"Tool","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":109,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/DCA1Mappings","kind":"module","full_name":"Discord::DCA1Mappings","name":"DCA1Mappings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1094:JSON::PullParser)-class-method","html_id":"new(__temp_1094:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1094","doc":null,"default_value":"","external_name":"__temp_1094","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1094 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1094","doc":null,"default_value":"","external_name":"__temp_1094","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1094)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"author:String?-instance-method","html_id":"author:String?-instance-method","name":"author","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"author","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author"}},{"id":"author=(_author:::Union(String,Nil))-instance-method","html_id":"author=(_author:::Union(String,Nil))-instance-method","name":"author=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"::Union(String, ::Nil)"}],"args_string":"(_author : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"author=","args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author = _author"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _version = @version\n  if _version.nil?\n  else\n    json.field(\"version\") do\n      _version.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _author = @author\n  if _author.nil?\n  else\n    json.field(\"author\") do\n      _author.to_json(json)\n    end\n  end\nend"}},{"id":"url:String?-instance-method","html_id":"url:String?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"version:String-instance-method","html_id":"version:String-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@version"}},{"id":"version=(_version:String)-instance-method","html_id":"version=(_version:String)-instance-method","name":"version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_version","doc":null,"default_value":"","external_name":"_version","restriction":"String"}],"args_string":"(_version : String)","source_link":null,"source_link":null,"def":{"name":"version=","args":[{"name":"_version","doc":null,"default_value":"","external_name":"_version","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@version = _version"}}],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr/Discord/DCAParser","path":"Discord/DCAParser.html","kind":"class","full_name":"Discord::DCAParser","name":"DCAParser","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/dca.cr","line_number":6,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"DCA1_MAGIC","value":"\"DCA1\"","doc":"Magic string that identifies a DCA1 file","summary":"<p>Magic string that identifies a DCA1 file</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"Parser for the DCA file format, a simple wrapper around Opus made\nspecifically for Discord bots.","summary":"<p>Parser for the DCA file format, a simple wrapper around Opus made specifically for Discord bots.</p>","class_methods":[],"constructors":[{"id":"new(io:IO,raw=false,strict_metadata=true)-class-method","html_id":"new(io:IO,raw=false,strict_metadata=true)-class-method","name":"new","doc":"Create a new parser. It will read from the given *io*. If *raw* is set,\nthe file is assumed to be a DCA0 file, without any metadata. If the file's\nmetadata doesn't conform to the DCA1 specification and *strict_metadata*\nis set, then the parsing will fail with an error; if it is not set then\nthe metadata will silently be `nil`.","summary":"<p>Create a new parser.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"raw","doc":null,"default_value":"false","external_name":"raw","restriction":""},{"name":"strict_metadata","doc":null,"default_value":"true","external_name":"strict_metadata","restriction":""}],"args_string":"(io : IO, raw = <span class=\"n\">false</span>, strict_metadata = <span class=\"n\">true</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L18","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L18","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"raw","doc":null,"default_value":"false","external_name":"raw","restriction":""},{"name":"strict_metadata","doc":null,"default_value":"true","external_name":"strict_metadata","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, raw, strict_metadata)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"metadata:DCA1Mappings::Metadata?-instance-method","html_id":"metadata:DCA1Mappings::Metadata?-instance-method","name":"metadata","doc":"The parsed metadata, or nil if it could not be parsed.","summary":"<p>The parsed metadata, or nil if it could not be parsed.</p>","abstract":false,"args":[],"args_string":" : DCA1Mappings::Metadata?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L11","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L11","def":{"name":"metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DCA1Mappings::Metadata | ::Nil","visibility":"Public","body":"@metadata"}},{"id":"next_frame(reuse_buffer=false):Bytes?-instance-method","html_id":"next_frame(reuse_buffer=false):Bytes?-instance-method","name":"next_frame","doc":"Reads the next frame from the IO. If there is nothing left to read, it\nwill return `nil`.\n\nIf *reuse_buffer* is true, a large buffer will be allocated once and\nreused for future calls of this method, reducing the load on the GC and\npotentially reusing memory use overall; if it is false, a new buffer of\njust the correct size will be allocated every time. Note that if the\nbuffer is reused, the returned data is only valid until the next call to\n`next_frame`.","summary":"<p>Reads the next frame from the IO.</p>","abstract":false,"args":[{"name":"reuse_buffer","doc":null,"default_value":"false","external_name":"reuse_buffer","restriction":""}],"args_string":"(reuse_buffer = <span class=\"n\">false</span>) : Bytes?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L34","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L34","def":{"name":"next_frame","args":[{"name":"reuse_buffer","doc":null,"default_value":"false","external_name":"reuse_buffer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes | ::Nil","visibility":"Public","body":"begin\n  header = @io.read_bytes(Int16, IO::ByteFormat::LittleEndian)\n  if header < 0\n    raise(\"Negative frame header (#{header} < 0)\")\n  end\n  buf = if reuse_buffer\n    full_buf = @reused_buffer || (@reused_buffer = Bytes.new(Int16::MAX))\n    full_buf[0, header]\n  else\n    Bytes.new(header)\n  end\n  @io.read_fully(buf)\n  buf\nrescue IO::EOFError\n  nil\nend"}},{"id":"parse(&block:Bytes->)-instance-method","html_id":"parse(&amp;block:Bytes-&gt;)-instance-method","name":"parse","doc":"Continually reads frames from the IO until there are none left. Each frame\nis passed to the given *block*.","summary":"<p>Continually reads frames from the IO until there are none left.</p>","abstract":false,"args":[],"args_string":"(&block : Bytes -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L55","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/dca.cr#L55","def":{"name":"parse","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Bytes -> )"},"return_type":"","visibility":"Public","body":"loop do\n  buf = next_frame\n  if buf\n    block.call(buf)\n  else\n    break\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Embed","path":"Discord/Embed.html","kind":"struct","full_name":"Discord::Embed","name":"Embed","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":103,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(title:String?=nil,type:String=&quot;rich&quot;,description:String?=nil,url:String?=nil,timestamp:Time?=nil,colour:UInt32?=nil,footer:EmbedFooter?=nil,image:EmbedImage?=nil,thumbnail:EmbedThumbnail?=nil,author:EmbedAuthor?=nil,fields:Array(EmbedField)?=nil)-class-method","html_id":"new(title:String?=nil,type:String=&amp;quot;rich&amp;quot;,description:String?=nil,url:String?=nil,timestamp:Time?=nil,colour:UInt32?=nil,footer:EmbedFooter?=nil,image:EmbedImage?=nil,thumbnail:EmbedThumbnail?=nil,author:EmbedAuthor?=nil,fields:Array(EmbedField)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"title","doc":null,"default_value":"nil","external_name":"title","restriction":"String | ::Nil"},{"name":"type","doc":null,"default_value":"\"rich\"","external_name":"type","restriction":"String"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":"String | ::Nil"},{"name":"timestamp","doc":null,"default_value":"nil","external_name":"timestamp","restriction":"Time | ::Nil"},{"name":"colour","doc":null,"default_value":"nil","external_name":"colour","restriction":"UInt32 | ::Nil"},{"name":"footer","doc":null,"default_value":"nil","external_name":"footer","restriction":"EmbedFooter | ::Nil"},{"name":"image","doc":null,"default_value":"nil","external_name":"image","restriction":"EmbedImage | ::Nil"},{"name":"thumbnail","doc":null,"default_value":"nil","external_name":"thumbnail","restriction":"EmbedThumbnail | ::Nil"},{"name":"author","doc":null,"default_value":"nil","external_name":"author","restriction":"EmbedAuthor | ::Nil"},{"name":"fields","doc":null,"default_value":"nil","external_name":"fields","restriction":"Array(EmbedField) | ::Nil"}],"args_string":"(title : String? = <span class=\"n\">nil</span>, type : String = <span class=\"s\">&quot;rich&quot;</span>, description : String? = <span class=\"n\">nil</span>, url : String? = <span class=\"n\">nil</span>, timestamp : Time? = <span class=\"n\">nil</span>, colour : UInt32? = <span class=\"n\">nil</span>, footer : EmbedFooter? = <span class=\"n\">nil</span>, image : EmbedImage? = <span class=\"n\">nil</span>, thumbnail : EmbedThumbnail? = <span class=\"n\">nil</span>, author : EmbedAuthor? = <span class=\"n\">nil</span>, fields : Array(EmbedField)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L104","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L104","def":{"name":"new","args":[{"name":"title","doc":null,"default_value":"nil","external_name":"title","restriction":"String | ::Nil"},{"name":"type","doc":null,"default_value":"\"rich\"","external_name":"type","restriction":"String"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":"String | ::Nil"},{"name":"timestamp","doc":null,"default_value":"nil","external_name":"timestamp","restriction":"Time | ::Nil"},{"name":"colour","doc":null,"default_value":"nil","external_name":"colour","restriction":"UInt32 | ::Nil"},{"name":"footer","doc":null,"default_value":"nil","external_name":"footer","restriction":"EmbedFooter | ::Nil"},{"name":"image","doc":null,"default_value":"nil","external_name":"image","restriction":"EmbedImage | ::Nil"},{"name":"thumbnail","doc":null,"default_value":"nil","external_name":"thumbnail","restriction":"EmbedThumbnail | ::Nil"},{"name":"author","doc":null,"default_value":"nil","external_name":"author","restriction":"EmbedAuthor | ::Nil"},{"name":"fields","doc":null,"default_value":"nil","external_name":"fields","restriction":"Array(EmbedField) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(title, type, description, url, timestamp, colour, footer, image, thumbnail, author, fields)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_137:JSON::PullParser)-class-method","html_id":"new(__temp_137:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_137","doc":null,"default_value":"","external_name":"__temp_137","restriction":"::JSON::PullParser"}],"args_string":"(__temp_137 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_137","doc":null,"default_value":"","external_name":"__temp_137","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_137)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"author:Discord::EmbedAuthor?-instance-method","html_id":"author:Discord::EmbedAuthor?-instance-method","name":"author","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::EmbedAuthor?","source_link":null,"source_link":null,"def":{"name":"author","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author"}},{"id":"author=(_author:::Union(EmbedAuthor,Nil))-instance-method","html_id":"author=(_author:::Union(EmbedAuthor,Nil))-instance-method","name":"author=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"::Union(EmbedAuthor, ::Nil)"}],"args_string":"(_author : ::Union(EmbedAuthor, Nil))","source_link":null,"source_link":null,"def":{"name":"author=","args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"::Union(EmbedAuthor, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author = _author"}},{"id":"color-instance-method","html_id":"color-instance-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L128","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L128","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"colour"}},{"id":"colour:UInt32?-instance-method","html_id":"colour:UInt32?-instance-method","name":"colour","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"colour","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@colour"}},{"id":"colour=(_colour:::Union(UInt32,Nil))-instance-method","html_id":"colour=(_colour:::Union(UInt32,Nil))-instance-method","name":"colour=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_colour","doc":null,"default_value":"","external_name":"_colour","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_colour : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"colour=","args":[{"name":"_colour","doc":null,"default_value":"","external_name":"_colour","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@colour = _colour"}},{"id":"description:String?-instance-method","html_id":"description:String?-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:::Union(String,Nil))-instance-method","html_id":"description=(_description:::Union(String,Nil))-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"args_string":"(_description : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"fields:Array(Discord::EmbedField)?-instance-method","html_id":"fields:Array(Discord::EmbedField)?-instance-method","name":"fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::EmbedField)?","source_link":null,"source_link":null,"def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields"}},{"id":"fields=(_fields:::Union(Array(EmbedField),Nil))-instance-method","html_id":"fields=(_fields:::Union(Array(EmbedField),Nil))-instance-method","name":"fields=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_fields","doc":null,"default_value":"","external_name":"_fields","restriction":"::Union(Array(EmbedField), ::Nil)"}],"args_string":"(_fields : ::Union(Array(EmbedField), Nil))","source_link":null,"source_link":null,"def":{"name":"fields=","args":[{"name":"_fields","doc":null,"default_value":"","external_name":"_fields","restriction":"::Union(Array(EmbedField), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields = _fields"}},{"id":"footer:Discord::EmbedFooter?-instance-method","html_id":"footer:Discord::EmbedFooter?-instance-method","name":"footer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::EmbedFooter?","source_link":null,"source_link":null,"def":{"name":"footer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@footer"}},{"id":"footer=(_footer:::Union(EmbedFooter,Nil))-instance-method","html_id":"footer=(_footer:::Union(EmbedFooter,Nil))-instance-method","name":"footer=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_footer","doc":null,"default_value":"","external_name":"_footer","restriction":"::Union(EmbedFooter, ::Nil)"}],"args_string":"(_footer : ::Union(EmbedFooter, Nil))","source_link":null,"source_link":null,"def":{"name":"footer=","args":[{"name":"_footer","doc":null,"default_value":"","external_name":"_footer","restriction":"::Union(EmbedFooter, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@footer = _footer"}},{"id":"image:Discord::EmbedImage?-instance-method","html_id":"image:Discord::EmbedImage?-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::EmbedImage?","source_link":null,"source_link":null,"def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image"}},{"id":"image=(_image:::Union(EmbedImage,Nil))-instance-method","html_id":"image=(_image:::Union(EmbedImage,Nil))-instance-method","name":"image=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_image","doc":null,"default_value":"","external_name":"_image","restriction":"::Union(EmbedImage, ::Nil)"}],"args_string":"(_image : ::Union(EmbedImage, Nil))","source_link":null,"source_link":null,"def":{"name":"image=","args":[{"name":"_image","doc":null,"default_value":"","external_name":"_image","restriction":"::Union(EmbedImage, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@image = _image"}},{"id":"provider:Discord::EmbedProvider?-instance-method","html_id":"provider:Discord::EmbedProvider?-instance-method","name":"provider","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::EmbedProvider?","source_link":null,"source_link":null,"def":{"name":"provider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider"}},{"id":"provider=(_provider:::Union(EmbedProvider,Nil))-instance-method","html_id":"provider=(_provider:::Union(EmbedProvider,Nil))-instance-method","name":"provider=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_provider","doc":null,"default_value":"","external_name":"_provider","restriction":"::Union(EmbedProvider, ::Nil)"}],"args_string":"(_provider : ::Union(EmbedProvider, Nil))","source_link":null,"source_link":null,"def":{"name":"provider=","args":[{"name":"_provider","doc":null,"default_value":"","external_name":"_provider","restriction":"::Union(EmbedProvider, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@provider = _provider"}},{"id":"thumbnail:Discord::EmbedThumbnail?-instance-method","html_id":"thumbnail:Discord::EmbedThumbnail?-instance-method","name":"thumbnail","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::EmbedThumbnail?","source_link":null,"source_link":null,"def":{"name":"thumbnail","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@thumbnail"}},{"id":"thumbnail=(_thumbnail:::Union(EmbedThumbnail,Nil))-instance-method","html_id":"thumbnail=(_thumbnail:::Union(EmbedThumbnail,Nil))-instance-method","name":"thumbnail=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_thumbnail","doc":null,"default_value":"","external_name":"_thumbnail","restriction":"::Union(EmbedThumbnail, ::Nil)"}],"args_string":"(_thumbnail : ::Union(EmbedThumbnail, Nil))","source_link":null,"source_link":null,"def":{"name":"thumbnail=","args":[{"name":"_thumbnail","doc":null,"default_value":"","external_name":"_thumbnail","restriction":"::Union(EmbedThumbnail, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@thumbnail = _thumbnail"}},{"id":"timestamp:Time?-instance-method","html_id":"timestamp:Time?-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time?","source_link":null,"source_link":null,"def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp"}},{"id":"timestamp=(_timestamp:::Union(Time,Nil))-instance-method","html_id":"timestamp=(_timestamp:::Union(Time,Nil))-instance-method","name":"timestamp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"::Union(Time, ::Nil)"}],"args_string":"(_timestamp : ::Union(Time, Nil))","source_link":null,"source_link":null,"def":{"name":"timestamp=","args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"::Union(Time, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp = _timestamp"}},{"id":"title:String?-instance-method","html_id":"title:String?-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"title","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@title"}},{"id":"title=(_title:::Union(String,Nil))-instance-method","html_id":"title=(_title:::Union(String,Nil))-instance-method","name":"title=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"::Union(String, ::Nil)"}],"args_string":"(_title : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"title=","args":[{"name":"_title","doc":null,"default_value":"","external_name":"_title","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@title = _title"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _title = @title\n  if _title.nil?\n  else\n    json.field(\"title\") do\n      _title.to_json(json)\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _description = @description\n  if _description.nil?\n  else\n    json.field(\"description\") do\n      _description.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _timestamp = @timestamp\n  if _timestamp.nil?\n  else\n    json.field(\"timestamp\") do\n      if _timestamp\n        EmbedTimestampConverter.to_json(_timestamp, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _colour = @colour\n  if _colour.nil?\n  else\n    json.field(\"color\") do\n      _colour.to_json(json)\n    end\n  end\n  _footer = @footer\n  if _footer.nil?\n  else\n    json.field(\"footer\") do\n      _footer.to_json(json)\n    end\n  end\n  _image = @image\n  if _image.nil?\n  else\n    json.field(\"image\") do\n      _image.to_json(json)\n    end\n  end\n  _thumbnail = @thumbnail\n  if _thumbnail.nil?\n  else\n    json.field(\"thumbnail\") do\n      _thumbnail.to_json(json)\n    end\n  end\n  _video = @video\n  if _video.nil?\n  else\n    json.field(\"video\") do\n      _video.to_json(json)\n    end\n  end\n  _provider = @provider\n  if _provider.nil?\n  else\n    json.field(\"provider\") do\n      _provider.to_json(json)\n    end\n  end\n  _author = @author\n  if _author.nil?\n  else\n    json.field(\"author\") do\n      _author.to_json(json)\n    end\n  end\n  _fields = @fields\n  if _fields.nil?\n  else\n    json.field(\"fields\") do\n      _fields.to_json(json)\n    end\n  end\nend"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:String)-instance-method","html_id":"type=(_type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"args_string":"(_type : String)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}},{"id":"url:String?-instance-method","html_id":"url:String?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"video:Discord::EmbedVideo?-instance-method","html_id":"video:Discord::EmbedVideo?-instance-method","name":"video","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::EmbedVideo?","source_link":null,"source_link":null,"def":{"name":"video","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@video"}},{"id":"video=(_video:::Union(EmbedVideo,Nil))-instance-method","html_id":"video=(_video:::Union(EmbedVideo,Nil))-instance-method","name":"video=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_video","doc":null,"default_value":"","external_name":"_video","restriction":"::Union(EmbedVideo, ::Nil)"}],"args_string":"(_video : ::Union(EmbedVideo, Nil))","source_link":null,"source_link":null,"def":{"name":"video=","args":[{"name":"_video","doc":null,"default_value":"","external_name":"_video","restriction":"::Union(EmbedVideo, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@video = _video"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedAuthor","path":"Discord/EmbedAuthor.html","kind":"struct","full_name":"Discord::EmbedAuthor","name":"EmbedAuthor","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":174,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String?=nil,url:String?=nil,icon_url:String?=nil)-class-method","html_id":"new(name:String?=nil,url:String?=nil,icon_url:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":"String | ::Nil"},{"name":"icon_url","doc":null,"default_value":"nil","external_name":"icon_url","restriction":"String | ::Nil"}],"args_string":"(name : String? = <span class=\"n\">nil</span>, url : String? = <span class=\"n\">nil</span>, icon_url : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L175","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L175","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":"String | ::Nil"},{"name":"icon_url","doc":null,"default_value":"nil","external_name":"icon_url","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, url, icon_url)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_204:JSON::PullParser)-class-method","html_id":"new(__temp_204:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_204","doc":null,"default_value":"","external_name":"__temp_204","restriction":"::JSON::PullParser"}],"args_string":"(__temp_204 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_204","doc":null,"default_value":"","external_name":"__temp_204","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_204)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"icon_url:String?-instance-method","html_id":"icon_url:String?-instance-method","name":"icon_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"icon_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon_url"}},{"id":"icon_url=(_icon_url:::Union(String,Nil))-instance-method","html_id":"icon_url=(_icon_url:::Union(String,Nil))-instance-method","name":"icon_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon_url","doc":null,"default_value":"","external_name":"_icon_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_icon_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"icon_url=","args":[{"name":"_icon_url","doc":null,"default_value":"","external_name":"_icon_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon_url = _icon_url"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:::Union(String,Nil))-instance-method","html_id":"name=(_name:::Union(String,Nil))-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_name : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"proxy_icon_url:String?-instance-method","html_id":"proxy_icon_url:String?-instance-method","name":"proxy_icon_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"proxy_icon_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_icon_url"}},{"id":"proxy_icon_url=(_proxy_icon_url:::Union(String,Nil))-instance-method","html_id":"proxy_icon_url=(_proxy_icon_url:::Union(String,Nil))-instance-method","name":"proxy_icon_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_proxy_icon_url","doc":null,"default_value":"","external_name":"_proxy_icon_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_proxy_icon_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"proxy_icon_url=","args":[{"name":"_proxy_icon_url","doc":null,"default_value":"","external_name":"_proxy_icon_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_icon_url = _proxy_icon_url"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _icon_url = @icon_url\n  if _icon_url.nil?\n  else\n    json.field(\"icon_url\") do\n      _icon_url.to_json(json)\n    end\n  end\n  _proxy_icon_url = @proxy_icon_url\n  if _proxy_icon_url.nil?\n  else\n    json.field(\"proxy_icon_url\") do\n      _proxy_icon_url.to_json(json)\n    end\n  end\nend"}},{"id":"url:String?-instance-method","html_id":"url:String?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedField","path":"Discord/EmbedField.html","kind":"struct","full_name":"Discord::EmbedField","name":"EmbedField","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":197,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,value:String,inline:Bool=false)-class-method","html_id":"new(name:String,value:String,inline:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"inline","doc":null,"default_value":"false","external_name":"inline","restriction":"Bool"}],"args_string":"(name : String, value : String, inline : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L198","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L198","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"inline","doc":null,"default_value":"false","external_name":"inline","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, value, inline)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_224:JSON::PullParser)-class-method","html_id":"new(__temp_224:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_224","doc":null,"default_value":"","external_name":"__temp_224","restriction":"::JSON::PullParser"}],"args_string":"(__temp_224 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_224","doc":null,"default_value":"","external_name":"__temp_224","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_224)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"inline:Bool-instance-method","html_id":"inline:Bool-instance-method","name":"inline","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"inline","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@inline"}},{"id":"inline=(_inline:Bool)-instance-method","html_id":"inline=(_inline:Bool)-instance-method","name":"inline=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_inline","doc":null,"default_value":"","external_name":"_inline","restriction":"Bool"}],"args_string":"(_inline : Bool)","source_link":null,"source_link":null,"def":{"name":"inline=","args":[{"name":"_inline","doc":null,"default_value":"","external_name":"_inline","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@inline = _inline"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _value = @value\n  if _value.nil?\n  else\n    json.field(\"value\") do\n      _value.to_json(json)\n    end\n  end\n  _inline = @inline\n  if _inline.nil?\n  else\n    json.field(\"inline\") do\n      _inline.to_json(json)\n    end\n  end\nend"}},{"id":"value:String-instance-method","html_id":"value:String-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}},{"id":"value=(_value:String)-instance-method","html_id":"value=(_value:String)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_value","doc":null,"default_value":"","external_name":"_value","restriction":"String"}],"args_string":"(_value : String)","source_link":null,"source_link":null,"def":{"name":"value=","args":[{"name":"_value","doc":null,"default_value":"","external_name":"_value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = _value"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedFooter","path":"Discord/EmbedFooter.html","kind":"struct","full_name":"Discord::EmbedFooter","name":"EmbedFooter","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":186,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(text:String?=nil,icon_url:String?=nil)-class-method","html_id":"new(text:String?=nil,icon_url:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"nil","external_name":"text","restriction":"String | ::Nil"},{"name":"icon_url","doc":null,"default_value":"nil","external_name":"icon_url","restriction":"String | ::Nil"}],"args_string":"(text : String? = <span class=\"n\">nil</span>, icon_url : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L187","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L187","def":{"name":"new","args":[{"name":"text","doc":null,"default_value":"nil","external_name":"text","restriction":"String | ::Nil"},{"name":"icon_url","doc":null,"default_value":"nil","external_name":"icon_url","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text, icon_url)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_215:JSON::PullParser)-class-method","html_id":"new(__temp_215:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_215","doc":null,"default_value":"","external_name":"__temp_215","restriction":"::JSON::PullParser"}],"args_string":"(__temp_215 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_215","doc":null,"default_value":"","external_name":"__temp_215","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_215)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"icon_url:String?-instance-method","html_id":"icon_url:String?-instance-method","name":"icon_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"icon_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon_url"}},{"id":"icon_url=(_icon_url:::Union(String,Nil))-instance-method","html_id":"icon_url=(_icon_url:::Union(String,Nil))-instance-method","name":"icon_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon_url","doc":null,"default_value":"","external_name":"_icon_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_icon_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"icon_url=","args":[{"name":"_icon_url","doc":null,"default_value":"","external_name":"_icon_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon_url = _icon_url"}},{"id":"proxy_icon_url:String?-instance-method","html_id":"proxy_icon_url:String?-instance-method","name":"proxy_icon_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"proxy_icon_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_icon_url"}},{"id":"proxy_icon_url=(_proxy_icon_url:::Union(String,Nil))-instance-method","html_id":"proxy_icon_url=(_proxy_icon_url:::Union(String,Nil))-instance-method","name":"proxy_icon_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_proxy_icon_url","doc":null,"default_value":"","external_name":"_proxy_icon_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_proxy_icon_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"proxy_icon_url=","args":[{"name":"_proxy_icon_url","doc":null,"default_value":"","external_name":"_proxy_icon_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_icon_url = _proxy_icon_url"}},{"id":"text:String?-instance-method","html_id":"text:String?-instance-method","name":"text","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"text","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text"}},{"id":"text=(_text:::Union(String,Nil))-instance-method","html_id":"text=(_text:::Union(String,Nil))-instance-method","name":"text=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_text","doc":null,"default_value":"","external_name":"_text","restriction":"::Union(String, ::Nil)"}],"args_string":"(_text : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"text=","args":[{"name":"_text","doc":null,"default_value":"","external_name":"_text","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text = _text"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _text = @text\n  if _text.nil?\n  else\n    json.field(\"text\") do\n      _text.to_json(json)\n    end\n  end\n  _icon_url = @icon_url\n  if _icon_url.nil?\n  else\n    json.field(\"icon_url\") do\n      _icon_url.to_json(json)\n    end\n  end\n  _proxy_icon_url = @proxy_icon_url\n  if _proxy_icon_url.nil?\n  else\n    json.field(\"proxy_icon_url\") do\n      _proxy_icon_url.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedImage","path":"Discord/EmbedImage.html","kind":"struct","full_name":"Discord::EmbedImage","name":"EmbedImage","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":155,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(url:String)-class-method","html_id":"new(url:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L156","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L156","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_186:JSON::PullParser)-class-method","html_id":"new(__temp_186:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_186","doc":null,"default_value":"","external_name":"__temp_186","restriction":"::JSON::PullParser"}],"args_string":"(__temp_186 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_186","doc":null,"default_value":"","external_name":"__temp_186","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_186)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:UInt32?-instance-method","html_id":"height:UInt32?-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height"}},{"id":"height=(_height:::Union(UInt32,Nil))-instance-method","html_id":"height=(_height:::Union(UInt32,Nil))-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_height : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"height=","args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = _height"}},{"id":"proxy_url:String?-instance-method","html_id":"proxy_url:String?-instance-method","name":"proxy_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"proxy_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_url"}},{"id":"proxy_url=(_proxy_url:::Union(String,Nil))-instance-method","html_id":"proxy_url=(_proxy_url:::Union(String,Nil))-instance-method","name":"proxy_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_proxy_url","doc":null,"default_value":"","external_name":"_proxy_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_proxy_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"proxy_url=","args":[{"name":"_proxy_url","doc":null,"default_value":"","external_name":"_proxy_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_url = _proxy_url"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _proxy_url = @proxy_url\n  if _proxy_url.nil?\n  else\n    json.field(\"proxy_url\") do\n      _proxy_url.to_json(json)\n    end\n  end\n  _height = @height\n  if _height.nil?\n  else\n    json.field(\"height\") do\n      _height.to_json(json)\n    end\n  end\n  _width = @width\n  if _width.nil?\n  else\n    json.field(\"width\") do\n      _width.to_json(json)\n    end\n  end\nend"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:String)-instance-method","html_id":"url=(_url:String)-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"args_string":"(_url : String)","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"width:UInt32?-instance-method","html_id":"width:UInt32?-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width"}},{"id":"width=(_width:::Union(UInt32,Nil))-instance-method","html_id":"width=(_width:::Union(UInt32,Nil))-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_width : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"width=","args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = _width"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedProvider","path":"Discord/EmbedProvider.html","kind":"struct","full_name":"Discord::EmbedProvider","name":"EmbedProvider","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":167,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_197:JSON::PullParser)-class-method","html_id":"new(__temp_197:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_197","doc":null,"default_value":"","external_name":"__temp_197","restriction":"::JSON::PullParser"}],"args_string":"(__temp_197 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_197","doc":null,"default_value":"","external_name":"__temp_197","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_197)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\nend"}},{"id":"url:String?-instance-method","html_id":"url:String?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedThumbnail","path":"Discord/EmbedThumbnail.html","kind":"struct","full_name":"Discord::EmbedThumbnail","name":"EmbedThumbnail","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":135,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(url:String)-class-method","html_id":"new(url:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L136","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L136","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_166:JSON::PullParser)-class-method","html_id":"new(__temp_166:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_166","doc":null,"default_value":"","external_name":"__temp_166","restriction":"::JSON::PullParser"}],"args_string":"(__temp_166 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_166","doc":null,"default_value":"","external_name":"__temp_166","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_166)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:UInt32?-instance-method","html_id":"height:UInt32?-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height"}},{"id":"height=(_height:::Union(UInt32,Nil))-instance-method","html_id":"height=(_height:::Union(UInt32,Nil))-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_height : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"height=","args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = _height"}},{"id":"proxy_url:String?-instance-method","html_id":"proxy_url:String?-instance-method","name":"proxy_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"proxy_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_url"}},{"id":"proxy_url=(_proxy_url:::Union(String,Nil))-instance-method","html_id":"proxy_url=(_proxy_url:::Union(String,Nil))-instance-method","name":"proxy_url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_proxy_url","doc":null,"default_value":"","external_name":"_proxy_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_proxy_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"proxy_url=","args":[{"name":"_proxy_url","doc":null,"default_value":"","external_name":"_proxy_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy_url = _proxy_url"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _proxy_url = @proxy_url\n  if _proxy_url.nil?\n  else\n    json.field(\"proxy_url\") do\n      _proxy_url.to_json(json)\n    end\n  end\n  _height = @height\n  if _height.nil?\n  else\n    json.field(\"height\") do\n      _height.to_json(json)\n    end\n  end\n  _width = @width\n  if _width.nil?\n  else\n    json.field(\"width\") do\n      _width.to_json(json)\n    end\n  end\nend"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:String)-instance-method","html_id":"url=(_url:String)-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"args_string":"(_url : String)","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"width:UInt32?-instance-method","html_id":"width:UInt32?-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32?","source_link":null,"source_link":null,"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width"}},{"id":"width=(_width:::Union(UInt32,Nil))-instance-method","html_id":"width=(_width:::Union(UInt32,Nil))-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"::Union(UInt32, ::Nil)"}],"args_string":"(_width : ::Union(UInt32, Nil))","source_link":null,"source_link":null,"def":{"name":"width=","args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"::Union(UInt32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = _width"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/EmbedVideo","path":"Discord/EmbedVideo.html","kind":"struct","full_name":"Discord::EmbedVideo","name":"EmbedVideo","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":147,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_177:JSON::PullParser)-class-method","html_id":"new(__temp_177:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_177","doc":null,"default_value":"","external_name":"__temp_177","restriction":"::JSON::PullParser"}],"args_string":"(__temp_177 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_177","doc":null,"default_value":"","external_name":"__temp_177","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_177)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:UInt32-instance-method","html_id":"height:UInt32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height"}},{"id":"height=(_height:UInt32)-instance-method","html_id":"height=(_height:UInt32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"UInt32"}],"args_string":"(_height : UInt32)","source_link":null,"source_link":null,"def":{"name":"height=","args":[{"name":"_height","doc":null,"default_value":"","external_name":"_height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = _height"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _height = @height\n  if _height.nil?\n  else\n    json.field(\"height\") do\n      _height.to_json(json)\n    end\n  end\n  _width = @width\n  if _width.nil?\n  else\n    json.field(\"width\") do\n      _width.to_json(json)\n    end\n  end\nend"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:String)-instance-method","html_id":"url=(_url:String)-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"args_string":"(_url : String)","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}},{"id":"width:UInt32-instance-method","html_id":"width:UInt32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width"}},{"id":"width=(_width:UInt32)-instance-method","html_id":"width=(_width:UInt32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"UInt32"}],"args_string":"(_width : UInt32)","source_link":null,"source_link":null,"def":{"name":"width=","args":[{"name":"_width","doc":null,"default_value":"","external_name":"_width","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = _width"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Emoji","path":"Discord/Emoji.html","kind":"struct","full_name":"Discord::Emoji","name":"Emoji","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":139,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_448:JSON::PullParser)-class-method","html_id":"new(__temp_448:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_448","doc":null,"default_value":"","external_name":"__temp_448","restriction":"::JSON::PullParser"}],"args_string":"(__temp_448 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_448","doc":null,"default_value":"","external_name":"__temp_448","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_448)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"managed:Bool-instance-method","html_id":"managed:Bool-instance-method","name":"managed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"managed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@managed"}},{"id":"managed=(_managed:Bool)-instance-method","html_id":"managed=(_managed:Bool)-instance-method","name":"managed=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_managed","doc":null,"default_value":"","external_name":"_managed","restriction":"Bool"}],"args_string":"(_managed : Bool)","source_link":null,"source_link":null,"def":{"name":"managed=","args":[{"name":"_managed","doc":null,"default_value":"","external_name":"_managed","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@managed = _managed"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"require_colons:Bool-instance-method","html_id":"require_colons:Bool-instance-method","name":"require_colons","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"require_colons","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@require_colons"}},{"id":"require_colons=(_require_colons:Bool)-instance-method","html_id":"require_colons=(_require_colons:Bool)-instance-method","name":"require_colons=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_require_colons","doc":null,"default_value":"","external_name":"_require_colons","restriction":"Bool"}],"args_string":"(_require_colons : Bool)","source_link":null,"source_link":null,"def":{"name":"require_colons=","args":[{"name":"_require_colons","doc":null,"default_value":"","external_name":"_require_colons","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@require_colons = _require_colons"}},{"id":"roles:Array(UInt64)-instance-method","html_id":"roles:Array(UInt64)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(UInt64))-instance-method","html_id":"roles=(_roles:Array(UInt64))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"args_string":"(_roles : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      if _roles\n        SnowflakeArrayConverter.to_json(_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _require_colons = @require_colons\n  if _require_colons.nil?\n  else\n    json.field(\"require_colons\") do\n      _require_colons.to_json(json)\n    end\n  end\n  _managed = @managed\n  if _managed.nil?\n  else\n    json.field(\"managed\") do\n      _managed.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/GamePlaying","path":"Discord/GamePlaying.html","kind":"struct","full_name":"Discord::GamePlaying","name":"GamePlaying","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":168,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_480:JSON::PullParser)-class-method","html_id":"new(__temp_480:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_480","doc":null,"default_value":"","external_name":"__temp_480","restriction":"::JSON::PullParser"}],"args_string":"(__temp_480 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_480","doc":null,"default_value":"","external_name":"__temp_480","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_480)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name=nil,type=nil,url=nil)-class-method","html_id":"new(name=nil,type=nil,url=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"nil","external_name":"type","restriction":""},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, type = <span class=\"n\">nil</span>, url = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L169","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L169","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"nil","external_name":"type","restriction":""},{"name":"url","doc":null,"default_value":"nil","external_name":"url","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, type, url)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:::Union(String,Nil))-instance-method","html_id":"name=(_name:::Union(String,Nil))-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_name : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\nend"}},{"id":"type:Int64|String|Nil-instance-method","html_id":"type:Int64|String|Nil-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64 | String | Nil","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:::Union(Int64,Nil)|::Union(String,Nil))-instance-method","html_id":"type=(_type:::Union(Int64,Nil)|::Union(String,Nil))-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"::Union(Int64, ::Nil) | ::Union(String, ::Nil)"}],"args_string":"(_type : ::Union(Int64, Nil) | ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"::Union(Int64, ::Nil) | ::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}},{"id":"url:String?-instance-method","html_id":"url:String?-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:::Union(String,Nil))-instance-method","html_id":"url=(_url:::Union(String,Nil))-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"args_string":"(_url : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway","path":"Discord/Gateway.html","kind":"module","full_name":"Discord::Gateway","name":"Gateway","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":7,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"},{"filename":"discordcr/client.cr","line_number":808,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr/Discord/Gateway/ChannelPinsUpdatePayload","path":"Discord/Gateway/ChannelPinsUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::ChannelPinsUpdatePayload","name":"ChannelPinsUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":371,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_864:JSON::PullParser)-class-method","html_id":"new(__temp_864:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_864","doc":null,"default_value":"","external_name":"__temp_864","restriction":"::JSON::PullParser"}],"args_string":"(__temp_864 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_864","doc":null,"default_value":"","external_name":"__temp_864","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_864)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"last_pin_timestamp:Time-instance-method","html_id":"last_pin_timestamp:Time-instance-method","name":"last_pin_timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time","source_link":null,"source_link":null,"def":{"name":"last_pin_timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_pin_timestamp"}},{"id":"last_pin_timestamp=(_last_pin_timestamp:Time)-instance-method","html_id":"last_pin_timestamp=(_last_pin_timestamp:Time)-instance-method","name":"last_pin_timestamp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_pin_timestamp","doc":null,"default_value":"","external_name":"_last_pin_timestamp","restriction":"Time"}],"args_string":"(_last_pin_timestamp : Time)","source_link":null,"source_link":null,"def":{"name":"last_pin_timestamp=","args":[{"name":"_last_pin_timestamp","doc":null,"default_value":"","external_name":"_last_pin_timestamp","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_pin_timestamp = _last_pin_timestamp"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _last_pin_timestamp = @last_pin_timestamp\n  if _last_pin_timestamp.nil?\n  else\n    json.field(\"last_pin_timestamp\") do\n      if _last_pin_timestamp\n        TimestampConverter.to_json(_last_pin_timestamp, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildBanPayload","path":"Discord/Gateway/GuildBanPayload.html","kind":"struct","full_name":"Discord::Gateway::GuildBanPayload","name":"GuildBanPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":210,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_680:JSON::PullParser)-class-method","html_id":"new(__temp_680:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_680","doc":null,"default_value":"","external_name":"__temp_680","restriction":"::JSON::PullParser"}],"args_string":"(__temp_680 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_680","doc":null,"default_value":"","external_name":"__temp_680","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_680)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"avatar:String-instance-method","html_id":"avatar:String-instance-method","name":"avatar","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"avatar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar"}},{"id":"avatar=(_avatar:String)-instance-method","html_id":"avatar=(_avatar:String)-instance-method","name":"avatar=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"String"}],"args_string":"(_avatar : String)","source_link":null,"source_link":null,"def":{"name":"avatar=","args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar = _avatar"}},{"id":"bot:Bool?-instance-method","html_id":"bot:Bool?-instance-method","name":"bot","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"bot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot"}},{"id":"bot=(_bot:::Union(Bool,Nil))-instance-method","html_id":"bot=(_bot:::Union(Bool,Nil))-instance-method","name":"bot=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bot","doc":null,"default_value":"","external_name":"_bot","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_bot : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"bot=","args":[{"name":"_bot","doc":null,"default_value":"","external_name":"_bot","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot = _bot"}},{"id":"discriminator:String-instance-method","html_id":"discriminator:String-instance-method","name":"discriminator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"discriminator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@discriminator"}},{"id":"discriminator=(_discriminator:String)-instance-method","html_id":"discriminator=(_discriminator:String)-instance-method","name":"discriminator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_discriminator","doc":null,"default_value":"","external_name":"_discriminator","restriction":"String"}],"args_string":"(_discriminator : String)","source_link":null,"source_link":null,"def":{"name":"discriminator=","args":[{"name":"_discriminator","doc":null,"default_value":"","external_name":"_discriminator","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@discriminator = _discriminator"}},{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _username = @username\n  if _username.nil?\n  else\n    json.field(\"username\") do\n      _username.to_json(json)\n    end\n  end\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _discriminator = @discriminator\n  if _discriminator.nil?\n  else\n    json.field(\"discriminator\") do\n      _discriminator.to_json(json)\n    end\n  end\n  _avatar = @avatar\n  if _avatar.nil?\n  else\n    json.field(\"avatar\") do\n      _avatar.to_json(json)\n    end\n  end\n  _bot = @bot\n  if _bot.nil?\n  else\n    json.field(\"bot\") do\n      _bot.to_json(json)\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"username:String-instance-method","html_id":"username:String-instance-method","name":"username","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"username","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username"}},{"id":"username=(_username:String)-instance-method","html_id":"username=(_username:String)-instance-method","name":"username=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"String"}],"args_string":"(_username : String)","source_link":null,"source_link":null,"def":{"name":"username=","args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username = _username"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildCreatePayload","path":"Discord/Gateway/GuildCreatePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildCreatePayload","name":"GuildCreatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":169,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":"This one is special from simply Guild since it also has fields for members\nand presences.","summary":"<p>This one is special from simply Guild since it also has fields for members and presences.</p>","class_methods":[],"constructors":[{"id":"new(__temp_624:JSON::PullParser)-class-method","html_id":"new(__temp_624:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_624","doc":null,"default_value":"","external_name":"__temp_624","restriction":"::JSON::PullParser"}],"args_string":"(__temp_624 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_624","doc":null,"default_value":"","external_name":"__temp_624","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_624)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"afk_channel_id:UInt64?-instance-method","html_id":"afk_channel_id:UInt64?-instance-method","name":"afk_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"afk_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_channel_id"}},{"id":"afk_channel_id=(_afk_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"afk_channel_id=(_afk_channel_id:::Union(UInt64,Nil))-instance-method","name":"afk_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_afk_channel_id","doc":null,"default_value":"","external_name":"_afk_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_afk_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"afk_channel_id=","args":[{"name":"_afk_channel_id","doc":null,"default_value":"","external_name":"_afk_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_channel_id = _afk_channel_id"}},{"id":"afk_timeout:Int32?-instance-method","html_id":"afk_timeout:Int32?-instance-method","name":"afk_timeout","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"source_link":null,"def":{"name":"afk_timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_timeout"}},{"id":"afk_timeout=(_afk_timeout:::Union(Int32,Nil))-instance-method","html_id":"afk_timeout=(_afk_timeout:::Union(Int32,Nil))-instance-method","name":"afk_timeout=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_afk_timeout","doc":null,"default_value":"","external_name":"_afk_timeout","restriction":"::Union(Int32, ::Nil)"}],"args_string":"(_afk_timeout : ::Union(Int32, Nil))","source_link":null,"source_link":null,"def":{"name":"afk_timeout=","args":[{"name":"_afk_timeout","doc":null,"default_value":"","external_name":"_afk_timeout","restriction":"::Union(Int32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_timeout = _afk_timeout"}},{"id":"channels:Array(Discord::Channel)-instance-method","html_id":"channels:Array(Discord::Channel)-instance-method","name":"channels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Channel)","source_link":null,"source_link":null,"def":{"name":"channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels"}},{"id":"channels=(_channels:Array(Channel))-instance-method","html_id":"channels=(_channels:Array(Channel))-instance-method","name":"channels=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channels","doc":null,"default_value":"","external_name":"_channels","restriction":"Array(Channel)"}],"args_string":"(_channels : Array(Channel))","source_link":null,"source_link":null,"def":{"name":"channels=","args":[{"name":"_channels","doc":null,"default_value":"","external_name":"_channels","restriction":"Array(Channel)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channels = _channels"}},{"id":"default_message_notifications:UInt8-instance-method","html_id":"default_message_notifications:UInt8-instance-method","name":"default_message_notifications","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"default_message_notifications","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_message_notifications"}},{"id":"default_message_notifications=(_default_message_notifications:UInt8)-instance-method","html_id":"default_message_notifications=(_default_message_notifications:UInt8)-instance-method","name":"default_message_notifications=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_default_message_notifications","doc":null,"default_value":"","external_name":"_default_message_notifications","restriction":"UInt8"}],"args_string":"(_default_message_notifications : UInt8)","source_link":null,"source_link":null,"def":{"name":"default_message_notifications=","args":[{"name":"_default_message_notifications","doc":null,"default_value":"","external_name":"_default_message_notifications","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_message_notifications = _default_message_notifications"}},{"id":"emoji:Array(Discord::Emoji)-instance-method","html_id":"emoji:Array(Discord::Emoji)-instance-method","name":"emoji","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Emoji)","source_link":null,"source_link":null,"def":{"name":"emoji","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji"}},{"id":"emoji=(_emoji:Array(Emoji))-instance-method","html_id":"emoji=(_emoji:Array(Emoji))-instance-method","name":"emoji=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"Array(Emoji)"}],"args_string":"(_emoji : Array(Emoji))","source_link":null,"source_link":null,"def":{"name":"emoji=","args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"Array(Emoji)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji = _emoji"}},{"id":"emojis-instance-method","html_id":"emojis-instance-method","name":"emojis","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L196","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L196","def":{"name":"emojis","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"emoji"}},{"id":"explicit_content_filter:UInt8-instance-method","html_id":"explicit_content_filter:UInt8-instance-method","name":"explicit_content_filter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"explicit_content_filter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@explicit_content_filter"}},{"id":"explicit_content_filter=(_explicit_content_filter:UInt8)-instance-method","html_id":"explicit_content_filter=(_explicit_content_filter:UInt8)-instance-method","name":"explicit_content_filter=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_explicit_content_filter","doc":null,"default_value":"","external_name":"_explicit_content_filter","restriction":"UInt8"}],"args_string":"(_explicit_content_filter : UInt8)","source_link":null,"source_link":null,"def":{"name":"explicit_content_filter=","args":[{"name":"_explicit_content_filter","doc":null,"default_value":"","external_name":"_explicit_content_filter","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@explicit_content_filter = _explicit_content_filter"}},{"id":"features:Array(String)-instance-method","html_id":"features:Array(String)-instance-method","name":"features","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"source_link":null,"def":{"name":"features","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@features"}},{"id":"features=(_features:Array(String))-instance-method","html_id":"features=(_features:Array(String))-instance-method","name":"features=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_features","doc":null,"default_value":"","external_name":"_features","restriction":"Array(String)"}],"args_string":"(_features : Array(String))","source_link":null,"source_link":null,"def":{"name":"features=","args":[{"name":"_features","doc":null,"default_value":"","external_name":"_features","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@features = _features"}},{"id":"icon:String?-instance-method","html_id":"icon:String?-instance-method","name":"icon","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"icon","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon"}},{"id":"icon=(_icon:::Union(String,Nil))-instance-method","html_id":"icon=(_icon:::Union(String,Nil))-instance-method","name":"icon=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"args_string":"(_icon : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"icon=","args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon = _icon"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"large:Bool-instance-method","html_id":"large:Bool-instance-method","name":"large","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"large","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@large"}},{"id":"large=(_large:Bool)-instance-method","html_id":"large=(_large:Bool)-instance-method","name":"large=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_large","doc":null,"default_value":"","external_name":"_large","restriction":"Bool"}],"args_string":"(_large : Bool)","source_link":null,"source_link":null,"def":{"name":"large=","args":[{"name":"_large","doc":null,"default_value":"","external_name":"_large","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@large = _large"}},{"id":"member_count:Int32-instance-method","html_id":"member_count:Int32-instance-method","name":"member_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"member_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@member_count"}},{"id":"member_count=(_member_count:Int32)-instance-method","html_id":"member_count=(_member_count:Int32)-instance-method","name":"member_count=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_member_count","doc":null,"default_value":"","external_name":"_member_count","restriction":"Int32"}],"args_string":"(_member_count : Int32)","source_link":null,"source_link":null,"def":{"name":"member_count=","args":[{"name":"_member_count","doc":null,"default_value":"","external_name":"_member_count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@member_count = _member_count"}},{"id":"members:Array(Discord::GuildMember)-instance-method","html_id":"members:Array(Discord::GuildMember)-instance-method","name":"members","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::GuildMember)","source_link":null,"source_link":null,"def":{"name":"members","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@members"}},{"id":"members=(_members:Array(GuildMember))-instance-method","html_id":"members=(_members:Array(GuildMember))-instance-method","name":"members=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_members","doc":null,"default_value":"","external_name":"_members","restriction":"Array(GuildMember)"}],"args_string":"(_members : Array(GuildMember))","source_link":null,"source_link":null,"def":{"name":"members=","args":[{"name":"_members","doc":null,"default_value":"","external_name":"_members","restriction":"Array(GuildMember)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@members = _members"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"owner_id:UInt64-instance-method","html_id":"owner_id:UInt64-instance-method","name":"owner_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"owner_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner_id"}},{"id":"owner_id=(_owner_id:UInt64)-instance-method","html_id":"owner_id=(_owner_id:UInt64)-instance-method","name":"owner_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_owner_id","doc":null,"default_value":"","external_name":"_owner_id","restriction":"UInt64"}],"args_string":"(_owner_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"owner_id=","args":[{"name":"_owner_id","doc":null,"default_value":"","external_name":"_owner_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner_id = _owner_id"}},{"id":"presences:Array(Discord::Presence)-instance-method","html_id":"presences:Array(Discord::Presence)-instance-method","name":"presences","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Presence)","source_link":null,"source_link":null,"def":{"name":"presences","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@presences"}},{"id":"presences=(_presences:Array(Presence))-instance-method","html_id":"presences=(_presences:Array(Presence))-instance-method","name":"presences=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_presences","doc":null,"default_value":"","external_name":"_presences","restriction":"Array(Presence)"}],"args_string":"(_presences : Array(Presence))","source_link":null,"source_link":null,"def":{"name":"presences=","args":[{"name":"_presences","doc":null,"default_value":"","external_name":"_presences","restriction":"Array(Presence)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@presences = _presences"}},{"id":"region:String-instance-method","html_id":"region:String-instance-method","name":"region","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"region","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@region"}},{"id":"region=(_region:String)-instance-method","html_id":"region=(_region:String)-instance-method","name":"region=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_region","doc":null,"default_value":"","external_name":"_region","restriction":"String"}],"args_string":"(_region : String)","source_link":null,"source_link":null,"def":{"name":"region=","args":[{"name":"_region","doc":null,"default_value":"","external_name":"_region","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@region = _region"}},{"id":"roles:Array(Discord::Role)-instance-method","html_id":"roles:Array(Discord::Role)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Role)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(Role))-instance-method","html_id":"roles=(_roles:Array(Role))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(Role)"}],"args_string":"(_roles : Array(Role))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(Role)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"splash:String?-instance-method","html_id":"splash:String?-instance-method","name":"splash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"splash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@splash"}},{"id":"splash=(_splash:::Union(String,Nil))-instance-method","html_id":"splash=(_splash:::Union(String,Nil))-instance-method","name":"splash=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_splash","doc":null,"default_value":"","external_name":"_splash","restriction":"::Union(String, ::Nil)"}],"args_string":"(_splash : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"splash=","args":[{"name":"_splash","doc":null,"default_value":"","external_name":"_splash","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@splash = _splash"}},{"id":"system_channel_id:UInt64?-instance-method","html_id":"system_channel_id:UInt64?-instance-method","name":"system_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"system_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@system_channel_id"}},{"id":"system_channel_id=(_system_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"system_channel_id=(_system_channel_id:::Union(UInt64,Nil))-instance-method","name":"system_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_system_channel_id","doc":null,"default_value":"","external_name":"_system_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_system_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"system_channel_id=","args":[{"name":"_system_channel_id","doc":null,"default_value":"","external_name":"_system_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@system_channel_id = _system_channel_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _icon = @icon\n  if _icon.nil?\n  else\n    json.field(\"icon\") do\n      _icon.to_json(json)\n    end\n  end\n  _splash = @splash\n  if _splash.nil?\n  else\n    json.field(\"splash\") do\n      _splash.to_json(json)\n    end\n  end\n  _owner_id = @owner_id\n  if _owner_id.nil?\n  else\n    json.field(\"owner_id\") do\n      if _owner_id\n        SnowflakeConverter.to_json(_owner_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _region = @region\n  if _region.nil?\n  else\n    json.field(\"region\") do\n      _region.to_json(json)\n    end\n  end\n  _afk_channel_id = @afk_channel_id\n  if _afk_channel_id.nil?\n  else\n    json.field(\"afk_channel_id\") do\n      if _afk_channel_id\n        MaybeSnowflakeConverter.to_json(_afk_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _afk_timeout = @afk_timeout\n  if _afk_timeout.nil?\n  else\n    json.field(\"afk_timeout\") do\n      _afk_timeout.to_json(json)\n    end\n  end\n  _verification_level = @verification_level\n  if _verification_level.nil?\n  else\n    json.field(\"verification_level\") do\n      _verification_level.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      _roles.to_json(json)\n    end\n  end\n  _emoji = @emoji\n  if _emoji.nil?\n  else\n    json.field(\"emojis\") do\n      _emoji.to_json(json)\n    end\n  end\n  _features = @features\n  if _features.nil?\n  else\n    json.field(\"features\") do\n      _features.to_json(json)\n    end\n  end\n  _large = @large\n  if _large.nil?\n  else\n    json.field(\"large\") do\n      _large.to_json(json)\n    end\n  end\n  _voice_states = @voice_states\n  if _voice_states.nil?\n  else\n    json.field(\"voice_states\") do\n      _voice_states.to_json(json)\n    end\n  end\n  _unavailable = @unavailable\n  if _unavailable.nil?\n  else\n    json.field(\"unavailable\") do\n      _unavailable.to_json(json)\n    end\n  end\n  _member_count = @member_count\n  if _member_count.nil?\n  else\n    json.field(\"member_count\") do\n      _member_count.to_json(json)\n    end\n  end\n  _members = @members\n  if _members.nil?\n  else\n    json.field(\"members\") do\n      _members.to_json(json)\n    end\n  end\n  _channels = @channels\n  if _channels.nil?\n  else\n    json.field(\"channels\") do\n      _channels.to_json(json)\n    end\n  end\n  _presences = @presences\n  if _presences.nil?\n  else\n    json.field(\"presences\") do\n      _presences.to_json(json)\n    end\n  end\n  _widget_channel_id = @widget_channel_id\n  if _widget_channel_id.nil?\n  else\n    json.field(\"widget_channel_id\") do\n      if _widget_channel_id\n        MaybeSnowflakeConverter.to_json(_widget_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _default_message_notifications = @default_message_notifications\n  if _default_message_notifications.nil?\n  else\n    json.field(\"default_message_notifications\") do\n      _default_message_notifications.to_json(json)\n    end\n  end\n  _explicit_content_filter = @explicit_content_filter\n  if _explicit_content_filter.nil?\n  else\n    json.field(\"explicit_content_filter\") do\n      _explicit_content_filter.to_json(json)\n    end\n  end\n  _system_channel_id = @system_channel_id\n  if _system_channel_id.nil?\n  else\n    json.field(\"system_channel_id\") do\n      if _system_channel_id\n        MaybeSnowflakeConverter.to_json(_system_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"unavailable:Bool?-instance-method","html_id":"unavailable:Bool?-instance-method","name":"unavailable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"unavailable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unavailable"}},{"id":"unavailable=(_unavailable:::Union(Bool,Nil))-instance-method","html_id":"unavailable=(_unavailable:::Union(Bool,Nil))-instance-method","name":"unavailable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_unavailable","doc":null,"default_value":"","external_name":"_unavailable","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_unavailable : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"unavailable=","args":[{"name":"_unavailable","doc":null,"default_value":"","external_name":"_unavailable","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unavailable = _unavailable"}},{"id":"verification_level:UInt8-instance-method","html_id":"verification_level:UInt8-instance-method","name":"verification_level","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"verification_level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verification_level"}},{"id":"verification_level=(_verification_level:UInt8)-instance-method","html_id":"verification_level=(_verification_level:UInt8)-instance-method","name":"verification_level=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_verification_level","doc":null,"default_value":"","external_name":"_verification_level","restriction":"UInt8"}],"args_string":"(_verification_level : UInt8)","source_link":null,"source_link":null,"def":{"name":"verification_level=","args":[{"name":"_verification_level","doc":null,"default_value":"","external_name":"_verification_level","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verification_level = _verification_level"}},{"id":"voice_states:Array(Discord::VoiceState)-instance-method","html_id":"voice_states:Array(Discord::VoiceState)-instance-method","name":"voice_states","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::VoiceState)","source_link":null,"source_link":null,"def":{"name":"voice_states","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@voice_states"}},{"id":"voice_states=(_voice_states:Array(VoiceState))-instance-method","html_id":"voice_states=(_voice_states:Array(VoiceState))-instance-method","name":"voice_states=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_voice_states","doc":null,"default_value":"","external_name":"_voice_states","restriction":"Array(VoiceState)"}],"args_string":"(_voice_states : Array(VoiceState))","source_link":null,"source_link":null,"def":{"name":"voice_states=","args":[{"name":"_voice_states","doc":null,"default_value":"","external_name":"_voice_states","restriction":"Array(VoiceState)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@voice_states = _voice_states"}},{"id":"widget_channel_id:UInt64?-instance-method","html_id":"widget_channel_id:UInt64?-instance-method","name":"widget_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"widget_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@widget_channel_id"}},{"id":"widget_channel_id=(_widget_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"widget_channel_id=(_widget_channel_id:::Union(UInt64,Nil))-instance-method","name":"widget_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_widget_channel_id","doc":null,"default_value":"","external_name":"_widget_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_widget_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"widget_channel_id=","args":[{"name":"_widget_channel_id","doc":null,"default_value":"","external_name":"_widget_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@widget_channel_id = _widget_channel_id"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildDeletePayload","path":"Discord/Gateway/GuildDeletePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildDeletePayload","name":"GuildDeletePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":203,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_673:JSON::PullParser)-class-method","html_id":"new(__temp_673:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_673","doc":null,"default_value":"","external_name":"__temp_673","restriction":"::JSON::PullParser"}],"args_string":"(__temp_673 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_673","doc":null,"default_value":"","external_name":"__temp_673","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_673)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _unavailable = @unavailable\n  if _unavailable.nil?\n  else\n    json.field(\"unavailable\") do\n      _unavailable.to_json(json)\n    end\n  end\nend"}},{"id":"unavailable:Bool?-instance-method","html_id":"unavailable:Bool?-instance-method","name":"unavailable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"unavailable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unavailable"}},{"id":"unavailable=(_unavailable:::Union(Bool,Nil))-instance-method","html_id":"unavailable=(_unavailable:::Union(Bool,Nil))-instance-method","name":"unavailable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_unavailable","doc":null,"default_value":"","external_name":"_unavailable","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_unavailable : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"unavailable=","args":[{"name":"_unavailable","doc":null,"default_value":"","external_name":"_unavailable","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unavailable = _unavailable"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildEmojiUpdatePayload","path":"Discord/Gateway/GuildEmojiUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildEmojiUpdatePayload","name":"GuildEmojiUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":221,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_695:JSON::PullParser)-class-method","html_id":"new(__temp_695:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_695","doc":null,"default_value":"","external_name":"__temp_695","restriction":"::JSON::PullParser"}],"args_string":"(__temp_695 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_695","doc":null,"default_value":"","external_name":"__temp_695","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_695)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"emoji:Array(Discord::Emoji)-instance-method","html_id":"emoji:Array(Discord::Emoji)-instance-method","name":"emoji","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Emoji)","source_link":null,"source_link":null,"def":{"name":"emoji","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji"}},{"id":"emoji=(_emoji:Array(Emoji))-instance-method","html_id":"emoji=(_emoji:Array(Emoji))-instance-method","name":"emoji=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"Array(Emoji)"}],"args_string":"(_emoji : Array(Emoji))","source_link":null,"source_link":null,"def":{"name":"emoji=","args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"Array(Emoji)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji = _emoji"}},{"id":"emojis-instance-method","html_id":"emojis-instance-method","name":"emojis","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L227","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L227","def":{"name":"emojis","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"emoji"}},{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _emoji = @emoji\n  if _emoji.nil?\n  else\n    json.field(\"emojis\") do\n      _emoji.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildIntegrationsUpdatePayload","path":"Discord/Gateway/GuildIntegrationsUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildIntegrationsUpdatePayload","name":"GuildIntegrationsUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":234,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_702:JSON::PullParser)-class-method","html_id":"new(__temp_702:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_702","doc":null,"default_value":"","external_name":"__temp_702","restriction":"::JSON::PullParser"}],"args_string":"(__temp_702 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_702","doc":null,"default_value":"","external_name":"__temp_702","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_702)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildMemberAddPayload","path":"Discord/Gateway/GuildMemberAddPayload.html","kind":"struct","full_name":"Discord::Gateway::GuildMemberAddPayload","name":"GuildMemberAddPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":240,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_707:JSON::PullParser)-class-method","html_id":"new(__temp_707:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_707","doc":null,"default_value":"","external_name":"__temp_707","restriction":"::JSON::PullParser"}],"args_string":"(__temp_707 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_707","doc":null,"default_value":"","external_name":"__temp_707","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_707)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"deaf:Bool-instance-method","html_id":"deaf:Bool-instance-method","name":"deaf","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"deaf","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deaf"}},{"id":"deaf=(_deaf:Bool)-instance-method","html_id":"deaf=(_deaf:Bool)-instance-method","name":"deaf=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_deaf","doc":null,"default_value":"","external_name":"_deaf","restriction":"Bool"}],"args_string":"(_deaf : Bool)","source_link":null,"source_link":null,"def":{"name":"deaf=","args":[{"name":"_deaf","doc":null,"default_value":"","external_name":"_deaf","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deaf = _deaf"}},{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"joined_at:Time?-instance-method","html_id":"joined_at:Time?-instance-method","name":"joined_at","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time?","source_link":null,"source_link":null,"def":{"name":"joined_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joined_at"}},{"id":"joined_at=(_joined_at:::Union(Time,Nil))-instance-method","html_id":"joined_at=(_joined_at:::Union(Time,Nil))-instance-method","name":"joined_at=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_joined_at","doc":null,"default_value":"","external_name":"_joined_at","restriction":"::Union(Time, ::Nil)"}],"args_string":"(_joined_at : ::Union(Time, Nil))","source_link":null,"source_link":null,"def":{"name":"joined_at=","args":[{"name":"_joined_at","doc":null,"default_value":"","external_name":"_joined_at","restriction":"::Union(Time, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joined_at = _joined_at"}},{"id":"mute:Bool-instance-method","html_id":"mute:Bool-instance-method","name":"mute","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"mute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mute"}},{"id":"mute=(_mute:Bool)-instance-method","html_id":"mute=(_mute:Bool)-instance-method","name":"mute=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mute","doc":null,"default_value":"","external_name":"_mute","restriction":"Bool"}],"args_string":"(_mute : Bool)","source_link":null,"source_link":null,"def":{"name":"mute=","args":[{"name":"_mute","doc":null,"default_value":"","external_name":"_mute","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mute = _mute"}},{"id":"nick:String?-instance-method","html_id":"nick:String?-instance-method","name":"nick","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"nick","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick"}},{"id":"nick=(_nick:::Union(String,Nil))-instance-method","html_id":"nick=(_nick:::Union(String,Nil))-instance-method","name":"nick=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"::Union(String, ::Nil)"}],"args_string":"(_nick : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"nick=","args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick = _nick"}},{"id":"roles:Array(UInt64)-instance-method","html_id":"roles:Array(UInt64)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(UInt64))-instance-method","html_id":"roles=(_roles:Array(UInt64))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"args_string":"(_roles : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _nick = @nick\n  if _nick.nil?\n  else\n    json.field(\"nick\") do\n      _nick.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      if _roles\n        SnowflakeArrayConverter.to_json(_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _joined_at = @joined_at\n  if _joined_at.nil?\n  else\n    json.field(\"joined_at\") do\n      if _joined_at\n        TimestampConverter.to_json(_joined_at, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _deaf = @deaf\n  if _deaf.nil?\n  else\n    json.field(\"deaf\") do\n      _deaf.to_json(json)\n    end\n  end\n  _mute = @mute\n  if _mute.nil?\n  else\n    json.field(\"mute\") do\n      _mute.to_json(json)\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"user:Discord::User-instance-method","html_id":"user:Discord::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:User)-instance-method","html_id":"user=(_user:User)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"args_string":"(_user : User)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildMemberRemovePayload","path":"Discord/Gateway/GuildMemberRemovePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildMemberRemovePayload","name":"GuildMemberRemovePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":261,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_735:JSON::PullParser)-class-method","html_id":"new(__temp_735:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_735","doc":null,"default_value":"","external_name":"__temp_735","restriction":"::JSON::PullParser"}],"args_string":"(__temp_735 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_735","doc":null,"default_value":"","external_name":"__temp_735","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_735)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"user:Discord::User-instance-method","html_id":"user:Discord::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:User)-instance-method","html_id":"user=(_user:User)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"args_string":"(_user : User)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildMembersChunkPayload","path":"Discord/Gateway/GuildMembersChunkPayload.html","kind":"struct","full_name":"Discord::Gateway::GuildMembersChunkPayload","name":"GuildMembersChunkPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":268,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_742:JSON::PullParser)-class-method","html_id":"new(__temp_742:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_742","doc":null,"default_value":"","external_name":"__temp_742","restriction":"::JSON::PullParser"}],"args_string":"(__temp_742 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_742","doc":null,"default_value":"","external_name":"__temp_742","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_742)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"members:Array(Discord::GuildMember)-instance-method","html_id":"members:Array(Discord::GuildMember)-instance-method","name":"members","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::GuildMember)","source_link":null,"source_link":null,"def":{"name":"members","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@members"}},{"id":"members=(_members:Array(GuildMember))-instance-method","html_id":"members=(_members:Array(GuildMember))-instance-method","name":"members=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_members","doc":null,"default_value":"","external_name":"_members","restriction":"Array(GuildMember)"}],"args_string":"(_members : Array(GuildMember))","source_link":null,"source_link":null,"def":{"name":"members=","args":[{"name":"_members","doc":null,"default_value":"","external_name":"_members","restriction":"Array(GuildMember)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@members = _members"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _members = @members\n  if _members.nil?\n  else\n    json.field(\"members\") do\n      _members.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildMemberUpdatePayload","path":"Discord/Gateway/GuildMemberUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildMemberUpdatePayload","name":"GuildMemberUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":252,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_724:JSON::PullParser)-class-method","html_id":"new(__temp_724:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_724","doc":null,"default_value":"","external_name":"__temp_724","restriction":"::JSON::PullParser"}],"args_string":"(__temp_724 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_724","doc":null,"default_value":"","external_name":"__temp_724","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_724)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"nick:String?-instance-method","html_id":"nick:String?-instance-method","name":"nick","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"nick","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick"}},{"id":"nick=(_nick:String?)-instance-method","html_id":"nick=(_nick:String?)-instance-method","name":"nick=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"String | ::Nil"}],"args_string":"(_nick : String?)","source_link":null,"source_link":null,"def":{"name":"nick=","args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick = _nick"}},{"id":"roles:Array(UInt64)-instance-method","html_id":"roles:Array(UInt64)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(UInt64))-instance-method","html_id":"roles=(_roles:Array(UInt64))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"args_string":"(_roles : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      if _roles\n        SnowflakeArrayConverter.to_json(_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _nick = @nick\n  if _nick.nil?\n  else\n    json.field(\"nick\") do\n      _nick.to_json(json)\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"user:Discord::User-instance-method","html_id":"user:Discord::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:User)-instance-method","html_id":"user=(_user:User)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"args_string":"(_user : User)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildRoleDeletePayload","path":"Discord/Gateway/GuildRoleDeletePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildRoleDeletePayload","name":"GuildRoleDeletePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":282,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_756:JSON::PullParser)-class-method","html_id":"new(__temp_756:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_756","doc":null,"default_value":"","external_name":"__temp_756","restriction":"::JSON::PullParser"}],"args_string":"(__temp_756 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_756","doc":null,"default_value":"","external_name":"__temp_756","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_756)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"role_id:UInt64-instance-method","html_id":"role_id:UInt64-instance-method","name":"role_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"role_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@role_id"}},{"id":"role_id=(_role_id:UInt64)-instance-method","html_id":"role_id=(_role_id:UInt64)-instance-method","name":"role_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_role_id","doc":null,"default_value":"","external_name":"_role_id","restriction":"UInt64"}],"args_string":"(_role_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"role_id=","args":[{"name":"_role_id","doc":null,"default_value":"","external_name":"_role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@role_id = _role_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _role_id = @role_id\n  if _role_id.nil?\n  else\n    json.field(\"role_id\") do\n      if _role_id\n        SnowflakeConverter.to_json(_role_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/GuildRolePayload","path":"Discord/Gateway/GuildRolePayload.html","kind":"struct","full_name":"Discord::Gateway::GuildRolePayload","name":"GuildRolePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":275,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_749:JSON::PullParser)-class-method","html_id":"new(__temp_749:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_749","doc":null,"default_value":"","external_name":"__temp_749","restriction":"::JSON::PullParser"}],"args_string":"(__temp_749 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_749","doc":null,"default_value":"","external_name":"__temp_749","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_749)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"role:Discord::Role-instance-method","html_id":"role:Discord::Role-instance-method","name":"role","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Role","source_link":null,"source_link":null,"def":{"name":"role","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@role"}},{"id":"role=(_role:Role)-instance-method","html_id":"role=(_role:Role)-instance-method","name":"role=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_role","doc":null,"default_value":"","external_name":"_role","restriction":"Role"}],"args_string":"(_role : Role)","source_link":null,"source_link":null,"def":{"name":"role=","args":[{"name":"_role","doc":null,"default_value":"","external_name":"_role","restriction":"Role"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@role = _role"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _role = @role\n  if _role.nil?\n  else\n    json.field(\"role\") do\n      _role.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/HelloPayload","path":"Discord/Gateway/HelloPayload.html","kind":"struct","full_name":"Discord::Gateway::HelloPayload","name":"HelloPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":160,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_617:JSON::PullParser)-class-method","html_id":"new(__temp_617:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_617","doc":null,"default_value":"","external_name":"__temp_617","restriction":"::JSON::PullParser"}],"args_string":"(__temp_617 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_617","doc":null,"default_value":"","external_name":"__temp_617","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_617)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"_trace:Array(String)-instance-method","html_id":"_trace:Array(String)-instance-method","name":"_trace","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"source_link":null,"def":{"name":"_trace","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_trace"}},{"id":"_trace=(__trace:Array(String))-instance-method","html_id":"_trace=(__trace:Array(String))-instance-method","name":"_trace=","doc":null,"summary":null,"abstract":false,"args":[{"name":"__trace","doc":null,"default_value":"","external_name":"__trace","restriction":"Array(String)"}],"args_string":"(__trace : Array(String))","source_link":null,"source_link":null,"def":{"name":"_trace=","args":[{"name":"__trace","doc":null,"default_value":"","external_name":"__trace","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_trace = __trace"}},{"id":"heartbeat_interval:UInt32-instance-method","html_id":"heartbeat_interval:UInt32-instance-method","name":"heartbeat_interval","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"heartbeat_interval","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@heartbeat_interval"}},{"id":"heartbeat_interval=(_heartbeat_interval:UInt32)-instance-method","html_id":"heartbeat_interval=(_heartbeat_interval:UInt32)-instance-method","name":"heartbeat_interval=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_heartbeat_interval","doc":null,"default_value":"","external_name":"_heartbeat_interval","restriction":"UInt32"}],"args_string":"(_heartbeat_interval : UInt32)","source_link":null,"source_link":null,"def":{"name":"heartbeat_interval=","args":[{"name":"_heartbeat_interval","doc":null,"default_value":"","external_name":"_heartbeat_interval","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@heartbeat_interval = _heartbeat_interval"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _heartbeat_interval = @heartbeat_interval\n  if _heartbeat_interval.nil?\n  else\n    json.field(\"heartbeat_interval\") do\n      _heartbeat_interval.to_json(json)\n    end\n  end\n  __trace = @_trace\n  if __trace.nil?\n  else\n    json.field(\"_trace\") do\n      __trace.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/IdentifyPacket","path":"Discord/Gateway/IdentifyPacket.html","kind":"struct","full_name":"Discord::Gateway::IdentifyPacket","name":"IdentifyPacket","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":24,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(token,properties,large_threshold,compress,shard)-class-method","html_id":"new(token,properties,large_threshold,compress,shard)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":""},{"name":"large_threshold","doc":null,"default_value":"","external_name":"large_threshold","restriction":""},{"name":"compress","doc":null,"default_value":"","external_name":"compress","restriction":""},{"name":"shard","doc":null,"default_value":"","external_name":"shard","restriction":""}],"args_string":"(token, properties, large_threshold, compress, shard)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L25","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L25","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":""},{"name":"large_threshold","doc":null,"default_value":"","external_name":"large_threshold","restriction":""},{"name":"compress","doc":null,"default_value":"","external_name":"compress","restriction":""},{"name":"shard","doc":null,"default_value":"","external_name":"shard","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, properties, large_threshold, compress, shard)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_516:JSON::PullParser)-class-method","html_id":"new(__temp_516:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_516","doc":null,"default_value":"","external_name":"__temp_516","restriction":"::JSON::PullParser"}],"args_string":"(__temp_516 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_516","doc":null,"default_value":"","external_name":"__temp_516","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_516)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"d:Discord::Gateway::IdentifyPayload-instance-method","html_id":"d:Discord::Gateway::IdentifyPayload-instance-method","name":"d","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Gateway::IdentifyPayload","source_link":null,"source_link":null,"def":{"name":"d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d"}},{"id":"d=(_d:IdentifyPayload)-instance-method","html_id":"d=(_d:IdentifyPayload)-instance-method","name":"d=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"IdentifyPayload"}],"args_string":"(_d : IdentifyPayload)","source_link":null,"source_link":null,"def":{"name":"d=","args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"IdentifyPayload"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d = _d"}},{"id":"op:Int32-instance-method","html_id":"op:Int32-instance-method","name":"op","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op"}},{"id":"op=(_op:Int32)-instance-method","html_id":"op=(_op:Int32)-instance-method","name":"op=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"args_string":"(_op : Int32)","source_link":null,"source_link":null,"def":{"name":"op=","args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op = _op"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _op = @op\n  if _op.nil?\n  else\n    json.field(\"op\") do\n      _op.to_json(json)\n    end\n  end\n  _d = @d\n  if _d.nil?\n  else\n    json.field(\"d\") do\n      _d.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/IdentifyPayload","path":"Discord/Gateway/IdentifyPayload.html","kind":"struct","full_name":"Discord::Gateway::IdentifyPayload","name":"IdentifyPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":36,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(token,properties,compress,large_threshold,shard)-class-method","html_id":"new(token,properties,compress,large_threshold,shard)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":""},{"name":"compress","doc":null,"default_value":"","external_name":"compress","restriction":""},{"name":"large_threshold","doc":null,"default_value":"","external_name":"large_threshold","restriction":""},{"name":"shard","doc":null,"default_value":"","external_name":"shard","restriction":""}],"args_string":"(token, properties, compress, large_threshold, shard)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L37","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L37","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":""},{"name":"compress","doc":null,"default_value":"","external_name":"compress","restriction":""},{"name":"large_threshold","doc":null,"default_value":"","external_name":"large_threshold","restriction":""},{"name":"shard","doc":null,"default_value":"","external_name":"shard","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, properties, compress, large_threshold, shard)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_523:JSON::PullParser)-class-method","html_id":"new(__temp_523:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_523","doc":null,"default_value":"","external_name":"__temp_523","restriction":"::JSON::PullParser"}],"args_string":"(__temp_523 : JSON::PullParser)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"new","args":[{"name":"__temp_523","doc":null,"default_value":"","external_name":"__temp_523","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_523)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compress:Bool-instance-method","html_id":"compress:Bool-instance-method","name":"compress","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"compress","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@compress"}},{"id":"compress=(_compress:Bool)-instance-method","html_id":"compress=(_compress:Bool)-instance-method","name":"compress=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_compress","doc":null,"default_value":"","external_name":"_compress","restriction":"Bool"}],"args_string":"(_compress : Bool)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"compress=","args":[{"name":"_compress","doc":null,"default_value":"","external_name":"_compress","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@compress = _compress"}},{"id":"large_threshold:Int32-instance-method","html_id":"large_threshold:Int32-instance-method","name":"large_threshold","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"large_threshold","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@large_threshold"}},{"id":"large_threshold=(_large_threshold:Int32)-instance-method","html_id":"large_threshold=(_large_threshold:Int32)-instance-method","name":"large_threshold=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_large_threshold","doc":null,"default_value":"","external_name":"_large_threshold","restriction":"Int32"}],"args_string":"(_large_threshold : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"large_threshold=","args":[{"name":"_large_threshold","doc":null,"default_value":"","external_name":"_large_threshold","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@large_threshold = _large_threshold"}},{"id":"properties:Discord::Gateway::IdentifyProperties-instance-method","html_id":"properties:Discord::Gateway::IdentifyProperties-instance-method","name":"properties","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Gateway::IdentifyProperties","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"properties","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@properties"}},{"id":"properties=(_properties:IdentifyProperties)-instance-method","html_id":"properties=(_properties:IdentifyProperties)-instance-method","name":"properties=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_properties","doc":null,"default_value":"","external_name":"_properties","restriction":"IdentifyProperties"}],"args_string":"(_properties : IdentifyProperties)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"properties=","args":[{"name":"_properties","doc":null,"default_value":"","external_name":"_properties","restriction":"IdentifyProperties"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@properties = _properties"}},{"id":"shard:{Int32,Int32}?-instance-method","html_id":"shard:{Int32,Int32}?-instance-method","name":"shard","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : {Int32, Int32}?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"shard","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shard"}},{"id":"shard=(_shard:::Union(Tuple(Int32,Int32),Nil))-instance-method","html_id":"shard=(_shard:::Union(Tuple(Int32,Int32),Nil))-instance-method","name":"shard=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_shard","doc":null,"default_value":"","external_name":"_shard","restriction":"::Union(Tuple(Int32, Int32), ::Nil)"}],"args_string":"(_shard : ::Union(Tuple(Int32, Int32), Nil))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"shard=","args":[{"name":"_shard","doc":null,"default_value":"","external_name":"_shard","restriction":"::Union(Tuple(Int32, Int32), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shard = _shard"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _token = @token\n  if _token.nil?\n  else\n    json.field(\"token\") do\n      _token.to_json(json)\n    end\n  end\n  _properties = @properties\n  if _properties.nil?\n  else\n    json.field(\"properties\") do\n      _properties.to_json(json)\n    end\n  end\n  _compress = @compress\n  if _compress.nil?\n  else\n    json.field(\"compress\") do\n      _compress.to_json(json)\n    end\n  end\n  _large_threshold = @large_threshold\n  if _large_threshold.nil?\n  else\n    json.field(\"large_threshold\") do\n      _large_threshold.to_json(json)\n    end\n  end\n  _shard = @shard\n  if _shard.nil?\n  else\n    json.field(\"shard\") do\n      _shard.to_json(json)\n    end\n  end\nend"}},{"id":"token:String-instance-method","html_id":"token:String-instance-method","name":"token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token=(_token:String)-instance-method","html_id":"token=(_token:String)-instance-method","name":"token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"args_string":"(_token : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L40","def":{"name":"token=","args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token = _token"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/IdentifyProperties","path":"Discord/Gateway/IdentifyProperties.html","kind":"struct","full_name":"Discord::Gateway::IdentifyProperties","name":"IdentifyProperties","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":49,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(os,browser,device,referrer,referring_domain)-class-method","html_id":"new(os,browser,device,referrer,referring_domain)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"os","doc":null,"default_value":"","external_name":"os","restriction":""},{"name":"browser","doc":null,"default_value":"","external_name":"browser","restriction":""},{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":""},{"name":"referrer","doc":null,"default_value":"","external_name":"referrer","restriction":""},{"name":"referring_domain","doc":null,"default_value":"","external_name":"referring_domain","restriction":""}],"args_string":"(os, browser, device, referrer, referring_domain)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L50","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L50","def":{"name":"new","args":[{"name":"os","doc":null,"default_value":"","external_name":"os","restriction":""},{"name":"browser","doc":null,"default_value":"","external_name":"browser","restriction":""},{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":""},{"name":"referrer","doc":null,"default_value":"","external_name":"referrer","restriction":""},{"name":"referring_domain","doc":null,"default_value":"","external_name":"referring_domain","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(os, browser, device, referrer, referring_domain)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_536:JSON::PullParser)-class-method","html_id":"new(__temp_536:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_536","doc":null,"default_value":"","external_name":"__temp_536","restriction":"::JSON::PullParser"}],"args_string":"(__temp_536 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_536","doc":null,"default_value":"","external_name":"__temp_536","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_536)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"browser:String-instance-method","html_id":"browser:String-instance-method","name":"browser","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"browser","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@browser"}},{"id":"browser=(_browser:String)-instance-method","html_id":"browser=(_browser:String)-instance-method","name":"browser=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_browser","doc":null,"default_value":"","external_name":"_browser","restriction":"String"}],"args_string":"(_browser : String)","source_link":null,"source_link":null,"def":{"name":"browser=","args":[{"name":"_browser","doc":null,"default_value":"","external_name":"_browser","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@browser = _browser"}},{"id":"device:String-instance-method","html_id":"device:String-instance-method","name":"device","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"device","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@device"}},{"id":"device=(_device:String)-instance-method","html_id":"device=(_device:String)-instance-method","name":"device=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_device","doc":null,"default_value":"","external_name":"_device","restriction":"String"}],"args_string":"(_device : String)","source_link":null,"source_link":null,"def":{"name":"device=","args":[{"name":"_device","doc":null,"default_value":"","external_name":"_device","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@device = _device"}},{"id":"os:String-instance-method","html_id":"os:String-instance-method","name":"os","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"os","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os"}},{"id":"os=(_os:String)-instance-method","html_id":"os=(_os:String)-instance-method","name":"os=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_os","doc":null,"default_value":"","external_name":"_os","restriction":"String"}],"args_string":"(_os : String)","source_link":null,"source_link":null,"def":{"name":"os=","args":[{"name":"_os","doc":null,"default_value":"","external_name":"_os","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@os = _os"}},{"id":"referrer:String-instance-method","html_id":"referrer:String-instance-method","name":"referrer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"referrer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@referrer"}},{"id":"referrer=(_referrer:String)-instance-method","html_id":"referrer=(_referrer:String)-instance-method","name":"referrer=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_referrer","doc":null,"default_value":"","external_name":"_referrer","restriction":"String"}],"args_string":"(_referrer : String)","source_link":null,"source_link":null,"def":{"name":"referrer=","args":[{"name":"_referrer","doc":null,"default_value":"","external_name":"_referrer","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@referrer = _referrer"}},{"id":"referring_domain:String-instance-method","html_id":"referring_domain:String-instance-method","name":"referring_domain","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"referring_domain","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@referring_domain"}},{"id":"referring_domain=(_referring_domain:String)-instance-method","html_id":"referring_domain=(_referring_domain:String)-instance-method","name":"referring_domain=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_referring_domain","doc":null,"default_value":"","external_name":"_referring_domain","restriction":"String"}],"args_string":"(_referring_domain : String)","source_link":null,"source_link":null,"def":{"name":"referring_domain=","args":[{"name":"_referring_domain","doc":null,"default_value":"","external_name":"_referring_domain","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@referring_domain = _referring_domain"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _os = @os\n  if _os.nil?\n  else\n    json.field(\"$os\") do\n      _os.to_json(json)\n    end\n  end\n  _browser = @browser\n  if _browser.nil?\n  else\n    json.field(\"$browser\") do\n      _browser.to_json(json)\n    end\n  end\n  _device = @device\n  if _device.nil?\n  else\n    json.field(\"$device\") do\n      _device.to_json(json)\n    end\n  end\n  _referrer = @referrer\n  if _referrer.nil?\n  else\n    json.field(\"$referrer\") do\n      _referrer.to_json(json)\n    end\n  end\n  _referring_domain = @referring_domain\n  if _referring_domain.nil?\n  else\n    json.field(\"$referring_domain\") do\n      _referring_domain.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/MessageDeleteBulkPayload","path":"Discord/Gateway/MessageDeleteBulkPayload.html","kind":"struct","full_name":"Discord::Gateway::MessageDeleteBulkPayload","name":"MessageDeleteBulkPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":330,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_817:JSON::PullParser)-class-method","html_id":"new(__temp_817:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_817","doc":null,"default_value":"","external_name":"__temp_817","restriction":"::JSON::PullParser"}],"args_string":"(__temp_817 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_817","doc":null,"default_value":"","external_name":"__temp_817","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_817)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"ids:Array(UInt64)-instance-method","html_id":"ids:Array(UInt64)-instance-method","name":"ids","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"ids","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ids"}},{"id":"ids=(_ids:Array(UInt64))-instance-method","html_id":"ids=(_ids:Array(UInt64))-instance-method","name":"ids=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_ids","doc":null,"default_value":"","external_name":"_ids","restriction":"Array(UInt64)"}],"args_string":"(_ids : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"ids=","args":[{"name":"_ids","doc":null,"default_value":"","external_name":"_ids","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ids = _ids"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _ids = @ids\n  if _ids.nil?\n  else\n    json.field(\"ids\") do\n      if _ids\n        SnowflakeArrayConverter.to_json(_ids, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/MessageDeletePayload","path":"Discord/Gateway/MessageDeletePayload.html","kind":"struct","full_name":"Discord::Gateway::MessageDeletePayload","name":"MessageDeletePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":323,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_810:JSON::PullParser)-class-method","html_id":"new(__temp_810:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_810","doc":null,"default_value":"","external_name":"__temp_810","restriction":"::JSON::PullParser"}],"args_string":"(__temp_810 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_810","doc":null,"default_value":"","external_name":"__temp_810","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_810)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/MessageReactionPayload","path":"Discord/Gateway/MessageReactionPayload.html","kind":"struct","full_name":"Discord::Gateway::MessageReactionPayload","name":"MessageReactionPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":289,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_763:JSON::PullParser)-class-method","html_id":"new(__temp_763:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_763","doc":null,"default_value":"","external_name":"__temp_763","restriction":"::JSON::PullParser"}],"args_string":"(__temp_763 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_763","doc":null,"default_value":"","external_name":"__temp_763","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_763)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"emoji:Discord::ReactionEmoji-instance-method","html_id":"emoji:Discord::ReactionEmoji-instance-method","name":"emoji","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::ReactionEmoji","source_link":null,"source_link":null,"def":{"name":"emoji","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji"}},{"id":"emoji=(_emoji:ReactionEmoji)-instance-method","html_id":"emoji=(_emoji:ReactionEmoji)-instance-method","name":"emoji=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"ReactionEmoji"}],"args_string":"(_emoji : ReactionEmoji)","source_link":null,"source_link":null,"def":{"name":"emoji=","args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"ReactionEmoji"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji = _emoji"}},{"id":"message_id:UInt64-instance-method","html_id":"message_id:UInt64-instance-method","name":"message_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"message_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message_id"}},{"id":"message_id=(_message_id:UInt64)-instance-method","html_id":"message_id=(_message_id:UInt64)-instance-method","name":"message_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_message_id","doc":null,"default_value":"","external_name":"_message_id","restriction":"UInt64"}],"args_string":"(_message_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"message_id=","args":[{"name":"_message_id","doc":null,"default_value":"","external_name":"_message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message_id = _message_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user_id = @user_id\n  if _user_id.nil?\n  else\n    json.field(\"user_id\") do\n      if _user_id\n        SnowflakeConverter.to_json(_user_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _message_id = @message_id\n  if _message_id.nil?\n  else\n    json.field(\"message_id\") do\n      if _message_id\n        SnowflakeConverter.to_json(_message_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _emoji = @emoji\n  if _emoji.nil?\n  else\n    json.field(\"emoji\") do\n      _emoji.to_json(json)\n    end\n  end\nend"}},{"id":"user_id:UInt64-instance-method","html_id":"user_id:UInt64-instance-method","name":"user_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"user_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_id"}},{"id":"user_id=(_user_id:UInt64)-instance-method","html_id":"user_id=(_user_id:UInt64)-instance-method","name":"user_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user_id","doc":null,"default_value":"","external_name":"_user_id","restriction":"UInt64"}],"args_string":"(_user_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"user_id=","args":[{"name":"_user_id","doc":null,"default_value":"","external_name":"_user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_id = _user_id"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/MessageReactionRemoveAllPayload","path":"Discord/Gateway/MessageReactionRemoveAllPayload.html","kind":"struct","full_name":"Discord::Gateway::MessageReactionRemoveAllPayload","name":"MessageReactionRemoveAllPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":298,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_774:JSON::PullParser)-class-method","html_id":"new(__temp_774:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_774","doc":null,"default_value":"","external_name":"__temp_774","restriction":"::JSON::PullParser"}],"args_string":"(__temp_774 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_774","doc":null,"default_value":"","external_name":"__temp_774","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_774)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"message_id:UInt64-instance-method","html_id":"message_id:UInt64-instance-method","name":"message_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"message_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message_id"}},{"id":"message_id=(_message_id:UInt64)-instance-method","html_id":"message_id=(_message_id:UInt64)-instance-method","name":"message_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_message_id","doc":null,"default_value":"","external_name":"_message_id","restriction":"UInt64"}],"args_string":"(_message_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"message_id=","args":[{"name":"_message_id","doc":null,"default_value":"","external_name":"_message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message_id = _message_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _message_id = @message_id\n  if _message_id.nil?\n  else\n    json.field(\"message_id\") do\n      if _message_id\n        SnowflakeConverter.to_json(_message_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/MessageUpdatePayload","path":"Discord/Gateway/MessageUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::MessageUpdatePayload","name":"MessageUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":305,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_781:JSON::PullParser)-class-method","html_id":"new(__temp_781:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_781","doc":null,"default_value":"","external_name":"__temp_781","restriction":"::JSON::PullParser"}],"args_string":"(__temp_781 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_781","doc":null,"default_value":"","external_name":"__temp_781","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_781)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attachments:Array(Discord::Attachment)?-instance-method","html_id":"attachments:Array(Discord::Attachment)?-instance-method","name":"attachments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Attachment)?","source_link":null,"source_link":null,"def":{"name":"attachments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attachments"}},{"id":"attachments=(_attachments:::Union(Array(Attachment),Nil))-instance-method","html_id":"attachments=(_attachments:::Union(Array(Attachment),Nil))-instance-method","name":"attachments=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_attachments","doc":null,"default_value":"","external_name":"_attachments","restriction":"::Union(Array(Attachment), ::Nil)"}],"args_string":"(_attachments : ::Union(Array(Attachment), Nil))","source_link":null,"source_link":null,"def":{"name":"attachments=","args":[{"name":"_attachments","doc":null,"default_value":"","external_name":"_attachments","restriction":"::Union(Array(Attachment), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attachments = _attachments"}},{"id":"author:Discord::User?-instance-method","html_id":"author:Discord::User?-instance-method","name":"author","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User?","source_link":null,"source_link":null,"def":{"name":"author","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author"}},{"id":"author=(_author:::Union(User,Nil))-instance-method","html_id":"author=(_author:::Union(User,Nil))-instance-method","name":"author=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"::Union(User, ::Nil)"}],"args_string":"(_author : ::Union(User, Nil))","source_link":null,"source_link":null,"def":{"name":"author=","args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"::Union(User, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author = _author"}},{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"content:String?-instance-method","html_id":"content:String?-instance-method","name":"content","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content"}},{"id":"content=(_content:::Union(String,Nil))-instance-method","html_id":"content=(_content:::Union(String,Nil))-instance-method","name":"content=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_content","doc":null,"default_value":"","external_name":"_content","restriction":"::Union(String, ::Nil)"}],"args_string":"(_content : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"content=","args":[{"name":"_content","doc":null,"default_value":"","external_name":"_content","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content = _content"}},{"id":"embeds:Array(Discord::Embed)?-instance-method","html_id":"embeds:Array(Discord::Embed)?-instance-method","name":"embeds","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Embed)?","source_link":null,"source_link":null,"def":{"name":"embeds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embeds"}},{"id":"embeds=(_embeds:::Union(Array(Embed),Nil))-instance-method","html_id":"embeds=(_embeds:::Union(Array(Embed),Nil))-instance-method","name":"embeds=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_embeds","doc":null,"default_value":"","external_name":"_embeds","restriction":"::Union(Array(Embed), ::Nil)"}],"args_string":"(_embeds : ::Union(Array(Embed), Nil))","source_link":null,"source_link":null,"def":{"name":"embeds=","args":[{"name":"_embeds","doc":null,"default_value":"","external_name":"_embeds","restriction":"::Union(Array(Embed), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embeds = _embeds"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"mention_everyone:Bool?-instance-method","html_id":"mention_everyone:Bool?-instance-method","name":"mention_everyone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"mention_everyone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_everyone"}},{"id":"mention_everyone=(_mention_everyone:::Union(Bool,Nil))-instance-method","html_id":"mention_everyone=(_mention_everyone:::Union(Bool,Nil))-instance-method","name":"mention_everyone=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mention_everyone","doc":null,"default_value":"","external_name":"_mention_everyone","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_mention_everyone : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"mention_everyone=","args":[{"name":"_mention_everyone","doc":null,"default_value":"","external_name":"_mention_everyone","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_everyone = _mention_everyone"}},{"id":"mention_roles:Array(UInt64)?-instance-method","html_id":"mention_roles:Array(UInt64)?-instance-method","name":"mention_roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)?","source_link":null,"source_link":null,"def":{"name":"mention_roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_roles"}},{"id":"mention_roles=(_mention_roles:::Union(Array(UInt64),Nil))-instance-method","html_id":"mention_roles=(_mention_roles:::Union(Array(UInt64),Nil))-instance-method","name":"mention_roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mention_roles","doc":null,"default_value":"","external_name":"_mention_roles","restriction":"::Union(Array(UInt64), ::Nil)"}],"args_string":"(_mention_roles : ::Union(Array(UInt64), Nil))","source_link":null,"source_link":null,"def":{"name":"mention_roles=","args":[{"name":"_mention_roles","doc":null,"default_value":"","external_name":"_mention_roles","restriction":"::Union(Array(UInt64), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_roles = _mention_roles"}},{"id":"mentions:Array(Discord::User)?-instance-method","html_id":"mentions:Array(Discord::User)?-instance-method","name":"mentions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::User)?","source_link":null,"source_link":null,"def":{"name":"mentions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mentions"}},{"id":"mentions=(_mentions:::Union(Array(User),Nil))-instance-method","html_id":"mentions=(_mentions:::Union(Array(User),Nil))-instance-method","name":"mentions=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mentions","doc":null,"default_value":"","external_name":"_mentions","restriction":"::Union(Array(User), ::Nil)"}],"args_string":"(_mentions : ::Union(Array(User), Nil))","source_link":null,"source_link":null,"def":{"name":"mentions=","args":[{"name":"_mentions","doc":null,"default_value":"","external_name":"_mentions","restriction":"::Union(Array(User), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mentions = _mentions"}},{"id":"pinned:Bool?-instance-method","html_id":"pinned:Bool?-instance-method","name":"pinned","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"pinned","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pinned"}},{"id":"pinned=(_pinned:::Union(Bool,Nil))-instance-method","html_id":"pinned=(_pinned:::Union(Bool,Nil))-instance-method","name":"pinned=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_pinned","doc":null,"default_value":"","external_name":"_pinned","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_pinned : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"pinned=","args":[{"name":"_pinned","doc":null,"default_value":"","external_name":"_pinned","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pinned = _pinned"}},{"id":"timestamp:Time?-instance-method","html_id":"timestamp:Time?-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time?","source_link":null,"source_link":null,"def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp"}},{"id":"timestamp=(_timestamp:::Union(Time,Nil))-instance-method","html_id":"timestamp=(_timestamp:::Union(Time,Nil))-instance-method","name":"timestamp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"::Union(Time, ::Nil)"}],"args_string":"(_timestamp : ::Union(Time, Nil))","source_link":null,"source_link":null,"def":{"name":"timestamp=","args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"::Union(Time, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp = _timestamp"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _content = @content\n  if _content.nil?\n  else\n    json.field(\"content\") do\n      _content.to_json(json)\n    end\n  end\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _author = @author\n  if _author.nil?\n  else\n    json.field(\"author\") do\n      _author.to_json(json)\n    end\n  end\n  _timestamp = @timestamp\n  if _timestamp.nil?\n  else\n    json.field(\"timestamp\") do\n      if _timestamp\n        TimestampConverter.to_json(_timestamp, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _tts = @tts\n  if _tts.nil?\n  else\n    json.field(\"tts\") do\n      _tts.to_json(json)\n    end\n  end\n  _mention_everyone = @mention_everyone\n  if _mention_everyone.nil?\n  else\n    json.field(\"mention_everyone\") do\n      _mention_everyone.to_json(json)\n    end\n  end\n  _mentions = @mentions\n  if _mentions.nil?\n  else\n    json.field(\"mentions\") do\n      _mentions.to_json(json)\n    end\n  end\n  _mention_roles = @mention_roles\n  if _mention_roles.nil?\n  else\n    json.field(\"mention_roles\") do\n      if _mention_roles\n        SnowflakeArrayConverter.to_json(_mention_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _attachments = @attachments\n  if _attachments.nil?\n  else\n    json.field(\"attachments\") do\n      _attachments.to_json(json)\n    end\n  end\n  _embeds = @embeds\n  if _embeds.nil?\n  else\n    json.field(\"embeds\") do\n      _embeds.to_json(json)\n    end\n  end\n  _pinned = @pinned\n  if _pinned.nil?\n  else\n    json.field(\"pinned\") do\n      _pinned.to_json(json)\n    end\n  end\nend"}},{"id":"tts:Bool?-instance-method","html_id":"tts:Bool?-instance-method","name":"tts","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"tts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tts"}},{"id":"tts=(_tts:::Union(Bool,Nil))-instance-method","html_id":"tts=(_tts:::Union(Bool,Nil))-instance-method","name":"tts=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_tts","doc":null,"default_value":"","external_name":"_tts","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_tts : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"tts=","args":[{"name":"_tts","doc":null,"default_value":"","external_name":"_tts","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tts = _tts"}},{"id":"type:UInt8?-instance-method","html_id":"type:UInt8?-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8?","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:::Union(UInt8,Nil))-instance-method","html_id":"type=(_type:::Union(UInt8,Nil))-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"::Union(UInt8, ::Nil)"}],"args_string":"(_type : ::Union(UInt8, Nil))","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"::Union(UInt8, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/PresenceUpdatePayload","path":"Discord/Gateway/PresenceUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::PresenceUpdatePayload","name":"PresenceUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":337,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_824:JSON::PullParser)-class-method","html_id":"new(__temp_824:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_824","doc":null,"default_value":"","external_name":"__temp_824","restriction":"::JSON::PullParser"}],"args_string":"(__temp_824 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_824","doc":null,"default_value":"","external_name":"__temp_824","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_824)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"game:Discord::GamePlaying?-instance-method","html_id":"game:Discord::GamePlaying?-instance-method","name":"game","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::GamePlaying?","source_link":null,"source_link":null,"def":{"name":"game","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@game"}},{"id":"game=(_game:::Union(GamePlaying,Nil))-instance-method","html_id":"game=(_game:::Union(GamePlaying,Nil))-instance-method","name":"game=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_game","doc":null,"default_value":"","external_name":"_game","restriction":"::Union(GamePlaying, ::Nil)"}],"args_string":"(_game : ::Union(GamePlaying, Nil))","source_link":null,"source_link":null,"def":{"name":"game=","args":[{"name":"_game","doc":null,"default_value":"","external_name":"_game","restriction":"::Union(GamePlaying, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@game = _game"}},{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"nick:String?-instance-method","html_id":"nick:String?-instance-method","name":"nick","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"nick","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick"}},{"id":"nick=(_nick:::Union(String,Nil))-instance-method","html_id":"nick=(_nick:::Union(String,Nil))-instance-method","name":"nick=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"::Union(String, ::Nil)"}],"args_string":"(_nick : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"nick=","args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick = _nick"}},{"id":"roles:Array(UInt64)-instance-method","html_id":"roles:Array(UInt64)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(UInt64))-instance-method","html_id":"roles=(_roles:Array(UInt64))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"args_string":"(_roles : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"status:String-instance-method","html_id":"status:String-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status"}},{"id":"status=(_status:String)-instance-method","html_id":"status=(_status:String)-instance-method","name":"status=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_status","doc":null,"default_value":"","external_name":"_status","restriction":"String"}],"args_string":"(_status : String)","source_link":null,"source_link":null,"def":{"name":"status=","args":[{"name":"_status","doc":null,"default_value":"","external_name":"_status","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status = _status"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      if _roles\n        SnowflakeArrayConverter.to_json(_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _game = @game\n  if _game.nil?\n  else\n    json.field(\"game\") do\n      _game.to_json(json)\n    end\n  end\n  _nick = @nick\n  if _nick.nil?\n  else\n    json.field(\"nick\") do\n      _nick.to_json(json)\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _status = @status\n  if _status.nil?\n  else\n    json.field(\"status\") do\n      _status.to_json(json)\n    end\n  end\nend"}},{"id":"user:Discord::PartialUser-instance-method","html_id":"user:Discord::PartialUser-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::PartialUser","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:PartialUser)-instance-method","html_id":"user=(_user:PartialUser)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"PartialUser"}],"args_string":"(_user : PartialUser)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"PartialUser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/ReadyPayload","path":"Discord/Gateway/ReadyPayload.html","kind":"struct","full_name":"Discord::Gateway::ReadyPayload","name":"ReadyPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":8,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_498:JSON::PullParser)-class-method","html_id":"new(__temp_498:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_498","doc":null,"default_value":"","external_name":"__temp_498","restriction":"::JSON::PullParser"}],"args_string":"(__temp_498 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_498","doc":null,"default_value":"","external_name":"__temp_498","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_498)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"guilds:Array(Discord::UnavailableGuild)-instance-method","html_id":"guilds:Array(Discord::UnavailableGuild)-instance-method","name":"guilds","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::UnavailableGuild)","source_link":null,"source_link":null,"def":{"name":"guilds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guilds"}},{"id":"guilds=(_guilds:Array(UnavailableGuild))-instance-method","html_id":"guilds=(_guilds:Array(UnavailableGuild))-instance-method","name":"guilds=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guilds","doc":null,"default_value":"","external_name":"_guilds","restriction":"Array(UnavailableGuild)"}],"args_string":"(_guilds : Array(UnavailableGuild))","source_link":null,"source_link":null,"def":{"name":"guilds=","args":[{"name":"_guilds","doc":null,"default_value":"","external_name":"_guilds","restriction":"Array(UnavailableGuild)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guilds = _guilds"}},{"id":"private_channels:Array(Discord::PrivateChannel)-instance-method","html_id":"private_channels:Array(Discord::PrivateChannel)-instance-method","name":"private_channels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::PrivateChannel)","source_link":null,"source_link":null,"def":{"name":"private_channels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@private_channels"}},{"id":"private_channels=(_private_channels:Array(PrivateChannel))-instance-method","html_id":"private_channels=(_private_channels:Array(PrivateChannel))-instance-method","name":"private_channels=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_private_channels","doc":null,"default_value":"","external_name":"_private_channels","restriction":"Array(PrivateChannel)"}],"args_string":"(_private_channels : Array(PrivateChannel))","source_link":null,"source_link":null,"def":{"name":"private_channels=","args":[{"name":"_private_channels","doc":null,"default_value":"","external_name":"_private_channels","restriction":"Array(PrivateChannel)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@private_channels = _private_channels"}},{"id":"session_id:String-instance-method","html_id":"session_id:String-instance-method","name":"session_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"session_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@session_id"}},{"id":"session_id=(_session_id:String)-instance-method","html_id":"session_id=(_session_id:String)-instance-method","name":"session_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_session_id","doc":null,"default_value":"","external_name":"_session_id","restriction":"String"}],"args_string":"(_session_id : String)","source_link":null,"source_link":null,"def":{"name":"session_id=","args":[{"name":"_session_id","doc":null,"default_value":"","external_name":"_session_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@session_id = _session_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _v = @v\n  if _v.nil?\n  else\n    json.field(\"v\") do\n      _v.to_json(json)\n    end\n  end\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _private_channels = @private_channels\n  if _private_channels.nil?\n  else\n    json.field(\"private_channels\") do\n      _private_channels.to_json(json)\n    end\n  end\n  _guilds = @guilds\n  if _guilds.nil?\n  else\n    json.field(\"guilds\") do\n      _guilds.to_json(json)\n    end\n  end\n  _session_id = @session_id\n  if _session_id.nil?\n  else\n    json.field(\"session_id\") do\n      _session_id.to_json(json)\n    end\n  end\nend"}},{"id":"user:Discord::User-instance-method","html_id":"user:Discord::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:User)-instance-method","html_id":"user=(_user:User)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"args_string":"(_user : User)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}},{"id":"v:UInt8-instance-method","html_id":"v:UInt8-instance-method","name":"v","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"v","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@v"}},{"id":"v=(_v:UInt8)-instance-method","html_id":"v=(_v:UInt8)-instance-method","name":"v=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_v","doc":null,"default_value":"","external_name":"_v","restriction":"UInt8"}],"args_string":"(_v : UInt8)","source_link":null,"source_link":null,"def":{"name":"v=","args":[{"name":"_v","doc":null,"default_value":"","external_name":"_v","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@v = _v"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/RequestGuildMembersPacket","path":"Discord/Gateway/RequestGuildMembersPacket.html","kind":"struct","full_name":"Discord::Gateway::RequestGuildMembersPacket","name":"RequestGuildMembersPacket","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":136,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(guild_id,query,limit)-class-method","html_id":"new(guild_id,query,limit)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":""},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""}],"args_string":"(guild_id, query, limit)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L137","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L137","def":{"name":"new","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":""},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""},{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(guild_id, query, limit)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_601:JSON::PullParser)-class-method","html_id":"new(__temp_601:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_601","doc":null,"default_value":"","external_name":"__temp_601","restriction":"::JSON::PullParser"}],"args_string":"(__temp_601 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_601","doc":null,"default_value":"","external_name":"__temp_601","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_601)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"d:Discord::Gateway::RequestGuildMembersPayload-instance-method","html_id":"d:Discord::Gateway::RequestGuildMembersPayload-instance-method","name":"d","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Gateway::RequestGuildMembersPayload","source_link":null,"source_link":null,"def":{"name":"d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d"}},{"id":"d=(_d:RequestGuildMembersPayload)-instance-method","html_id":"d=(_d:RequestGuildMembersPayload)-instance-method","name":"d=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"RequestGuildMembersPayload"}],"args_string":"(_d : RequestGuildMembersPayload)","source_link":null,"source_link":null,"def":{"name":"d=","args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"RequestGuildMembersPayload"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d = _d"}},{"id":"op:Int32-instance-method","html_id":"op:Int32-instance-method","name":"op","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op"}},{"id":"op=(_op:Int32)-instance-method","html_id":"op=(_op:Int32)-instance-method","name":"op=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"args_string":"(_op : Int32)","source_link":null,"source_link":null,"def":{"name":"op=","args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op = _op"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _op = @op\n  if _op.nil?\n  else\n    json.field(\"op\") do\n      _op.to_json(json)\n    end\n  end\n  _d = @d\n  if _d.nil?\n  else\n    json.field(\"d\") do\n      _d.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/ResumedPayload","path":"Discord/Gateway/ResumedPayload.html","kind":"struct","full_name":"Discord::Gateway::ResumedPayload","name":"ResumedPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":18,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_511:JSON::PullParser)-class-method","html_id":"new(__temp_511:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_511","doc":null,"default_value":"","external_name":"__temp_511","restriction":"::JSON::PullParser"}],"args_string":"(__temp_511 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_511","doc":null,"default_value":"","external_name":"__temp_511","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_511)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"_trace:Array(String)-instance-method","html_id":"_trace:Array(String)-instance-method","name":"_trace","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"source_link":null,"def":{"name":"_trace","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_trace"}},{"id":"_trace=(__trace:Array(String))-instance-method","html_id":"_trace=(__trace:Array(String))-instance-method","name":"_trace=","doc":null,"summary":null,"abstract":false,"args":[{"name":"__trace","doc":null,"default_value":"","external_name":"__trace","restriction":"Array(String)"}],"args_string":"(__trace : Array(String))","source_link":null,"source_link":null,"def":{"name":"_trace=","args":[{"name":"__trace","doc":null,"default_value":"","external_name":"__trace","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_trace = __trace"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  __trace = @_trace\n  if __trace.nil?\n  else\n    json.field(\"_trace\") do\n      __trace.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/ResumePacket","path":"Discord/Gateway/ResumePacket.html","kind":"struct","full_name":"Discord::Gateway::ResumePacket","name":"ResumePacket","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":62,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(token,session_id,seq)-class-method","html_id":"new(token,session_id,seq)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"session_id","doc":null,"default_value":"","external_name":"session_id","restriction":""},{"name":"seq","doc":null,"default_value":"","external_name":"seq","restriction":""}],"args_string":"(token, session_id, seq)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L63","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L63","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"session_id","doc":null,"default_value":"","external_name":"session_id","restriction":""},{"name":"seq","doc":null,"default_value":"","external_name":"seq","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, session_id, seq)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_549:JSON::PullParser)-class-method","html_id":"new(__temp_549:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_549","doc":null,"default_value":"","external_name":"__temp_549","restriction":"::JSON::PullParser"}],"args_string":"(__temp_549 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_549","doc":null,"default_value":"","external_name":"__temp_549","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_549)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"d:Discord::Gateway::ResumePayload-instance-method","html_id":"d:Discord::Gateway::ResumePayload-instance-method","name":"d","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Gateway::ResumePayload","source_link":null,"source_link":null,"def":{"name":"d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d"}},{"id":"d=(_d:ResumePayload)-instance-method","html_id":"d=(_d:ResumePayload)-instance-method","name":"d=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"ResumePayload"}],"args_string":"(_d : ResumePayload)","source_link":null,"source_link":null,"def":{"name":"d=","args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"ResumePayload"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d = _d"}},{"id":"op:Int32-instance-method","html_id":"op:Int32-instance-method","name":"op","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op"}},{"id":"op=(_op:Int32)-instance-method","html_id":"op=(_op:Int32)-instance-method","name":"op=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"args_string":"(_op : Int32)","source_link":null,"source_link":null,"def":{"name":"op=","args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op = _op"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _op = @op\n  if _op.nil?\n  else\n    json.field(\"op\") do\n      _op.to_json(json)\n    end\n  end\n  _d = @d\n  if _d.nil?\n  else\n    json.field(\"d\") do\n      _d.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/Session","path":"Discord/Gateway/Session.html","kind":"class","full_name":"Discord::Gateway::Session","name":"Session","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/client.cr","line_number":811,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(session_id:String)-class-method","html_id":"new(session_id:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"session_id","doc":null,"default_value":"","external_name":"session_id","restriction":"String"}],"args_string":"(session_id : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L815","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L815","def":{"name":"new","args":[{"name":"session_id","doc":null,"default_value":"","external_name":"session_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(session_id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"invalid?:Bool-instance-method","html_id":"invalid?:Bool-instance-method","name":"invalid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L834","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L834","def":{"name":"invalid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@invalid"}},{"id":"invalidate-instance-method","html_id":"invalidate-instance-method","name":"invalidate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L830","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L830","def":{"name":"invalidate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@invalid = true"}},{"id":"sequence:Int64-instance-method","html_id":"sequence:Int64-instance-method","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L813","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L813","def":{"name":"sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sequence"}},{"id":"sequence=(sequence)-instance-method","html_id":"sequence=(sequence)-instance-method","name":"sequence=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""}],"args_string":"(sequence)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L813","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L813","def":{"name":"sequence=","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sequence = sequence"}},{"id":"session_id:String-instance-method","html_id":"session_id:String-instance-method","name":"session_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L812","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L812","def":{"name":"session_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@session_id"}},{"id":"should_resume?:Bool-instance-method","html_id":"should_resume?:Bool-instance-method","name":"should_resume?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L838","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L838","def":{"name":"should_resume?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"suspended? && (!invalid?)"}},{"id":"suspend-instance-method","html_id":"suspend-instance-method","name":"suspend","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L822","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L822","def":{"name":"suspend","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@suspended = true"}},{"id":"suspended?:Bool-instance-method","html_id":"suspended?:Bool-instance-method","name":"suspended?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L826","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr#L826","def":{"name":"suspended?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@suspended"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/ShardKey","path":"Discord/Gateway/ShardKey.html","kind":"alias","full_name":"Discord::Gateway::ShardKey","name":"ShardKey","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/client.cr","line_number":809,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/client.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(shard_id: Int32, num_shards: Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/StatusUpdatePacket","path":"Discord/Gateway/StatusUpdatePacket.html","kind":"struct","full_name":"Discord::Gateway::StatusUpdatePacket","name":"StatusUpdatePacket","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":86,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(status,game,afk,since)-class-method","html_id":"new(status,game,afk,since)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":""},{"name":"game","doc":null,"default_value":"","external_name":"game","restriction":""},{"name":"afk","doc":null,"default_value":"","external_name":"afk","restriction":""},{"name":"since","doc":null,"default_value":"","external_name":"since","restriction":""}],"args_string":"(status, game, afk, since)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L87","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L87","def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":""},{"name":"game","doc":null,"default_value":"","external_name":"game","restriction":""},{"name":"afk","doc":null,"default_value":"","external_name":"afk","restriction":""},{"name":"since","doc":null,"default_value":"","external_name":"since","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, game, afk, since)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_565:JSON::PullParser)-class-method","html_id":"new(__temp_565:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_565","doc":null,"default_value":"","external_name":"__temp_565","restriction":"::JSON::PullParser"}],"args_string":"(__temp_565 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_565","doc":null,"default_value":"","external_name":"__temp_565","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_565)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"d:Discord::Gateway::StatusUpdatePayload-instance-method","html_id":"d:Discord::Gateway::StatusUpdatePayload-instance-method","name":"d","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Gateway::StatusUpdatePayload","source_link":null,"source_link":null,"def":{"name":"d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d"}},{"id":"d=(_d:StatusUpdatePayload)-instance-method","html_id":"d=(_d:StatusUpdatePayload)-instance-method","name":"d=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"StatusUpdatePayload"}],"args_string":"(_d : StatusUpdatePayload)","source_link":null,"source_link":null,"def":{"name":"d=","args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"StatusUpdatePayload"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d = _d"}},{"id":"op:Int32-instance-method","html_id":"op:Int32-instance-method","name":"op","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op"}},{"id":"op=(_op:Int32)-instance-method","html_id":"op=(_op:Int32)-instance-method","name":"op=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"args_string":"(_op : Int32)","source_link":null,"source_link":null,"def":{"name":"op=","args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op = _op"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _op = @op\n  if _op.nil?\n  else\n    json.field(\"op\") do\n      _op.to_json(json)\n    end\n  end\n  _d = @d\n  if _d.nil?\n  else\n    json.field(\"d\") do\n      _d.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/TypingStartPayload","path":"Discord/Gateway/TypingStartPayload.html","kind":"struct","full_name":"Discord::Gateway::TypingStartPayload","name":"TypingStartPayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":348,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_839:JSON::PullParser)-class-method","html_id":"new(__temp_839:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_839","doc":null,"default_value":"","external_name":"__temp_839","restriction":"::JSON::PullParser"}],"args_string":"(__temp_839 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_839","doc":null,"default_value":"","external_name":"__temp_839","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_839)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"timestamp:Time-instance-method","html_id":"timestamp:Time-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time","source_link":null,"source_link":null,"def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp"}},{"id":"timestamp=(_timestamp:Time)-instance-method","html_id":"timestamp=(_timestamp:Time)-instance-method","name":"timestamp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"Time"}],"args_string":"(_timestamp : Time)","source_link":null,"source_link":null,"def":{"name":"timestamp=","args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp = _timestamp"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _user_id = @user_id\n  if _user_id.nil?\n  else\n    json.field(\"user_id\") do\n      if _user_id\n        SnowflakeConverter.to_json(_user_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _timestamp = @timestamp\n  if _timestamp.nil?\n  else\n    json.field(\"timestamp\") do\n      if _timestamp\n        Time::EpochConverter.to_json(_timestamp, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"user_id:UInt64-instance-method","html_id":"user_id:UInt64-instance-method","name":"user_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"user_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_id"}},{"id":"user_id=(_user_id:UInt64)-instance-method","html_id":"user_id=(_user_id:UInt64)-instance-method","name":"user_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user_id","doc":null,"default_value":"","external_name":"_user_id","restriction":"UInt64"}],"args_string":"(_user_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"user_id=","args":[{"name":"_user_id","doc":null,"default_value":"","external_name":"_user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_id = _user_id"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/VoiceServerUpdatePayload","path":"Discord/Gateway/VoiceServerUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::VoiceServerUpdatePayload","name":"VoiceServerUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":356,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_848:JSON::PullParser)-class-method","html_id":"new(__temp_848:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_848","doc":null,"default_value":"","external_name":"__temp_848","restriction":"::JSON::PullParser"}],"args_string":"(__temp_848 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_848","doc":null,"default_value":"","external_name":"__temp_848","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_848)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"endpoint:String-instance-method","html_id":"endpoint:String-instance-method","name":"endpoint","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"endpoint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@endpoint"}},{"id":"endpoint=(_endpoint:String)-instance-method","html_id":"endpoint=(_endpoint:String)-instance-method","name":"endpoint=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_endpoint","doc":null,"default_value":"","external_name":"_endpoint","restriction":"String"}],"args_string":"(_endpoint : String)","source_link":null,"source_link":null,"def":{"name":"endpoint=","args":[{"name":"_endpoint","doc":null,"default_value":"","external_name":"_endpoint","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@endpoint = _endpoint"}},{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _token = @token\n  if _token.nil?\n  else\n    json.field(\"token\") do\n      _token.to_json(json)\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _endpoint = @endpoint\n  if _endpoint.nil?\n  else\n    json.field(\"endpoint\") do\n      _endpoint.to_json(json)\n    end\n  end\nend"}},{"id":"token:String-instance-method","html_id":"token:String-instance-method","name":"token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token=(_token:String)-instance-method","html_id":"token=(_token:String)-instance-method","name":"token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"args_string":"(_token : String)","source_link":null,"source_link":null,"def":{"name":"token=","args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token = _token"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/VoiceStateUpdatePacket","path":"Discord/Gateway/VoiceStateUpdatePacket.html","kind":"struct","full_name":"Discord::Gateway::VoiceStateUpdatePacket","name":"VoiceStateUpdatePacket","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":111,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(guild_id,channel_id,self_mute,self_deaf)-class-method","html_id":"new(guild_id,channel_id,self_mute,self_deaf)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":""},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":""},{"name":"self_mute","doc":null,"default_value":"","external_name":"self_mute","restriction":""},{"name":"self_deaf","doc":null,"default_value":"","external_name":"self_deaf","restriction":""}],"args_string":"(guild_id, channel_id, self_mute, self_deaf)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L112","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr#L112","def":{"name":"new","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":""},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":""},{"name":"self_mute","doc":null,"default_value":"","external_name":"self_mute","restriction":""},{"name":"self_deaf","doc":null,"default_value":"","external_name":"self_deaf","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(guild_id, channel_id, self_mute, self_deaf)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(__temp_583:JSON::PullParser)-class-method","html_id":"new(__temp_583:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_583","doc":null,"default_value":"","external_name":"__temp_583","restriction":"::JSON::PullParser"}],"args_string":"(__temp_583 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_583","doc":null,"default_value":"","external_name":"__temp_583","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_583)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"d:Discord::Gateway::VoiceStateUpdatePayload-instance-method","html_id":"d:Discord::Gateway::VoiceStateUpdatePayload-instance-method","name":"d","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Gateway::VoiceStateUpdatePayload","source_link":null,"source_link":null,"def":{"name":"d","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d"}},{"id":"d=(_d:VoiceStateUpdatePayload)-instance-method","html_id":"d=(_d:VoiceStateUpdatePayload)-instance-method","name":"d=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"VoiceStateUpdatePayload"}],"args_string":"(_d : VoiceStateUpdatePayload)","source_link":null,"source_link":null,"def":{"name":"d=","args":[{"name":"_d","doc":null,"default_value":"","external_name":"_d","restriction":"VoiceStateUpdatePayload"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d = _d"}},{"id":"op:Int32-instance-method","html_id":"op:Int32-instance-method","name":"op","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op"}},{"id":"op=(_op:Int32)-instance-method","html_id":"op=(_op:Int32)-instance-method","name":"op=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"args_string":"(_op : Int32)","source_link":null,"source_link":null,"def":{"name":"op=","args":[{"name":"_op","doc":null,"default_value":"","external_name":"_op","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@op = _op"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _op = @op\n  if _op.nil?\n  else\n    json.field(\"op\") do\n      _op.to_json(json)\n    end\n  end\n  _d = @d\n  if _d.nil?\n  else\n    json.field(\"d\") do\n      _d.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Gateway/WebhooksUpdatePayload","path":"Discord/Gateway/WebhooksUpdatePayload.html","kind":"struct","full_name":"Discord::Gateway::WebhooksUpdatePayload","name":"WebhooksUpdatePayload","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/gateway.cr","line_number":364,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/gateway.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Gateway","kind":"module","full_name":"Discord::Gateway","name":"Gateway"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_857:JSON::PullParser)-class-method","html_id":"new(__temp_857:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_857","doc":null,"default_value":"","external_name":"__temp_857","restriction":"::JSON::PullParser"}],"args_string":"(__temp_857 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_857","doc":null,"default_value":"","external_name":"__temp_857","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_857)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"guild_id:UInt64-instance-method","html_id":"guild_id:UInt64-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:UInt64)-instance-method","html_id":"guild_id=(_guild_id:UInt64)-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"args_string":"(_guild_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr/Discord/Guild","path":"Discord/Guild.html","kind":"struct","full_name":"Discord::Guild","name":"Guild","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":5,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_346:JSON::PullParser)-class-method","html_id":"new(__temp_346:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_346","doc":null,"default_value":"","external_name":"__temp_346","restriction":"::JSON::PullParser"}],"args_string":"(__temp_346 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_346","doc":null,"default_value":"","external_name":"__temp_346","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_346)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"afk_channel_id:UInt64?-instance-method","html_id":"afk_channel_id:UInt64?-instance-method","name":"afk_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"afk_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_channel_id"}},{"id":"afk_channel_id=(_afk_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"afk_channel_id=(_afk_channel_id:::Union(UInt64,Nil))-instance-method","name":"afk_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_afk_channel_id","doc":null,"default_value":"","external_name":"_afk_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_afk_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"afk_channel_id=","args":[{"name":"_afk_channel_id","doc":null,"default_value":"","external_name":"_afk_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_channel_id = _afk_channel_id"}},{"id":"afk_timeout:Int32?-instance-method","html_id":"afk_timeout:Int32?-instance-method","name":"afk_timeout","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":null,"source_link":null,"def":{"name":"afk_timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_timeout"}},{"id":"afk_timeout=(_afk_timeout:::Union(Int32,Nil))-instance-method","html_id":"afk_timeout=(_afk_timeout:::Union(Int32,Nil))-instance-method","name":"afk_timeout=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_afk_timeout","doc":null,"default_value":"","external_name":"_afk_timeout","restriction":"::Union(Int32, ::Nil)"}],"args_string":"(_afk_timeout : ::Union(Int32, Nil))","source_link":null,"source_link":null,"def":{"name":"afk_timeout=","args":[{"name":"_afk_timeout","doc":null,"default_value":"","external_name":"_afk_timeout","restriction":"::Union(Int32, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@afk_timeout = _afk_timeout"}},{"id":"default_message_notifications:UInt8-instance-method","html_id":"default_message_notifications:UInt8-instance-method","name":"default_message_notifications","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"default_message_notifications","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_message_notifications"}},{"id":"default_message_notifications=(_default_message_notifications:UInt8)-instance-method","html_id":"default_message_notifications=(_default_message_notifications:UInt8)-instance-method","name":"default_message_notifications=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_default_message_notifications","doc":null,"default_value":"","external_name":"_default_message_notifications","restriction":"UInt8"}],"args_string":"(_default_message_notifications : UInt8)","source_link":null,"source_link":null,"def":{"name":"default_message_notifications=","args":[{"name":"_default_message_notifications","doc":null,"default_value":"","external_name":"_default_message_notifications","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_message_notifications = _default_message_notifications"}},{"id":"embed_channel_id:UInt64?-instance-method","html_id":"embed_channel_id:UInt64?-instance-method","name":"embed_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"embed_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embed_channel_id"}},{"id":"embed_channel_id=(_embed_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"embed_channel_id=(_embed_channel_id:::Union(UInt64,Nil))-instance-method","name":"embed_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_embed_channel_id","doc":null,"default_value":"","external_name":"_embed_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_embed_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"embed_channel_id=","args":[{"name":"_embed_channel_id","doc":null,"default_value":"","external_name":"_embed_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embed_channel_id = _embed_channel_id"}},{"id":"embed_enabled:Bool?-instance-method","html_id":"embed_enabled:Bool?-instance-method","name":"embed_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"embed_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embed_enabled"}},{"id":"embed_enabled=(_embed_enabled:::Union(Bool,Nil))-instance-method","html_id":"embed_enabled=(_embed_enabled:::Union(Bool,Nil))-instance-method","name":"embed_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_embed_enabled","doc":null,"default_value":"","external_name":"_embed_enabled","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_embed_enabled : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"embed_enabled=","args":[{"name":"_embed_enabled","doc":null,"default_value":"","external_name":"_embed_enabled","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embed_enabled = _embed_enabled"}},{"id":"emoji:Array(Discord::Emoji)-instance-method","html_id":"emoji:Array(Discord::Emoji)-instance-method","name":"emoji","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Emoji)","source_link":null,"source_link":null,"def":{"name":"emoji","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji"}},{"id":"emoji=(_emoji:Array(Emoji))-instance-method","html_id":"emoji=(_emoji:Array(Emoji))-instance-method","name":"emoji=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"Array(Emoji)"}],"args_string":"(_emoji : Array(Emoji))","source_link":null,"source_link":null,"def":{"name":"emoji=","args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"Array(Emoji)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji = _emoji"}},{"id":"emojis-instance-method","html_id":"emojis-instance-method","name":"emojis","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L48","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L48","def":{"name":"emojis","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"emoji"}},{"id":"explicit_content_filter:UInt8-instance-method","html_id":"explicit_content_filter:UInt8-instance-method","name":"explicit_content_filter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"explicit_content_filter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@explicit_content_filter"}},{"id":"explicit_content_filter=(_explicit_content_filter:UInt8)-instance-method","html_id":"explicit_content_filter=(_explicit_content_filter:UInt8)-instance-method","name":"explicit_content_filter=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_explicit_content_filter","doc":null,"default_value":"","external_name":"_explicit_content_filter","restriction":"UInt8"}],"args_string":"(_explicit_content_filter : UInt8)","source_link":null,"source_link":null,"def":{"name":"explicit_content_filter=","args":[{"name":"_explicit_content_filter","doc":null,"default_value":"","external_name":"_explicit_content_filter","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@explicit_content_filter = _explicit_content_filter"}},{"id":"features:Array(String)-instance-method","html_id":"features:Array(String)-instance-method","name":"features","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"source_link":null,"def":{"name":"features","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@features"}},{"id":"features=(_features:Array(String))-instance-method","html_id":"features=(_features:Array(String))-instance-method","name":"features=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_features","doc":null,"default_value":"","external_name":"_features","restriction":"Array(String)"}],"args_string":"(_features : Array(String))","source_link":null,"source_link":null,"def":{"name":"features=","args":[{"name":"_features","doc":null,"default_value":"","external_name":"_features","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@features = _features"}},{"id":"icon:String?-instance-method","html_id":"icon:String?-instance-method","name":"icon","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"icon","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon"}},{"id":"icon=(_icon:::Union(String,Nil))-instance-method","html_id":"icon=(_icon:::Union(String,Nil))-instance-method","name":"icon=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"args_string":"(_icon : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"icon=","args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon = _icon"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"owner_id:UInt64-instance-method","html_id":"owner_id:UInt64-instance-method","name":"owner_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"owner_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner_id"}},{"id":"owner_id=(_owner_id:UInt64)-instance-method","html_id":"owner_id=(_owner_id:UInt64)-instance-method","name":"owner_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_owner_id","doc":null,"default_value":"","external_name":"_owner_id","restriction":"UInt64"}],"args_string":"(_owner_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"owner_id=","args":[{"name":"_owner_id","doc":null,"default_value":"","external_name":"_owner_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner_id = _owner_id"}},{"id":"region:String-instance-method","html_id":"region:String-instance-method","name":"region","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"region","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@region"}},{"id":"region=(_region:String)-instance-method","html_id":"region=(_region:String)-instance-method","name":"region=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_region","doc":null,"default_value":"","external_name":"_region","restriction":"String"}],"args_string":"(_region : String)","source_link":null,"source_link":null,"def":{"name":"region=","args":[{"name":"_region","doc":null,"default_value":"","external_name":"_region","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@region = _region"}},{"id":"roles:Array(Discord::Role)-instance-method","html_id":"roles:Array(Discord::Role)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Role)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(Role))-instance-method","html_id":"roles=(_roles:Array(Role))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(Role)"}],"args_string":"(_roles : Array(Role))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(Role)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"splash:String?-instance-method","html_id":"splash:String?-instance-method","name":"splash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"splash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@splash"}},{"id":"splash=(_splash:::Union(String,Nil))-instance-method","html_id":"splash=(_splash:::Union(String,Nil))-instance-method","name":"splash=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_splash","doc":null,"default_value":"","external_name":"_splash","restriction":"::Union(String, ::Nil)"}],"args_string":"(_splash : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"splash=","args":[{"name":"_splash","doc":null,"default_value":"","external_name":"_splash","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@splash = _splash"}},{"id":"system_channel_id:UInt64?-instance-method","html_id":"system_channel_id:UInt64?-instance-method","name":"system_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"system_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@system_channel_id"}},{"id":"system_channel_id=(_system_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"system_channel_id=(_system_channel_id:::Union(UInt64,Nil))-instance-method","name":"system_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_system_channel_id","doc":null,"default_value":"","external_name":"_system_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_system_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"system_channel_id=","args":[{"name":"_system_channel_id","doc":null,"default_value":"","external_name":"_system_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@system_channel_id = _system_channel_id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _icon = @icon\n  if _icon.nil?\n  else\n    json.field(\"icon\") do\n      _icon.to_json(json)\n    end\n  end\n  _splash = @splash\n  if _splash.nil?\n  else\n    json.field(\"splash\") do\n      _splash.to_json(json)\n    end\n  end\n  _owner_id = @owner_id\n  if _owner_id.nil?\n  else\n    json.field(\"owner_id\") do\n      if _owner_id\n        SnowflakeConverter.to_json(_owner_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _region = @region\n  if _region.nil?\n  else\n    json.field(\"region\") do\n      _region.to_json(json)\n    end\n  end\n  _afk_channel_id = @afk_channel_id\n  if _afk_channel_id.nil?\n  else\n    json.field(\"afk_channel_id\") do\n      if _afk_channel_id\n        MaybeSnowflakeConverter.to_json(_afk_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _afk_timeout = @afk_timeout\n  if _afk_timeout.nil?\n  else\n    json.field(\"afk_timeout\") do\n      _afk_timeout.to_json(json)\n    end\n  end\n  _embed_enabled = @embed_enabled\n  if _embed_enabled.nil?\n  else\n    json.field(\"embed_enabled\") do\n      _embed_enabled.to_json(json)\n    end\n  end\n  _embed_channel_id = @embed_channel_id\n  if _embed_channel_id.nil?\n  else\n    json.field(\"embed_channel_id\") do\n      if _embed_channel_id\n        MaybeSnowflakeConverter.to_json(_embed_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _verification_level = @verification_level\n  if _verification_level.nil?\n  else\n    json.field(\"verification_level\") do\n      _verification_level.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      _roles.to_json(json)\n    end\n  end\n  _emoji = @emoji\n  if _emoji.nil?\n  else\n    json.field(\"emojis\") do\n      _emoji.to_json(json)\n    end\n  end\n  _features = @features\n  if _features.nil?\n  else\n    json.field(\"features\") do\n      _features.to_json(json)\n    end\n  end\n  _widget_enabled = @widget_enabled\n  if _widget_enabled.nil?\n  else\n    json.field(\"widget_enabled\") do\n      _widget_enabled.to_json(json)\n    end\n  end\n  _widget_channel_id = @widget_channel_id\n  if _widget_channel_id.nil?\n  else\n    json.field(\"widget_channel_id\") do\n      if _widget_channel_id\n        MaybeSnowflakeConverter.to_json(_widget_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _default_message_notifications = @default_message_notifications\n  if _default_message_notifications.nil?\n  else\n    json.field(\"default_message_notifications\") do\n      _default_message_notifications.to_json(json)\n    end\n  end\n  _explicit_content_filter = @explicit_content_filter\n  if _explicit_content_filter.nil?\n  else\n    json.field(\"explicit_content_filter\") do\n      _explicit_content_filter.to_json(json)\n    end\n  end\n  _system_channel_id = @system_channel_id\n  if _system_channel_id.nil?\n  else\n    json.field(\"system_channel_id\") do\n      if _system_channel_id\n        MaybeSnowflakeConverter.to_json(_system_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"verification_level:UInt8-instance-method","html_id":"verification_level:UInt8-instance-method","name":"verification_level","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"verification_level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verification_level"}},{"id":"verification_level=(_verification_level:UInt8)-instance-method","html_id":"verification_level=(_verification_level:UInt8)-instance-method","name":"verification_level=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_verification_level","doc":null,"default_value":"","external_name":"_verification_level","restriction":"UInt8"}],"args_string":"(_verification_level : UInt8)","source_link":null,"source_link":null,"def":{"name":"verification_level=","args":[{"name":"_verification_level","doc":null,"default_value":"","external_name":"_verification_level","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verification_level = _verification_level"}},{"id":"widget_channel_id:UInt64?-instance-method","html_id":"widget_channel_id:UInt64?-instance-method","name":"widget_channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"widget_channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@widget_channel_id"}},{"id":"widget_channel_id=(_widget_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"widget_channel_id=(_widget_channel_id:::Union(UInt64,Nil))-instance-method","name":"widget_channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_widget_channel_id","doc":null,"default_value":"","external_name":"_widget_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_widget_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"widget_channel_id=","args":[{"name":"_widget_channel_id","doc":null,"default_value":"","external_name":"_widget_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@widget_channel_id = _widget_channel_id"}},{"id":"widget_enabled:Bool?-instance-method","html_id":"widget_enabled:Bool?-instance-method","name":"widget_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"widget_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@widget_enabled"}},{"id":"widget_enabled=(_widget_enabled:Bool?)-instance-method","html_id":"widget_enabled=(_widget_enabled:Bool?)-instance-method","name":"widget_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_widget_enabled","doc":null,"default_value":"","external_name":"_widget_enabled","restriction":"Bool | ::Nil"}],"args_string":"(_widget_enabled : Bool?)","source_link":null,"source_link":null,"def":{"name":"widget_enabled=","args":[{"name":"_widget_enabled","doc":null,"default_value":"","external_name":"_widget_enabled","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@widget_enabled = _widget_enabled"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/GuildEmbed","path":"Discord/GuildEmbed.html","kind":"struct","full_name":"Discord::GuildEmbed","name":"GuildEmbed","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":62,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_394:JSON::PullParser)-class-method","html_id":"new(__temp_394:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_394","doc":null,"default_value":"","external_name":"__temp_394","restriction":"::JSON::PullParser"}],"args_string":"(__temp_394 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_394","doc":null,"default_value":"","external_name":"__temp_394","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_394)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    json.field(\"enabled\") do\n      _enabled.to_json(json)\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/GuildMember","path":"Discord/GuildMember.html","kind":"struct","full_name":"Discord::GuildMember","name":"GuildMember","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":69,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_401:JSON::PullParser)-class-method","html_id":"new(__temp_401:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_401","doc":null,"default_value":"","external_name":"__temp_401","restriction":"::JSON::PullParser"}],"args_string":"(__temp_401 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_401","doc":null,"default_value":"","external_name":"__temp_401","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_401)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"deaf:Bool?-instance-method","html_id":"deaf:Bool?-instance-method","name":"deaf","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"deaf","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deaf"}},{"id":"deaf=(_deaf:::Union(Bool,Nil))-instance-method","html_id":"deaf=(_deaf:::Union(Bool,Nil))-instance-method","name":"deaf=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_deaf","doc":null,"default_value":"","external_name":"_deaf","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_deaf : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"deaf=","args":[{"name":"_deaf","doc":null,"default_value":"","external_name":"_deaf","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deaf = _deaf"}},{"id":"joined_at:Time?-instance-method","html_id":"joined_at:Time?-instance-method","name":"joined_at","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time?","source_link":null,"source_link":null,"def":{"name":"joined_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joined_at"}},{"id":"joined_at=(_joined_at:::Union(Time,Nil))-instance-method","html_id":"joined_at=(_joined_at:::Union(Time,Nil))-instance-method","name":"joined_at=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_joined_at","doc":null,"default_value":"","external_name":"_joined_at","restriction":"::Union(Time, ::Nil)"}],"args_string":"(_joined_at : ::Union(Time, Nil))","source_link":null,"source_link":null,"def":{"name":"joined_at=","args":[{"name":"_joined_at","doc":null,"default_value":"","external_name":"_joined_at","restriction":"::Union(Time, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joined_at = _joined_at"}},{"id":"mute:Bool?-instance-method","html_id":"mute:Bool?-instance-method","name":"mute","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"mute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mute"}},{"id":"mute=(_mute:::Union(Bool,Nil))-instance-method","html_id":"mute=(_mute:::Union(Bool,Nil))-instance-method","name":"mute=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mute","doc":null,"default_value":"","external_name":"_mute","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_mute : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"mute=","args":[{"name":"_mute","doc":null,"default_value":"","external_name":"_mute","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mute = _mute"}},{"id":"nick:String?-instance-method","html_id":"nick:String?-instance-method","name":"nick","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"nick","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick"}},{"id":"nick=(_nick:::Union(String,Nil))-instance-method","html_id":"nick=(_nick:::Union(String,Nil))-instance-method","name":"nick=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"::Union(String, ::Nil)"}],"args_string":"(_nick : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"nick=","args":[{"name":"_nick","doc":null,"default_value":"","external_name":"_nick","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nick = _nick"}},{"id":"roles:Array(UInt64)-instance-method","html_id":"roles:Array(UInt64)-instance-method","name":"roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles"}},{"id":"roles=(_roles:Array(UInt64))-instance-method","html_id":"roles=(_roles:Array(UInt64))-instance-method","name":"roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"args_string":"(_roles : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"roles=","args":[{"name":"_roles","doc":null,"default_value":"","external_name":"_roles","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@roles = _roles"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _nick = @nick\n  if _nick.nil?\n  else\n    json.field(\"nick\") do\n      _nick.to_json(json)\n    end\n  end\n  _roles = @roles\n  if _roles.nil?\n  else\n    json.field(\"roles\") do\n      if _roles\n        SnowflakeArrayConverter.to_json(_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _joined_at = @joined_at\n  if _joined_at.nil?\n  else\n    json.field(\"joined_at\") do\n      if _joined_at\n        Time::Format::ISO_8601_DATE.to_json(_joined_at, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _deaf = @deaf\n  if _deaf.nil?\n  else\n    json.field(\"deaf\") do\n      _deaf.to_json(json)\n    end\n  end\n  _mute = @mute\n  if _mute.nil?\n  else\n    json.field(\"mute\") do\n      _mute.to_json(json)\n    end\n  end\nend"}},{"id":"user:Discord::User-instance-method","html_id":"user:Discord::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:User)-instance-method","html_id":"user=(_user:User)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"args_string":"(_user : User)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Integration","path":"Discord/Integration.html","kind":"struct","full_name":"Discord::Integration","name":"Integration","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":110,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_416:JSON::PullParser)-class-method","html_id":"new(__temp_416:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_416","doc":null,"default_value":"","external_name":"__temp_416","restriction":"::JSON::PullParser"}],"args_string":"(__temp_416 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_416","doc":null,"default_value":"","external_name":"__temp_416","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_416)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"account:Discord::IntegrationAccount-instance-method","html_id":"account:Discord::IntegrationAccount-instance-method","name":"account","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::IntegrationAccount","source_link":null,"source_link":null,"def":{"name":"account","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@account"}},{"id":"account=(_account:IntegrationAccount)-instance-method","html_id":"account=(_account:IntegrationAccount)-instance-method","name":"account=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_account","doc":null,"default_value":"","external_name":"_account","restriction":"IntegrationAccount"}],"args_string":"(_account : IntegrationAccount)","source_link":null,"source_link":null,"def":{"name":"account=","args":[{"name":"_account","doc":null,"default_value":"","external_name":"_account","restriction":"IntegrationAccount"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@account = _account"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"expire_behavior-instance-method","html_id":"expire_behavior-instance-method","name":"expire_behavior","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L125","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L125","def":{"name":"expire_behavior","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expire_behaviour"}},{"id":"expire_behaviour:UInt8-instance-method","html_id":"expire_behaviour:UInt8-instance-method","name":"expire_behaviour","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"expire_behaviour","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@expire_behaviour"}},{"id":"expire_behaviour=(_expire_behaviour:UInt8)-instance-method","html_id":"expire_behaviour=(_expire_behaviour:UInt8)-instance-method","name":"expire_behaviour=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_expire_behaviour","doc":null,"default_value":"","external_name":"_expire_behaviour","restriction":"UInt8"}],"args_string":"(_expire_behaviour : UInt8)","source_link":null,"source_link":null,"def":{"name":"expire_behaviour=","args":[{"name":"_expire_behaviour","doc":null,"default_value":"","external_name":"_expire_behaviour","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@expire_behaviour = _expire_behaviour"}},{"id":"expire_grace_period:Int32-instance-method","html_id":"expire_grace_period:Int32-instance-method","name":"expire_grace_period","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"expire_grace_period","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@expire_grace_period"}},{"id":"expire_grace_period=(_expire_grace_period:Int32)-instance-method","html_id":"expire_grace_period=(_expire_grace_period:Int32)-instance-method","name":"expire_grace_period=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_expire_grace_period","doc":null,"default_value":"","external_name":"_expire_grace_period","restriction":"Int32"}],"args_string":"(_expire_grace_period : Int32)","source_link":null,"source_link":null,"def":{"name":"expire_grace_period=","args":[{"name":"_expire_grace_period","doc":null,"default_value":"","external_name":"_expire_grace_period","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@expire_grace_period = _expire_grace_period"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"role_id:UInt64-instance-method","html_id":"role_id:UInt64-instance-method","name":"role_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"role_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@role_id"}},{"id":"role_id=(_role_id:UInt64)-instance-method","html_id":"role_id=(_role_id:UInt64)-instance-method","name":"role_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_role_id","doc":null,"default_value":"","external_name":"_role_id","restriction":"UInt64"}],"args_string":"(_role_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"role_id=","args":[{"name":"_role_id","doc":null,"default_value":"","external_name":"_role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@role_id = _role_id"}},{"id":"synced_at:Time-instance-method","html_id":"synced_at:Time-instance-method","name":"synced_at","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time","source_link":null,"source_link":null,"def":{"name":"synced_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@synced_at"}},{"id":"synced_at=(_synced_at:Time)-instance-method","html_id":"synced_at=(_synced_at:Time)-instance-method","name":"synced_at=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_synced_at","doc":null,"default_value":"","external_name":"_synced_at","restriction":"Time"}],"args_string":"(_synced_at : Time)","source_link":null,"source_link":null,"def":{"name":"synced_at=","args":[{"name":"_synced_at","doc":null,"default_value":"","external_name":"_synced_at","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@synced_at = _synced_at"}},{"id":"syncing:Bool-instance-method","html_id":"syncing:Bool-instance-method","name":"syncing","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"syncing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@syncing"}},{"id":"syncing=(_syncing:Bool)-instance-method","html_id":"syncing=(_syncing:Bool)-instance-method","name":"syncing=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_syncing","doc":null,"default_value":"","external_name":"_syncing","restriction":"Bool"}],"args_string":"(_syncing : Bool)","source_link":null,"source_link":null,"def":{"name":"syncing=","args":[{"name":"_syncing","doc":null,"default_value":"","external_name":"_syncing","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@syncing = _syncing"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    json.field(\"enabled\") do\n      _enabled.to_json(json)\n    end\n  end\n  _syncing = @syncing\n  if _syncing.nil?\n  else\n    json.field(\"syncing\") do\n      _syncing.to_json(json)\n    end\n  end\n  _role_id = @role_id\n  if _role_id.nil?\n  else\n    json.field(\"role_id\") do\n      if _role_id\n        SnowflakeConverter.to_json(_role_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _expire_behaviour = @expire_behaviour\n  if _expire_behaviour.nil?\n  else\n    json.field(\"expire_behavior\") do\n      _expire_behaviour.to_json(json)\n    end\n  end\n  _expire_grace_period = @expire_grace_period\n  if _expire_grace_period.nil?\n  else\n    json.field(\"expire_grace_period\") do\n      _expire_grace_period.to_json(json)\n    end\n  end\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _account = @account\n  if _account.nil?\n  else\n    json.field(\"account\") do\n      _account.to_json(json)\n    end\n  end\n  _synced_at = @synced_at\n  if _synced_at.nil?\n  else\n    json.field(\"synced_at\") do\n      if _synced_at\n        Time::EpochConverter.to_json(_synced_at, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:String)-instance-method","html_id":"type=(_type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"args_string":"(_type : String)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}},{"id":"user:Discord::User-instance-method","html_id":"user:Discord::User-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:User)-instance-method","html_id":"user=(_user:User)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"args_string":"(_user : User)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/IntegrationAccount","path":"Discord/IntegrationAccount.html","kind":"struct","full_name":"Discord::IntegrationAccount","name":"IntegrationAccount","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":132,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_441:JSON::PullParser)-class-method","html_id":"new(__temp_441:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_441","doc":null,"default_value":"","external_name":"__temp_441","restriction":"::JSON::PullParser"}],"args_string":"(__temp_441 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_441","doc":null,"default_value":"","external_name":"__temp_441","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_441)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:String-instance-method","html_id":"id:String-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:String)-instance-method","html_id":"id=(_id:String)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"String"}],"args_string":"(_id : String)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      _id.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Invite","path":"Discord/Invite.html","kind":"struct","full_name":"Discord::Invite","name":"Invite","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/invite.cr","line_number":5,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/invite.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_871:JSON::PullParser)-class-method","html_id":"new(__temp_871:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_871","doc":null,"default_value":"","external_name":"__temp_871","restriction":"::JSON::PullParser"}],"args_string":"(__temp_871 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_871","doc":null,"default_value":"","external_name":"__temp_871","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_871)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel:Discord::InviteChannel-instance-method","html_id":"channel:Discord::InviteChannel-instance-method","name":"channel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::InviteChannel","source_link":null,"source_link":null,"def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel"}},{"id":"channel=(_channel:InviteChannel)-instance-method","html_id":"channel=(_channel:InviteChannel)-instance-method","name":"channel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel","doc":null,"default_value":"","external_name":"_channel","restriction":"InviteChannel"}],"args_string":"(_channel : InviteChannel)","source_link":null,"source_link":null,"def":{"name":"channel=","args":[{"name":"_channel","doc":null,"default_value":"","external_name":"_channel","restriction":"InviteChannel"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel = _channel"}},{"id":"code:String-instance-method","html_id":"code:String-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code"}},{"id":"code=(_code:String)-instance-method","html_id":"code=(_code:String)-instance-method","name":"code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"String"}],"args_string":"(_code : String)","source_link":null,"source_link":null,"def":{"name":"code=","args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code = _code"}},{"id":"guild:Discord::InviteGuild-instance-method","html_id":"guild:Discord::InviteGuild-instance-method","name":"guild","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::InviteGuild","source_link":null,"source_link":null,"def":{"name":"guild","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild"}},{"id":"guild=(_guild:InviteGuild)-instance-method","html_id":"guild=(_guild:InviteGuild)-instance-method","name":"guild=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild","doc":null,"default_value":"","external_name":"_guild","restriction":"InviteGuild"}],"args_string":"(_guild : InviteGuild)","source_link":null,"source_link":null,"def":{"name":"guild=","args":[{"name":"_guild","doc":null,"default_value":"","external_name":"_guild","restriction":"InviteGuild"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild = _guild"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _code = @code\n  if _code.nil?\n  else\n    json.field(\"code\") do\n      _code.to_json(json)\n    end\n  end\n  _guild = @guild\n  if _guild.nil?\n  else\n    json.field(\"guild\") do\n      _guild.to_json(json)\n    end\n  end\n  _channel = @channel\n  if _channel.nil?\n  else\n    json.field(\"channel\") do\n      _channel.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/InviteChannel","path":"Discord/InviteChannel.html","kind":"struct","full_name":"Discord::InviteChannel","name":"InviteChannel","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/invite.cr","line_number":36,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/invite.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_912:JSON::PullParser)-class-method","html_id":"new(__temp_912:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_912","doc":null,"default_value":"","external_name":"__temp_912","restriction":"::JSON::PullParser"}],"args_string":"(__temp_912 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_912","doc":null,"default_value":"","external_name":"__temp_912","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_912)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\nend"}},{"id":"type:UInt8-instance-method","html_id":"type:UInt8-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:UInt8)-instance-method","html_id":"type=(_type:UInt8)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt8"}],"args_string":"(_type : UInt8)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/InviteGuild","path":"Discord/InviteGuild.html","kind":"struct","full_name":"Discord::InviteGuild","name":"InviteGuild","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/invite.cr","line_number":28,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/invite.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_903:JSON::PullParser)-class-method","html_id":"new(__temp_903:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_903","doc":null,"default_value":"","external_name":"__temp_903","restriction":"::JSON::PullParser"}],"args_string":"(__temp_903 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_903","doc":null,"default_value":"","external_name":"__temp_903","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_903)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"splash_hash:String?-instance-method","html_id":"splash_hash:String?-instance-method","name":"splash_hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"splash_hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@splash_hash"}},{"id":"splash_hash=(_splash_hash:::Union(String,Nil))-instance-method","html_id":"splash_hash=(_splash_hash:::Union(String,Nil))-instance-method","name":"splash_hash=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_splash_hash","doc":null,"default_value":"","external_name":"_splash_hash","restriction":"::Union(String, ::Nil)"}],"args_string":"(_splash_hash : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"splash_hash=","args":[{"name":"_splash_hash","doc":null,"default_value":"","external_name":"_splash_hash","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@splash_hash = _splash_hash"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _splash_hash = @splash_hash\n  if _splash_hash.nil?\n  else\n    json.field(\"splash_hash\") do\n      _splash_hash.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/InviteMetadata","path":"Discord/InviteMetadata.html","kind":"struct","full_name":"Discord::InviteMetadata","name":"InviteMetadata","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/invite.cr","line_number":13,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/invite.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_880:JSON::PullParser)-class-method","html_id":"new(__temp_880:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_880","doc":null,"default_value":"","external_name":"__temp_880","restriction":"::JSON::PullParser"}],"args_string":"(__temp_880 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_880","doc":null,"default_value":"","external_name":"__temp_880","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_880)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel:Discord::InviteChannel-instance-method","html_id":"channel:Discord::InviteChannel-instance-method","name":"channel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::InviteChannel","source_link":null,"source_link":null,"def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel"}},{"id":"channel=(_channel:InviteChannel)-instance-method","html_id":"channel=(_channel:InviteChannel)-instance-method","name":"channel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel","doc":null,"default_value":"","external_name":"_channel","restriction":"InviteChannel"}],"args_string":"(_channel : InviteChannel)","source_link":null,"source_link":null,"def":{"name":"channel=","args":[{"name":"_channel","doc":null,"default_value":"","external_name":"_channel","restriction":"InviteChannel"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel = _channel"}},{"id":"code:String-instance-method","html_id":"code:String-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code"}},{"id":"code=(_code:String)-instance-method","html_id":"code=(_code:String)-instance-method","name":"code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"String"}],"args_string":"(_code : String)","source_link":null,"source_link":null,"def":{"name":"code=","args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code = _code"}},{"id":"created_at:Time-instance-method","html_id":"created_at:Time-instance-method","name":"created_at","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time","source_link":null,"source_link":null,"def":{"name":"created_at","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@created_at"}},{"id":"created_at=(_created_at:Time)-instance-method","html_id":"created_at=(_created_at:Time)-instance-method","name":"created_at=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_created_at","doc":null,"default_value":"","external_name":"_created_at","restriction":"Time"}],"args_string":"(_created_at : Time)","source_link":null,"source_link":null,"def":{"name":"created_at=","args":[{"name":"_created_at","doc":null,"default_value":"","external_name":"_created_at","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@created_at = _created_at"}},{"id":"guild:Discord::InviteGuild-instance-method","html_id":"guild:Discord::InviteGuild-instance-method","name":"guild","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::InviteGuild","source_link":null,"source_link":null,"def":{"name":"guild","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild"}},{"id":"guild=(_guild:InviteGuild)-instance-method","html_id":"guild=(_guild:InviteGuild)-instance-method","name":"guild=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild","doc":null,"default_value":"","external_name":"_guild","restriction":"InviteGuild"}],"args_string":"(_guild : InviteGuild)","source_link":null,"source_link":null,"def":{"name":"guild=","args":[{"name":"_guild","doc":null,"default_value":"","external_name":"_guild","restriction":"InviteGuild"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild = _guild"}},{"id":"inviter:Discord::User-instance-method","html_id":"inviter:Discord::User-instance-method","name":"inviter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"inviter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@inviter"}},{"id":"inviter=(_inviter:User)-instance-method","html_id":"inviter=(_inviter:User)-instance-method","name":"inviter=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_inviter","doc":null,"default_value":"","external_name":"_inviter","restriction":"User"}],"args_string":"(_inviter : User)","source_link":null,"source_link":null,"def":{"name":"inviter=","args":[{"name":"_inviter","doc":null,"default_value":"","external_name":"_inviter","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@inviter = _inviter"}},{"id":"max_age:UInt32-instance-method","html_id":"max_age:UInt32-instance-method","name":"max_age","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"max_age","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_age"}},{"id":"max_age=(_max_age:UInt32)-instance-method","html_id":"max_age=(_max_age:UInt32)-instance-method","name":"max_age=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_max_age","doc":null,"default_value":"","external_name":"_max_age","restriction":"UInt32"}],"args_string":"(_max_age : UInt32)","source_link":null,"source_link":null,"def":{"name":"max_age=","args":[{"name":"_max_age","doc":null,"default_value":"","external_name":"_max_age","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_age = _max_age"}},{"id":"max_uses:UInt32-instance-method","html_id":"max_uses:UInt32-instance-method","name":"max_uses","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"max_uses","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_uses"}},{"id":"max_uses=(_max_uses:UInt32)-instance-method","html_id":"max_uses=(_max_uses:UInt32)-instance-method","name":"max_uses=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_max_uses","doc":null,"default_value":"","external_name":"_max_uses","restriction":"UInt32"}],"args_string":"(_max_uses : UInt32)","source_link":null,"source_link":null,"def":{"name":"max_uses=","args":[{"name":"_max_uses","doc":null,"default_value":"","external_name":"_max_uses","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_uses = _max_uses"}},{"id":"revoked:Bool-instance-method","html_id":"revoked:Bool-instance-method","name":"revoked","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"revoked","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@revoked"}},{"id":"revoked=(_revoked:Bool)-instance-method","html_id":"revoked=(_revoked:Bool)-instance-method","name":"revoked=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_revoked","doc":null,"default_value":"","external_name":"_revoked","restriction":"Bool"}],"args_string":"(_revoked : Bool)","source_link":null,"source_link":null,"def":{"name":"revoked=","args":[{"name":"_revoked","doc":null,"default_value":"","external_name":"_revoked","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@revoked = _revoked"}},{"id":"temporary:Bool-instance-method","html_id":"temporary:Bool-instance-method","name":"temporary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"temporary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@temporary"}},{"id":"temporary=(_temporary:Bool)-instance-method","html_id":"temporary=(_temporary:Bool)-instance-method","name":"temporary=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_temporary","doc":null,"default_value":"","external_name":"_temporary","restriction":"Bool"}],"args_string":"(_temporary : Bool)","source_link":null,"source_link":null,"def":{"name":"temporary=","args":[{"name":"_temporary","doc":null,"default_value":"","external_name":"_temporary","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@temporary = _temporary"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _code = @code\n  if _code.nil?\n  else\n    json.field(\"code\") do\n      _code.to_json(json)\n    end\n  end\n  _guild = @guild\n  if _guild.nil?\n  else\n    json.field(\"guild\") do\n      _guild.to_json(json)\n    end\n  end\n  _channel = @channel\n  if _channel.nil?\n  else\n    json.field(\"channel\") do\n      _channel.to_json(json)\n    end\n  end\n  _inviter = @inviter\n  if _inviter.nil?\n  else\n    json.field(\"inviter\") do\n      _inviter.to_json(json)\n    end\n  end\n  _users = @users\n  if _users.nil?\n  else\n    json.field(\"users\") do\n      _users.to_json(json)\n    end\n  end\n  _max_uses = @max_uses\n  if _max_uses.nil?\n  else\n    json.field(\"max_uses\") do\n      _max_uses.to_json(json)\n    end\n  end\n  _max_age = @max_age\n  if _max_age.nil?\n  else\n    json.field(\"max_age\") do\n      _max_age.to_json(json)\n    end\n  end\n  _temporary = @temporary\n  if _temporary.nil?\n  else\n    json.field(\"temporary\") do\n      _temporary.to_json(json)\n    end\n  end\n  _created_at = @created_at\n  if _created_at.nil?\n  else\n    json.field(\"created_at\") do\n      if _created_at\n        Time::Format::ISO_8601_DATE.to_json(_created_at, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _revoked = @revoked\n  if _revoked.nil?\n  else\n    json.field(\"revoked\") do\n      _revoked.to_json(json)\n    end\n  end\nend"}},{"id":"users:UInt32-instance-method","html_id":"users:UInt32-instance-method","name":"users","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"users","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@users"}},{"id":"users=(_users:UInt32)-instance-method","html_id":"users=(_users:UInt32)-instance-method","name":"users=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_users","doc":null,"default_value":"","external_name":"_users","restriction":"UInt32"}],"args_string":"(_users : UInt32)","source_link":null,"source_link":null,"def":{"name":"users=","args":[{"name":"_users","doc":null,"default_value":"","external_name":"_users","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@users = _users"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention","path":"Discord/Mention.html","kind":"module","full_name":"Discord::Mention","name":"Mention","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/mention.cr","line_number":1,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[{"id":"parse(string:String)-class-method","html_id":"parse(string:String)-class-method","name":"parse","doc":"Returns an array of mentions found in a string","summary":"<p>Returns an array of mentions found in a string</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L25","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L25","def":{"name":"parse","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Parser.new(string)).parse"}},{"id":"parse(string:String,&block:MentionType->)-class-method","html_id":"parse(string:String,&amp;block:MentionType-&gt;)-class-method","name":"parse","doc":"Parses a string for mentions, yielding for each mention found","summary":"<p>Parses a string for mentions, yielding for each mention found</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String, &block : MentionType -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L30","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L30","def":{"name":"parse","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(MentionType -> )"},"return_type":"","visibility":"Public","body":"(Parser.new(string)).parse(&block)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/z64/discordcr/Discord/Mention/Channel","path":"Discord/Mention/Channel.html","kind":"struct","full_name":"Discord::Mention::Channel","name":"Channel","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mention.cr","line_number":6,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(id:UInt64,start:Int32,size:Int32)-class-method","html_id":"new(id:UInt64,start:Int32,size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(id : UInt64, start : Int32, size : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L6","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L6","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, start, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L6","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L6","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Channel.new(@id.clone, @start.clone, @size.clone)"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@id"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention/Emoji","path":"Discord/Mention/Emoji.html","kind":"struct","full_name":"Discord::Mention::Emoji","name":"Emoji","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mention.cr","line_number":8,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(animated:Bool,name:String,id:UInt64,start:Int32,size:Int32)-class-method","html_id":"new(animated:Bool,name:String,id:UInt64,start:Int32,size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"animated","doc":null,"default_value":"","external_name":"animated","restriction":"Bool"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(animated : Bool, name : String, id : UInt64, start : Int32, size : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L8","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L8","def":{"name":"new","args":[{"name":"animated","doc":null,"default_value":"","external_name":"animated","restriction":"Bool"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(animated, name, id, start, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"animated:Bool-instance-method","html_id":"animated:Bool-instance-method","name":"animated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"animated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@animated"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L8","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L8","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Emoji.new(@animated.clone, @name.clone, @id.clone, @start.clone, @size.clone)"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention/Everyone","path":"Discord/Mention/Everyone.html","kind":"struct","full_name":"Discord::Mention::Everyone","name":"Everyone","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mention.cr","line_number":10,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(start:Int32)-class-method","html_id":"new(start:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"args_string":"(start : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L10","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L10","def":{"name":"new","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L10","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L10","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Everyone.new(@start.clone)"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L11","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L11","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"9"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention/Here","path":"Discord/Mention/Here.html","kind":"struct","full_name":"Discord::Mention::Here","name":"Here","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mention.cr","line_number":16,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(start:Int32)-class-method","html_id":"new(start:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"args_string":"(start : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L16","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L16","def":{"name":"new","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L16","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L16","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Here.new(@start.clone)"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L17","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L17","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"5"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention/MentionType","path":"Discord/Mention/MentionType.html","kind":"alias","full_name":"Discord::Mention::MentionType","name":"MentionType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/mention.cr","line_number":22,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":true,"aliased":"(Discord::Mention::Channel | Discord::Mention::Emoji | Discord::Mention::Everyone | Discord::Mention::Here | Discord::Mention::Role | Discord::Mention::User)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention/Role","path":"Discord/Mention/Role.html","kind":"struct","full_name":"Discord::Mention::Role","name":"Role","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mention.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(id:UInt64,start:Int32,size:Int32)-class-method","html_id":"new(id:UInt64,start:Int32,size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(id : UInt64, start : Int32, size : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L4","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L4","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, start, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L4","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L4","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Role.new(@id.clone, @start.clone, @size.clone)"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@id"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Mention/User","path":"Discord/Mention/User.html","kind":"struct","full_name":"Discord::Mention::User","name":"User","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mention.cr","line_number":2,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/Mention","kind":"module","full_name":"Discord::Mention","name":"Mention"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(id:UInt64,start:Int32,size:Int32)-class-method","html_id":"new(id:UInt64,start:Int32,size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(id : UInt64, start : Int32, size : Int32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L2","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L2","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, start, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L2","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mention.cr#L2","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"User.new(@id.clone, @start.clone, @size.clone)"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@id"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}}],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr/Discord/Message","path":"Discord/Message.html","kind":"struct","full_name":"Discord::Message","name":"Message","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":15,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_33:JSON::PullParser)-class-method","html_id":"new(__temp_33:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_33","doc":null,"default_value":"","external_name":"__temp_33","restriction":"::JSON::PullParser"}],"args_string":"(__temp_33 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_33","doc":null,"default_value":"","external_name":"__temp_33","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_33)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attachments:Array(Discord::Attachment)-instance-method","html_id":"attachments:Array(Discord::Attachment)-instance-method","name":"attachments","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Attachment)","source_link":null,"source_link":null,"def":{"name":"attachments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attachments"}},{"id":"attachments=(_attachments:Array(Attachment))-instance-method","html_id":"attachments=(_attachments:Array(Attachment))-instance-method","name":"attachments=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_attachments","doc":null,"default_value":"","external_name":"_attachments","restriction":"Array(Attachment)"}],"args_string":"(_attachments : Array(Attachment))","source_link":null,"source_link":null,"def":{"name":"attachments=","args":[{"name":"_attachments","doc":null,"default_value":"","external_name":"_attachments","restriction":"Array(Attachment)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attachments = _attachments"}},{"id":"author:Discord::User-instance-method","html_id":"author:Discord::User-instance-method","name":"author","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":null,"source_link":null,"def":{"name":"author","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author"}},{"id":"author=(_author:User)-instance-method","html_id":"author=(_author:User)-instance-method","name":"author=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"User"}],"args_string":"(_author : User)","source_link":null,"source_link":null,"def":{"name":"author=","args":[{"name":"_author","doc":null,"default_value":"","external_name":"_author","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@author = _author"}},{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"content:String-instance-method","html_id":"content:String-instance-method","name":"content","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content"}},{"id":"content=(_content:String)-instance-method","html_id":"content=(_content:String)-instance-method","name":"content=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_content","doc":null,"default_value":"","external_name":"_content","restriction":"String"}],"args_string":"(_content : String)","source_link":null,"source_link":null,"def":{"name":"content=","args":[{"name":"_content","doc":null,"default_value":"","external_name":"_content","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content = _content"}},{"id":"embeds:Array(Discord::Embed)-instance-method","html_id":"embeds:Array(Discord::Embed)-instance-method","name":"embeds","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Embed)","source_link":null,"source_link":null,"def":{"name":"embeds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embeds"}},{"id":"embeds=(_embeds:Array(Embed))-instance-method","html_id":"embeds=(_embeds:Array(Embed))-instance-method","name":"embeds=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_embeds","doc":null,"default_value":"","external_name":"_embeds","restriction":"Array(Embed)"}],"args_string":"(_embeds : Array(Embed))","source_link":null,"source_link":null,"def":{"name":"embeds=","args":[{"name":"_embeds","doc":null,"default_value":"","external_name":"_embeds","restriction":"Array(Embed)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@embeds = _embeds"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"mention_everyone:Bool-instance-method","html_id":"mention_everyone:Bool-instance-method","name":"mention_everyone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"mention_everyone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_everyone"}},{"id":"mention_everyone=(_mention_everyone:Bool)-instance-method","html_id":"mention_everyone=(_mention_everyone:Bool)-instance-method","name":"mention_everyone=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mention_everyone","doc":null,"default_value":"","external_name":"_mention_everyone","restriction":"Bool"}],"args_string":"(_mention_everyone : Bool)","source_link":null,"source_link":null,"def":{"name":"mention_everyone=","args":[{"name":"_mention_everyone","doc":null,"default_value":"","external_name":"_mention_everyone","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_everyone = _mention_everyone"}},{"id":"mention_roles:Array(UInt64)-instance-method","html_id":"mention_roles:Array(UInt64)-instance-method","name":"mention_roles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(UInt64)","source_link":null,"source_link":null,"def":{"name":"mention_roles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_roles"}},{"id":"mention_roles=(_mention_roles:Array(UInt64))-instance-method","html_id":"mention_roles=(_mention_roles:Array(UInt64))-instance-method","name":"mention_roles=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mention_roles","doc":null,"default_value":"","external_name":"_mention_roles","restriction":"Array(UInt64)"}],"args_string":"(_mention_roles : Array(UInt64))","source_link":null,"source_link":null,"def":{"name":"mention_roles=","args":[{"name":"_mention_roles","doc":null,"default_value":"","external_name":"_mention_roles","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mention_roles = _mention_roles"}},{"id":"mentions:Array(Discord::User)-instance-method","html_id":"mentions:Array(Discord::User)-instance-method","name":"mentions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::User)","source_link":null,"source_link":null,"def":{"name":"mentions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mentions"}},{"id":"mentions=(_mentions:Array(User))-instance-method","html_id":"mentions=(_mentions:Array(User))-instance-method","name":"mentions=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mentions","doc":null,"default_value":"","external_name":"_mentions","restriction":"Array(User)"}],"args_string":"(_mentions : Array(User))","source_link":null,"source_link":null,"def":{"name":"mentions=","args":[{"name":"_mentions","doc":null,"default_value":"","external_name":"_mentions","restriction":"Array(User)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mentions = _mentions"}},{"id":"pinned:Bool?-instance-method","html_id":"pinned:Bool?-instance-method","name":"pinned","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"pinned","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pinned"}},{"id":"pinned=(_pinned:::Union(Bool,Nil))-instance-method","html_id":"pinned=(_pinned:::Union(Bool,Nil))-instance-method","name":"pinned=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_pinned","doc":null,"default_value":"","external_name":"_pinned","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_pinned : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"pinned=","args":[{"name":"_pinned","doc":null,"default_value":"","external_name":"_pinned","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pinned = _pinned"}},{"id":"reactions:Array(Discord::Reaction)?-instance-method","html_id":"reactions:Array(Discord::Reaction)?-instance-method","name":"reactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::Reaction)?","source_link":null,"source_link":null,"def":{"name":"reactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reactions"}},{"id":"reactions=(_reactions:::Union(Array(Reaction),Nil))-instance-method","html_id":"reactions=(_reactions:::Union(Array(Reaction),Nil))-instance-method","name":"reactions=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_reactions","doc":null,"default_value":"","external_name":"_reactions","restriction":"::Union(Array(Reaction), ::Nil)"}],"args_string":"(_reactions : ::Union(Array(Reaction), Nil))","source_link":null,"source_link":null,"def":{"name":"reactions=","args":[{"name":"_reactions","doc":null,"default_value":"","external_name":"_reactions","restriction":"::Union(Array(Reaction), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reactions = _reactions"}},{"id":"timestamp:Time-instance-method","html_id":"timestamp:Time-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time","source_link":null,"source_link":null,"def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp"}},{"id":"timestamp=(_timestamp:Time)-instance-method","html_id":"timestamp=(_timestamp:Time)-instance-method","name":"timestamp=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"Time"}],"args_string":"(_timestamp : Time)","source_link":null,"source_link":null,"def":{"name":"timestamp=","args":[{"name":"_timestamp","doc":null,"default_value":"","external_name":"_timestamp","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@timestamp = _timestamp"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      if _type\n        MessageTypeConverter.to_json(_type, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _content = @content\n  if _content.nil?\n  else\n    json.field(\"content\") do\n      _content.to_json(json)\n    end\n  end\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _author = @author\n  if _author.nil?\n  else\n    json.field(\"author\") do\n      _author.to_json(json)\n    end\n  end\n  _timestamp = @timestamp\n  if _timestamp.nil?\n  else\n    json.field(\"timestamp\") do\n      if _timestamp\n        TimestampConverter.to_json(_timestamp, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _tts = @tts\n  if _tts.nil?\n  else\n    json.field(\"tts\") do\n      _tts.to_json(json)\n    end\n  end\n  _mention_everyone = @mention_everyone\n  if _mention_everyone.nil?\n  else\n    json.field(\"mention_everyone\") do\n      _mention_everyone.to_json(json)\n    end\n  end\n  _mentions = @mentions\n  if _mentions.nil?\n  else\n    json.field(\"mentions\") do\n      _mentions.to_json(json)\n    end\n  end\n  _mention_roles = @mention_roles\n  if _mention_roles.nil?\n  else\n    json.field(\"mention_roles\") do\n      if _mention_roles\n        SnowflakeArrayConverter.to_json(_mention_roles, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _attachments = @attachments\n  if _attachments.nil?\n  else\n    json.field(\"attachments\") do\n      _attachments.to_json(json)\n    end\n  end\n  _embeds = @embeds\n  if _embeds.nil?\n  else\n    json.field(\"embeds\") do\n      _embeds.to_json(json)\n    end\n  end\n  _pinned = @pinned\n  if _pinned.nil?\n  else\n    json.field(\"pinned\") do\n      _pinned.to_json(json)\n    end\n  end\n  _reactions = @reactions\n  if _reactions.nil?\n  else\n    json.field(\"reactions\") do\n      _reactions.to_json(json)\n    end\n  end\nend"}},{"id":"tts:Bool-instance-method","html_id":"tts:Bool-instance-method","name":"tts","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"tts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tts"}},{"id":"tts=(_tts:Bool)-instance-method","html_id":"tts=(_tts:Bool)-instance-method","name":"tts=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_tts","doc":null,"default_value":"","external_name":"_tts","restriction":"Bool"}],"args_string":"(_tts : Bool)","source_link":null,"source_link":null,"def":{"name":"tts=","args":[{"name":"_tts","doc":null,"default_value":"","external_name":"_tts","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tts = _tts"}},{"id":"type:Discord::MessageType-instance-method","html_id":"type:Discord::MessageType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::MessageType","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:MessageType)-instance-method","html_id":"type=(_type:MessageType)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"MessageType"}],"args_string":"(_type : MessageType)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"MessageType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/MessageType","path":"Discord/MessageType.html","kind":"enum","full_name":"Discord::MessageType","name":"MessageType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/z64/discordcr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/z64/discordcr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"Default","value":"0_u8","doc":null,"summary":null},{"name":"RecipientAdd","value":"1_u8","doc":null,"summary":null},{"name":"RecipientRemove","value":"2_u8","doc":null,"summary":null},{"name":"Call","value":"3_u8","doc":null,"summary":null},{"name":"ChannelNameChange","value":"4_u8","doc":null,"summary":null},{"name":"ChannelIconChange","value":"5_u8","doc":null,"summary":null},{"name":"ChannelPinnedMessage","value":"6_u8","doc":null,"summary":null},{"name":"GuildMemberJoin","value":"7_u8","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call?-instance-method","html_id":"call?-instance-method","name":"call?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L8","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L8","def":{"name":"call?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Call"}},{"id":"channel_icon_change?-instance-method","html_id":"channel_icon_change?-instance-method","name":"channel_icon_change?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L10","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L10","def":{"name":"channel_icon_change?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ChannelIconChange"}},{"id":"channel_name_change?-instance-method","html_id":"channel_name_change?-instance-method","name":"channel_name_change?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L9","def":{"name":"channel_name_change?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ChannelNameChange"}},{"id":"channel_pinned_message?-instance-method","html_id":"channel_pinned_message?-instance-method","name":"channel_pinned_message?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L11","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L11","def":{"name":"channel_pinned_message?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ChannelPinnedMessage"}},{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L5","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L5","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Default"}},{"id":"guild_member_join?-instance-method","html_id":"guild_member_join?-instance-method","name":"guild_member_join?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L12","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L12","def":{"name":"guild_member_join?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GuildMemberJoin"}},{"id":"recipient_add?-instance-method","html_id":"recipient_add?-instance-method","name":"recipient_add?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L6","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L6","def":{"name":"recipient_add?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RecipientAdd"}},{"id":"recipient_remove?-instance-method","html_id":"recipient_remove?-instance-method","name":"recipient_remove?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L7","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr#L7","def":{"name":"recipient_remove?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RecipientRemove"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/OAuth2Application","path":"Discord/OAuth2Application.html","kind":"struct","full_name":"Discord::OAuth2Application","name":"OAuth2Application","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/oauth2.cr","line_number":8,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"An OAuth2 application, as registered with Discord, that can hold\ninformation about a `Client`'s associated bot user account and owner,\namong other OAuth2 properties.","summary":"<p>An OAuth2 application, as registered with Discord, that can hold information about a <code><a href=\"../Discord/Client.html\">Client</a></code>'s associated bot user account and owner, among other OAuth2 properties.</p>","class_methods":[],"constructors":[{"id":"new(__temp_921:JSON::PullParser)-class-method","html_id":"new(__temp_921:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_921","doc":null,"default_value":"","external_name":"__temp_921","restriction":"::JSON::PullParser"}],"args_string":"(__temp_921 : JSON::PullParser)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"new","args":[{"name":"__temp_921","doc":null,"default_value":"","external_name":"__temp_921","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_921)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bot_public:Bool-instance-method","html_id":"bot_public:Bool-instance-method","name":"bot_public","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"bot_public","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot_public"}},{"id":"bot_public=(_bot_public:Bool)-instance-method","html_id":"bot_public=(_bot_public:Bool)-instance-method","name":"bot_public=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bot_public","doc":null,"default_value":"","external_name":"_bot_public","restriction":"Bool"}],"args_string":"(_bot_public : Bool)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"bot_public=","args":[{"name":"_bot_public","doc":null,"default_value":"","external_name":"_bot_public","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot_public = _bot_public"}},{"id":"bot_require_code_grant:Bool-instance-method","html_id":"bot_require_code_grant:Bool-instance-method","name":"bot_require_code_grant","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"bot_require_code_grant","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot_require_code_grant"}},{"id":"bot_require_code_grant=(_bot_require_code_grant:Bool)-instance-method","html_id":"bot_require_code_grant=(_bot_require_code_grant:Bool)-instance-method","name":"bot_require_code_grant=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bot_require_code_grant","doc":null,"default_value":"","external_name":"_bot_require_code_grant","restriction":"Bool"}],"args_string":"(_bot_require_code_grant : Bool)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"bot_require_code_grant=","args":[{"name":"_bot_require_code_grant","doc":null,"default_value":"","external_name":"_bot_require_code_grant","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot_require_code_grant = _bot_require_code_grant"}},{"id":"description:String?-instance-method","html_id":"description:String?-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:::Union(String,Nil))-instance-method","html_id":"description=(_description:::Union(String,Nil))-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"args_string":"(_description : ::Union(String, Nil))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"icon:String?-instance-method","html_id":"icon:String?-instance-method","name":"icon","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"icon","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon"}},{"id":"icon=(_icon:::Union(String,Nil))-instance-method","html_id":"icon=(_icon:::Union(String,Nil))-instance-method","name":"icon=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"args_string":"(_icon : ::Union(String, Nil))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"icon=","args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon = _icon"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"owner:Discord::User-instance-method","html_id":"owner:Discord::User-instance-method","name":"owner","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"owner","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner"}},{"id":"owner=(_owner:User)-instance-method","html_id":"owner=(_owner:User)-instance-method","name":"owner=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_owner","doc":null,"default_value":"","external_name":"_owner","restriction":"User"}],"args_string":"(_owner : User)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"owner=","args":[{"name":"_owner","doc":null,"default_value":"","external_name":"_owner","restriction":"User"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner = _owner"}},{"id":"rpc_origins:Array(String)?-instance-method","html_id":"rpc_origins:Array(String)?-instance-method","name":"rpc_origins","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"rpc_origins","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rpc_origins"}},{"id":"rpc_origins=(_rpc_origins:::Union(Array(String),Nil))-instance-method","html_id":"rpc_origins=(_rpc_origins:::Union(Array(String),Nil))-instance-method","name":"rpc_origins=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_rpc_origins","doc":null,"default_value":"","external_name":"_rpc_origins","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_rpc_origins : ::Union(Array(String), Nil))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"rpc_origins=","args":[{"name":"_rpc_origins","doc":null,"default_value":"","external_name":"_rpc_origins","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rpc_origins = _rpc_origins"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/oauth2.cr#L9","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _icon = @icon\n  if _icon.nil?\n  else\n    json.field(\"icon\") do\n      _icon.to_json(json)\n    end\n  end\n  _description = @description\n  if _description.nil?\n  else\n    json.field(\"description\") do\n      _description.to_json(json)\n    end\n  end\n  _rpc_origins = @rpc_origins\n  if _rpc_origins.nil?\n  else\n    json.field(\"rpc_origins\") do\n      _rpc_origins.to_json(json)\n    end\n  end\n  _bot_public = @bot_public\n  if _bot_public.nil?\n  else\n    json.field(\"bot_public\") do\n      _bot_public.to_json(json)\n    end\n  end\n  _bot_require_code_grant = @bot_require_code_grant\n  if _bot_require_code_grant.nil?\n  else\n    json.field(\"bot_require_code_grant\") do\n      _bot_require_code_grant.to_json(json)\n    end\n  end\n  _owner = @owner\n  if _owner.nil?\n  else\n    json.field(\"owner\") do\n      _owner.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Overwrite","path":"Discord/Overwrite.html","kind":"struct","full_name":"Discord::Overwrite","name":"Overwrite","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":79,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_110:JSON::PullParser)-class-method","html_id":"new(__temp_110:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_110","doc":null,"default_value":"","external_name":"__temp_110","restriction":"::JSON::PullParser"}],"args_string":"(__temp_110 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_110","doc":null,"default_value":"","external_name":"__temp_110","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_110)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow:Discord::Permissions-instance-method","html_id":"allow:Discord::Permissions-instance-method","name":"allow","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Permissions","source_link":null,"source_link":null,"def":{"name":"allow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@allow"}},{"id":"allow=(_allow:Permissions)-instance-method","html_id":"allow=(_allow:Permissions)-instance-method","name":"allow=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_allow","doc":null,"default_value":"","external_name":"_allow","restriction":"Permissions"}],"args_string":"(_allow : Permissions)","source_link":null,"source_link":null,"def":{"name":"allow=","args":[{"name":"_allow","doc":null,"default_value":"","external_name":"_allow","restriction":"Permissions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@allow = _allow"}},{"id":"deny:Discord::Permissions-instance-method","html_id":"deny:Discord::Permissions-instance-method","name":"deny","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Permissions","source_link":null,"source_link":null,"def":{"name":"deny","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deny"}},{"id":"deny=(_deny:Permissions)-instance-method","html_id":"deny=(_deny:Permissions)-instance-method","name":"deny=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_deny","doc":null,"default_value":"","external_name":"_deny","restriction":"Permissions"}],"args_string":"(_deny : Permissions)","source_link":null,"source_link":null,"def":{"name":"deny=","args":[{"name":"_deny","doc":null,"default_value":"","external_name":"_deny","restriction":"Permissions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deny = _deny"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _allow = @allow\n  if _allow.nil?\n  else\n    json.field(\"allow\") do\n      _allow.to_json(json)\n    end\n  end\n  _deny = @deny\n  if _deny.nil?\n  else\n    json.field(\"deny\") do\n      _deny.to_json(json)\n    end\n  end\nend"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:String)-instance-method","html_id":"type=(_type:String)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"args_string":"(_type : String)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/PartialUser","path":"Discord/PartialUser.html","kind":"struct","full_name":"Discord::PartialUser","name":"PartialUser","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/user.cr","line_number":27,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_269:JSON::PullParser)-class-method","html_id":"new(__temp_269:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_269","doc":null,"default_value":"","external_name":"__temp_269","restriction":"::JSON::PullParser"}],"args_string":"(__temp_269 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_269","doc":null,"default_value":"","external_name":"__temp_269","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_269)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"avatar:String?-instance-method","html_id":"avatar:String?-instance-method","name":"avatar","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"avatar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar"}},{"id":"avatar=(_avatar:::Union(String,Nil))-instance-method","html_id":"avatar=(_avatar:::Union(String,Nil))-instance-method","name":"avatar=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"::Union(String, ::Nil)"}],"args_string":"(_avatar : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"avatar=","args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar = _avatar"}},{"id":"bot:Bool?-instance-method","html_id":"bot:Bool?-instance-method","name":"bot","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"bot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot"}},{"id":"bot=(_bot:::Union(Bool,Nil))-instance-method","html_id":"bot=(_bot:::Union(Bool,Nil))-instance-method","name":"bot=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bot","doc":null,"default_value":"","external_name":"_bot","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_bot : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"bot=","args":[{"name":"_bot","doc":null,"default_value":"","external_name":"_bot","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot = _bot"}},{"id":"discriminator:String?-instance-method","html_id":"discriminator:String?-instance-method","name":"discriminator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"discriminator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@discriminator"}},{"id":"discriminator=(_discriminator:::Union(String,Nil))-instance-method","html_id":"discriminator=(_discriminator:::Union(String,Nil))-instance-method","name":"discriminator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_discriminator","doc":null,"default_value":"","external_name":"_discriminator","restriction":"::Union(String, ::Nil)"}],"args_string":"(_discriminator : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"discriminator=","args":[{"name":"_discriminator","doc":null,"default_value":"","external_name":"_discriminator","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@discriminator = _discriminator"}},{"id":"email:String?-instance-method","html_id":"email:String?-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email"}},{"id":"email=(_email:::Union(String,Nil))-instance-method","html_id":"email=(_email:::Union(String,Nil))-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"::Union(String, ::Nil)"}],"args_string":"(_email : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"full?:Bool-instance-method","html_id":"full?:Bool-instance-method","name":"full?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr#L37","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr#L37","def":{"name":"full?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"((!(@username.nil?)) && (!(@discriminator.nil?))) && (!(@avatar.nil?))"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _username = @username\n  if _username.nil?\n  else\n    json.field(\"username\") do\n      _username.to_json(json)\n    end\n  end\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _discriminator = @discriminator\n  if _discriminator.nil?\n  else\n    json.field(\"discriminator\") do\n      _discriminator.to_json(json)\n    end\n  end\n  _avatar = @avatar\n  if _avatar.nil?\n  else\n    json.field(\"avatar\") do\n      _avatar.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\n  _bot = @bot\n  if _bot.nil?\n  else\n    json.field(\"bot\") do\n      _bot.to_json(json)\n    end\n  end\nend"}},{"id":"username:String?-instance-method","html_id":"username:String?-instance-method","name":"username","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"username","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username"}},{"id":"username=(_username:::Union(String,Nil))-instance-method","html_id":"username=(_username:::Union(String,Nil))-instance-method","name":"username=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"::Union(String, ::Nil)"}],"args_string":"(_username : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"username=","args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username = _username"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Permissions","path":"Discord/Permissions.html","kind":"enum","full_name":"Discord::Permissions","name":"Permissions","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/z64/discordcr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/z64/discordcr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/permissions.cr","line_number":3,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"CreateInstantInvite","value":"1_u64","doc":null,"summary":null},{"name":"KickMembers","value":"2_u64","doc":null,"summary":null},{"name":"BanMembers","value":"4_u64","doc":null,"summary":null},{"name":"Administrator","value":"8_u64","doc":null,"summary":null},{"name":"ManageChannels","value":"16_u64","doc":null,"summary":null},{"name":"ManageGuild","value":"32_u64","doc":null,"summary":null},{"name":"AddReactions","value":"64_u64","doc":null,"summary":null},{"name":"ReadMessages","value":"1024_u64","doc":null,"summary":null},{"name":"SendMessages","value":"2048_u64","doc":null,"summary":null},{"name":"SendTTSMessages","value":"4096_u64","doc":null,"summary":null},{"name":"ManageMessages","value":"8192_u64","doc":null,"summary":null},{"name":"EmbedLinks","value":"16384_u64","doc":null,"summary":null},{"name":"AttachFiles","value":"32768_u64","doc":null,"summary":null},{"name":"ReadMessageHistory","value":"65536_u64","doc":null,"summary":null},{"name":"MentionEveryone","value":"131072_u64","doc":null,"summary":null},{"name":"UseExternalEmojis","value":"262144_u64","doc":null,"summary":null},{"name":"Connect","value":"1048576_u64","doc":null,"summary":null},{"name":"Speak","value":"2097152_u64","doc":null,"summary":null},{"name":"MuteMembers","value":"4194304_u64","doc":null,"summary":null},{"name":"DeafenMembers","value":"8388608_u64","doc":null,"summary":null},{"name":"MoveMembers","value":"16777216_u64","doc":null,"summary":null},{"name":"UseVAD","value":"33554432_u64","doc":null,"summary":null},{"name":"ChangeNickname","value":"67108864_u64","doc":null,"summary":null},{"name":"ManageNicknames","value":"134217728_u64","doc":null,"summary":null},{"name":"ManageRoles","value":"268435456_u64","doc":null,"summary":null},{"name":"ManageWebhooks","value":"536870912_u64","doc":null,"summary":null},{"name":"ManageEmojis","value":"1073741824_u64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L32","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L32","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Permissions.new(pull.read_int.to_u64)"}}],"instance_methods":[{"id":"add_reactions?-instance-method","html_id":"add_reactions?-instance-method","name":"add_reactions?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L10","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L10","def":{"name":"add_reactions?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(AddReactions)"}},{"id":"administrator?-instance-method","html_id":"administrator?-instance-method","name":"administrator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L7","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L7","def":{"name":"administrator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Administrator)"}},{"id":"attach_files?-instance-method","html_id":"attach_files?-instance-method","name":"attach_files?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L16","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L16","def":{"name":"attach_files?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(AttachFiles)"}},{"id":"ban_members?-instance-method","html_id":"ban_members?-instance-method","name":"ban_members?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L6","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L6","def":{"name":"ban_members?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(BanMembers)"}},{"id":"change_nickname?-instance-method","html_id":"change_nickname?-instance-method","name":"change_nickname?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L26","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L26","def":{"name":"change_nickname?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ChangeNickname)"}},{"id":"connect?-instance-method","html_id":"connect?-instance-method","name":"connect?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L20","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L20","def":{"name":"connect?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Connect)"}},{"id":"create_instant_invite?-instance-method","html_id":"create_instant_invite?-instance-method","name":"create_instant_invite?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L4","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L4","def":{"name":"create_instant_invite?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(CreateInstantInvite)"}},{"id":"deafen_members?-instance-method","html_id":"deafen_members?-instance-method","name":"deafen_members?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L23","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L23","def":{"name":"deafen_members?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(DeafenMembers)"}},{"id":"embed_links?-instance-method","html_id":"embed_links?-instance-method","name":"embed_links?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L15","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L15","def":{"name":"embed_links?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(EmbedLinks)"}},{"id":"kick_members?-instance-method","html_id":"kick_members?-instance-method","name":"kick_members?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L5","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L5","def":{"name":"kick_members?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(KickMembers)"}},{"id":"manage_channels?-instance-method","html_id":"manage_channels?-instance-method","name":"manage_channels?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L8","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L8","def":{"name":"manage_channels?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageChannels)"}},{"id":"manage_emojis?-instance-method","html_id":"manage_emojis?-instance-method","name":"manage_emojis?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L30","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L30","def":{"name":"manage_emojis?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageEmojis)"}},{"id":"manage_guild?-instance-method","html_id":"manage_guild?-instance-method","name":"manage_guild?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L9","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L9","def":{"name":"manage_guild?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageGuild)"}},{"id":"manage_messages?-instance-method","html_id":"manage_messages?-instance-method","name":"manage_messages?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L14","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L14","def":{"name":"manage_messages?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageMessages)"}},{"id":"manage_nicknames?-instance-method","html_id":"manage_nicknames?-instance-method","name":"manage_nicknames?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L27","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L27","def":{"name":"manage_nicknames?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageNicknames)"}},{"id":"manage_roles?-instance-method","html_id":"manage_roles?-instance-method","name":"manage_roles?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L28","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L28","def":{"name":"manage_roles?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageRoles)"}},{"id":"manage_webhooks?-instance-method","html_id":"manage_webhooks?-instance-method","name":"manage_webhooks?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L29","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L29","def":{"name":"manage_webhooks?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ManageWebhooks)"}},{"id":"mention_everyone?-instance-method","html_id":"mention_everyone?-instance-method","name":"mention_everyone?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L18","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L18","def":{"name":"mention_everyone?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(MentionEveryone)"}},{"id":"move_members?-instance-method","html_id":"move_members?-instance-method","name":"move_members?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L24","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L24","def":{"name":"move_members?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(MoveMembers)"}},{"id":"mute_members?-instance-method","html_id":"mute_members?-instance-method","name":"mute_members?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L22","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L22","def":{"name":"mute_members?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(MuteMembers)"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L3","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L3","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == 0"}},{"id":"read_message_history?-instance-method","html_id":"read_message_history?-instance-method","name":"read_message_history?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L17","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L17","def":{"name":"read_message_history?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ReadMessageHistory)"}},{"id":"read_messages?-instance-method","html_id":"read_messages?-instance-method","name":"read_messages?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L11","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L11","def":{"name":"read_messages?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(ReadMessages)"}},{"id":"send_messages?-instance-method","html_id":"send_messages?-instance-method","name":"send_messages?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L12","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L12","def":{"name":"send_messages?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(SendMessages)"}},{"id":"send_tts_messages?-instance-method","html_id":"send_tts_messages?-instance-method","name":"send_tts_messages?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L13","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L13","def":{"name":"send_tts_messages?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(SendTTSMessages)"}},{"id":"speak?-instance-method","html_id":"speak?-instance-method","name":"speak?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L21","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L21","def":{"name":"speak?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Speak)"}},{"id":"use_external_emojis?-instance-method","html_id":"use_external_emojis?-instance-method","name":"use_external_emojis?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L19","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L19","def":{"name":"use_external_emojis?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(UseExternalEmojis)"}},{"id":"use_vad?-instance-method","html_id":"use_vad?-instance-method","name":"use_vad?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L25","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/permissions.cr#L25","def":{"name":"use_vad?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(UseVAD)"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Presence","path":"Discord/Presence.html","kind":"struct","full_name":"Discord::Presence","name":"Presence","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":179,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_489:JSON::PullParser)-class-method","html_id":"new(__temp_489:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_489","doc":null,"default_value":"","external_name":"__temp_489","restriction":"::JSON::PullParser"}],"args_string":"(__temp_489 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_489","doc":null,"default_value":"","external_name":"__temp_489","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_489)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"game:Discord::GamePlaying?-instance-method","html_id":"game:Discord::GamePlaying?-instance-method","name":"game","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::GamePlaying?","source_link":null,"source_link":null,"def":{"name":"game","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@game"}},{"id":"game=(_game:::Union(GamePlaying,Nil))-instance-method","html_id":"game=(_game:::Union(GamePlaying,Nil))-instance-method","name":"game=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_game","doc":null,"default_value":"","external_name":"_game","restriction":"::Union(GamePlaying, ::Nil)"}],"args_string":"(_game : ::Union(GamePlaying, Nil))","source_link":null,"source_link":null,"def":{"name":"game=","args":[{"name":"_game","doc":null,"default_value":"","external_name":"_game","restriction":"::Union(GamePlaying, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@game = _game"}},{"id":"status:String-instance-method","html_id":"status:String-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status"}},{"id":"status=(_status:String)-instance-method","html_id":"status=(_status:String)-instance-method","name":"status=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_status","doc":null,"default_value":"","external_name":"_status","restriction":"String"}],"args_string":"(_status : String)","source_link":null,"source_link":null,"def":{"name":"status=","args":[{"name":"_status","doc":null,"default_value":"","external_name":"_status","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status = _status"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _game = @game\n  if _game.nil?\n  else\n    json.field(\"game\") do\n      _game.to_json(json)\n    end\n  end\n  _status = @status\n  if _status.nil?\n  else\n    json.field(\"status\") do\n      _status.to_json(json)\n    end\n  end\nend"}},{"id":"user:Discord::PartialUser-instance-method","html_id":"user:Discord::PartialUser-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::PartialUser","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:PartialUser)-instance-method","html_id":"user=(_user:PartialUser)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"PartialUser"}],"args_string":"(_user : PartialUser)","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"PartialUser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/PrivateChannel","path":"Discord/PrivateChannel.html","kind":"struct","full_name":"Discord::PrivateChannel","name":"PrivateChannel","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":70,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_99:JSON::PullParser)-class-method","html_id":"new(__temp_99:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_99","doc":null,"default_value":"","external_name":"__temp_99","restriction":"::JSON::PullParser"}],"args_string":"(__temp_99 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_99","doc":null,"default_value":"","external_name":"__temp_99","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_99)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"last_message_id:UInt64?-instance-method","html_id":"last_message_id:UInt64?-instance-method","name":"last_message_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"last_message_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_message_id"}},{"id":"last_message_id=(_last_message_id:::Union(UInt64,Nil))-instance-method","html_id":"last_message_id=(_last_message_id:::Union(UInt64,Nil))-instance-method","name":"last_message_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_last_message_id","doc":null,"default_value":"","external_name":"_last_message_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_last_message_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"last_message_id=","args":[{"name":"_last_message_id","doc":null,"default_value":"","external_name":"_last_message_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@last_message_id = _last_message_id"}},{"id":"recipients:Array(Discord::User)-instance-method","html_id":"recipients:Array(Discord::User)-instance-method","name":"recipients","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Discord::User)","source_link":null,"source_link":null,"def":{"name":"recipients","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipients"}},{"id":"recipients=(_recipients:Array(User))-instance-method","html_id":"recipients=(_recipients:Array(User))-instance-method","name":"recipients=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_recipients","doc":null,"default_value":"","external_name":"_recipients","restriction":"Array(User)"}],"args_string":"(_recipients : Array(User))","source_link":null,"source_link":null,"def":{"name":"recipients=","args":[{"name":"_recipients","doc":null,"default_value":"","external_name":"_recipients","restriction":"Array(User)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@recipients = _recipients"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      if _type\n        ChannelTypeConverter.to_json(_type, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _recipients = @recipients\n  if _recipients.nil?\n  else\n    json.field(\"recipients\") do\n      _recipients.to_json(json)\n    end\n  end\n  _last_message_id = @last_message_id\n  if _last_message_id.nil?\n  else\n    json.field(\"last_message_id\") do\n      if _last_message_id\n        MaybeSnowflakeConverter.to_json(_last_message_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\nend"}},{"id":"type:Discord::ChannelType-instance-method","html_id":"type:Discord::ChannelType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::ChannelType","source_link":null,"source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}},{"id":"type=(_type:ChannelType)-instance-method","html_id":"type=(_type:ChannelType)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"ChannelType"}],"args_string":"(_type : ChannelType)","source_link":null,"source_link":null,"def":{"name":"type=","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"ChannelType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = _type"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Reaction","path":"Discord/Reaction.html","kind":"struct","full_name":"Discord::Reaction","name":"Reaction","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":88,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_121:JSON::PullParser)-class-method","html_id":"new(__temp_121:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_121","doc":null,"default_value":"","external_name":"__temp_121","restriction":"::JSON::PullParser"}],"args_string":"(__temp_121 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_121","doc":null,"default_value":"","external_name":"__temp_121","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_121)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"count:UInt32-instance-method","html_id":"count:UInt32-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count"}},{"id":"count=(_count:UInt32)-instance-method","html_id":"count=(_count:UInt32)-instance-method","name":"count=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_count","doc":null,"default_value":"","external_name":"_count","restriction":"UInt32"}],"args_string":"(_count : UInt32)","source_link":null,"source_link":null,"def":{"name":"count=","args":[{"name":"_count","doc":null,"default_value":"","external_name":"_count","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count = _count"}},{"id":"emoji:Discord::ReactionEmoji-instance-method","html_id":"emoji:Discord::ReactionEmoji-instance-method","name":"emoji","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::ReactionEmoji","source_link":null,"source_link":null,"def":{"name":"emoji","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji"}},{"id":"emoji=(_emoji:ReactionEmoji)-instance-method","html_id":"emoji=(_emoji:ReactionEmoji)-instance-method","name":"emoji=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"ReactionEmoji"}],"args_string":"(_emoji : ReactionEmoji)","source_link":null,"source_link":null,"def":{"name":"emoji=","args":[{"name":"_emoji","doc":null,"default_value":"","external_name":"_emoji","restriction":"ReactionEmoji"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emoji = _emoji"}},{"id":"me:Bool-instance-method","html_id":"me:Bool-instance-method","name":"me","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"me","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@me"}},{"id":"me=(_me:Bool)-instance-method","html_id":"me=(_me:Bool)-instance-method","name":"me=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_me","doc":null,"default_value":"","external_name":"_me","restriction":"Bool"}],"args_string":"(_me : Bool)","source_link":null,"source_link":null,"def":{"name":"me=","args":[{"name":"_me","doc":null,"default_value":"","external_name":"_me","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@me = _me"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _emoji = @emoji\n  if _emoji.nil?\n  else\n    json.field(\"emoji\") do\n      _emoji.to_json(json)\n    end\n  end\n  _count = @count\n  if _count.nil?\n  else\n    json.field(\"count\") do\n      _count.to_json(json)\n    end\n  end\n  _me = @me\n  if _me.nil?\n  else\n    json.field(\"me\") do\n      _me.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/ReactionEmoji","path":"Discord/ReactionEmoji.html","kind":"struct","full_name":"Discord::ReactionEmoji","name":"ReactionEmoji","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/channel.cr","line_number":96,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/channel.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_130:JSON::PullParser)-class-method","html_id":"new(__temp_130:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_130","doc":null,"default_value":"","external_name":"__temp_130","restriction":"::JSON::PullParser"}],"args_string":"(__temp_130 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_130","doc":null,"default_value":"","external_name":"__temp_130","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_130)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64?-instance-method","html_id":"id:UInt64?-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:::Union(UInt64,Nil))-instance-method","html_id":"id=(_id:::Union(UInt64,Nil))-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        MaybeSnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/REST","path":"Discord/REST.html","kind":"module","full_name":"Discord::REST","name":"REST","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/mappings/rest.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/rest.cr"},{"filename":"discordcr/rest.cr","line_number":11,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"API_BASE","value":"\"https://discordapp.com/api/v6\"","doc":null,"summary":null},{"name":"SSL_CONTEXT","value":"OpenSSL::SSL::Context::Client.new","doc":null,"summary":null},{"name":"USER_AGENT","value":"\"DiscordBot (https://github.com/meew0/discordcr, #{Discord::VERSION})\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/z64/discordcr/Discord/Client","kind":"class","full_name":"Discord::Client","name":"Client"}],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"accept_invite(code:String)-instance-method","html_id":"accept_invite(code:String)-instance-method","name":"accept_invite","doc":"Makes a user accept an invite. Will not work for bots.\nFor example, this can be used with a `Client` instantiated with an OAuth2\n`Bearer` token that has been granted the `guilds.join` scope.\n```\nclient = Discord::Client.new token: \"Bearer XYZ\"\nclient.accept_invite(\"ABCdef\")\n```\n[API docs for this method](https://discordapp.com/developers/docs/resources/invite#accept-invite)","summary":"<p>Makes a user accept an invite.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(code : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1442","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1442","def":{"name":"accept_invite","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:invites_code, nil, \"POST\", \"/invites/#{code}\", HTTP::Headers.new, nil)\nInvite.from_json(response.body)\n"}},{"id":"add_guild_member_role(guild_id:UInt64,user_id:UInt64,role_id:UInt64)-instance-method","html_id":"add_guild_member_role(guild_id:UInt64,user_id:UInt64,role_id:UInt64)-instance-method","name":"add_guild_member_role","doc":"Adds a role to a member. Requires the \"Manage Roles\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#add-guild-member-role)","summary":"<p>Adds a role to a member.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64, role_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L920","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L920","def":{"name":"add_guild_member_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_members_uid_roles_rid, guild_id, \"PUT\", \"/guilds/#{guild_id}/members/#{user_id}/roles/#{role_id}\", HTTP::Headers.new, nil)"}},{"id":"add_pinned_channel_message(channel_id:UInt64,message_id:UInt64)-instance-method","html_id":"add_pinned_channel_message(channel_id:UInt64,message_id:UInt64)-instance-method","name":"add_pinned_channel_message","doc":"Pins a new message to this channel. Requires the \"Manage Messages\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#add-pinned-channel-message)","summary":"<p>Pins a new message to this channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, message_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L579","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L579","def":{"name":"add_pinned_channel_message","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_pins_mid, channel_id, \"PUT\", \"/channels/#{channel_id}/pins/#{message_id}\", HTTP::Headers.new, nil)"}},{"id":"begin_guild_prune(guild_id:UInt64,days:UInt32)-instance-method","html_id":"begin_guild_prune(guild_id:UInt64,days:UInt32)-instance-method","name":"begin_guild_prune","doc":"Prunes all members from this guild which haven't been seen for more than\n*days* days. Requires the \"Kick Members\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#begin-guild-prune)","summary":"<p>Prunes all members from this guild which haven't been seen for more than <em>days</em> days.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"days","doc":null,"default_value":"","external_name":"days","restriction":"UInt32"}],"args_string":"(guild_id : UInt64, days : UInt32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1097","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1097","def":{"name":"begin_guild_prune","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"days","doc":null,"default_value":"","external_name":"days","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_prune, guild_id, \"POST\", \"/guilds/#{guild_id}/prune?days=#{days}\", HTTP::Headers.new, nil)\nPruneCountResponse.new(response.body)\n"}},{"id":"bulk_delete_messages(channel_id:UInt64,message_ids:Array(UInt64))-instance-method","html_id":"bulk_delete_messages(channel_id:UInt64,message_ids:Array(UInt64))-instance-method","name":"bulk_delete_messages","doc":"Deletes multiple messages at once from the channel. The maximum amount is\n100 messages, the minimum is 2. Requires the \"Manage Messages\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#bulk-delete-messages)","summary":"<p>Deletes multiple messages at once from the channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_ids","doc":null,"default_value":"","external_name":"message_ids","restriction":"Array(UInt64)"}],"args_string":"(channel_id : UInt64, message_ids : Array(UInt64))","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L453","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L453","def":{"name":"bulk_delete_messages","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_ids","doc":null,"default_value":"","external_name":"message_ids","restriction":"Array(UInt64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages_bulk_delete, channel_id, \"POST\", \"/channels/#{channel_id}/messages/bulk_delete\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, ({messages: message_ids}).to_json)"}},{"id":"create_channel_invite(channel_id:UInt64,max_age:UInt32=0_u32,max_uses:UInt32=0_u32,temporary:Bool=false)-instance-method","html_id":"create_channel_invite(channel_id:UInt64,max_age:UInt32=0_u32,max_uses:UInt32=0_u32,temporary:Bool=false)-instance-method","name":"create_channel_invite","doc":"Creates a new invite for the channel. Requires the \"Create Instant Invite\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#create-channel-invite)","summary":"<p>Creates a new invite for the channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"max_age","doc":null,"default_value":"0_u32","external_name":"max_age","restriction":"UInt32"},{"name":"max_uses","doc":null,"default_value":"0_u32","external_name":"max_uses","restriction":"UInt32"},{"name":"temporary","doc":null,"default_value":"false","external_name":"temporary","restriction":"Bool"}],"args_string":"(channel_id : UInt64, max_age : UInt32 = <span class=\"n\">0_u32</span>, max_uses : UInt32 = <span class=\"n\">0_u32</span>, temporary : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L508","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L508","def":{"name":"create_channel_invite","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"max_age","doc":null,"default_value":"0_u32","external_name":"max_age","restriction":"UInt32"},{"name":"max_uses","doc":null,"default_value":"0_u32","external_name":"max_uses","restriction":"UInt32"},{"name":"temporary","doc":null,"default_value":"false","external_name":"temporary","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(max_age: max_age, max_uses: max_uses, temporary: temporary)\nresponse = request(:channels_cid_invites, channel_id, \"POST\", \"/channels/#{channel_id}/invites\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nInvite.from_json(response.body)\n"}},{"id":"create_channel_webhook(channel_id:UInt64,name:String,avatar:String)-instance-method","html_id":"create_channel_webhook(channel_id:UInt64,name:String,avatar:String)-instance-method","name":"create_channel_webhook","doc":"Create a channel webhook.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#create-webhook).","summary":"<p>Create a channel webhook.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"avatar","doc":null,"default_value":"","external_name":"avatar","restriction":"String"}],"args_string":"(channel_id : UInt64, name : String, avatar : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1519","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1519","def":{"name":"create_channel_webhook","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"avatar","doc":null,"default_value":"","external_name":"avatar","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = ({name: name, avatar: avatar}).to_json\nresponse = request(:channels_cid_webhooks, channel_id, \"POST\", \"/channels/#{channel_id}/webhooks\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nWebhook.from_json(response.body)\n"}},{"id":"create_dm(recipient_id:UInt64)-instance-method","html_id":"create_dm(recipient_id:UInt64)-instance-method","name":"create_dm","doc":"Creates a new DM channel with a given recipient. If there was already one\nbefore, it will be reopened.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#create-dm)","summary":"<p>Creates a new DM channel with a given recipient.</p>","abstract":false,"args":[{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"args_string":"(recipient_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1371","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1371","def":{"name":"create_dm","args":[{"name":"recipient_id","doc":null,"default_value":"","external_name":"recipient_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:users_me_channels, nil, \"POST\", \"/users/@me/channels\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, ({recipient_id: recipient_id}).to_json)\nPrivateChannel.from_json(response.body)\n"}},{"id":"create_guild_ban(guild_id:UInt64,user_id:UInt64)-instance-method","html_id":"create_guild_ban(guild_id:UInt64,user_id:UInt64)-instance-method","name":"create_guild_ban","doc":"Bans a member from the guild. Requires the \"Ban Members\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#create-guild-ban)","summary":"<p>Bans a member from the guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L965","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L965","def":{"name":"create_guild_ban","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_bans_uid, guild_id, \"PUT\", \"/guilds/#{guild_id}/bans/#{user_id}\", HTTP::Headers.new, nil)"}},{"id":"create_guild_channel(guild_id:UInt64,name:String,type:ChannelType,bitrate:UInt32?,user_limit:UInt32?)-instance-method","html_id":"create_guild_channel(guild_id:UInt64,name:String,type:ChannelType,bitrate:UInt32?,user_limit:UInt32?)-instance-method","name":"create_guild_channel","doc":"Creates a new channel on this guild. Requires the \"Manage Channels\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#create-guild-channel)","summary":"<p>Creates a new channel on this guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"ChannelType"},{"name":"bitrate","doc":null,"default_value":"","external_name":"bitrate","restriction":"UInt32 | ::Nil"},{"name":"user_limit","doc":null,"default_value":"","external_name":"user_limit","restriction":"UInt32 | ::Nil"}],"args_string":"(guild_id : UInt64, name : String, type : ChannelType, bitrate : UInt32?, user_limit : UInt32?)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L742","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L742","def":{"name":"create_guild_channel","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"ChannelType"},{"name":"bitrate","doc":null,"default_value":"","external_name":"bitrate","restriction":"UInt32 | ::Nil"},{"name":"user_limit","doc":null,"default_value":"","external_name":"user_limit","restriction":"UInt32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, type: type, bitrate: bitrate, user_limit: user_limit)\nresponse = request(:guilds_gid_channels, guild_id, \"POST\", \"/guilds/#{guild_id}/channels\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nChannel.from_json(response.body)\n"}},{"id":"create_guild_emoji(guild_id:UInt64,name:String,image:String)-instance-method","html_id":"create_guild_emoji(guild_id:UInt64,name:String,image:String)-instance-method","name":"create_guild_emoji","doc":"Creates a guild emoji. Requires the \"Manage Emojis\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/emoji#create-guild-emoji)","summary":"<p>Creates a guild emoji.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"String"}],"args_string":"(guild_id : UInt64, name : String, image : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L704","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L704","def":{"name":"create_guild_emoji","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, image: image)\nresponse = request(:guild_gid_emojis, guild_id, \"POST\", \"/guilds/#{guild_id}/emojis\", HTTP::Headers.new, json)\nEmoji.from_json(response.body)\n"}},{"id":"create_guild_integration(guild_id:UInt64,type:String,id:UInt64)-instance-method","html_id":"create_guild_integration(guild_id:UInt64,type:String,id:UInt64)-instance-method","name":"create_guild_integration","doc":"Creates a new integration for this guild. Requires the \"Manage Guild\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#create-guild-integration)","summary":"<p>Creates a new integration for this guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, type : String, id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1148","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1148","def":{"name":"create_guild_integration","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(type: type, id: id)\nrequest(:guilds_gid_integrations, guild_id, \"POST\", \"/guilds/#{guild_id}/integrations\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\n"}},{"id":"create_guild_role(guild_id:UInt64,name:String?=nil,permissions:Permissions?=nil,colour:UInt32=0_u32,hoist:Bool=false,mentionable:Bool=false)-instance-method","html_id":"create_guild_role(guild_id:UInt64,name:String?=nil,permissions:Permissions?=nil,colour:UInt32=0_u32,hoist:Bool=false,mentionable:Bool=false)-instance-method","name":"create_guild_role","doc":"Creates a new role on the guild. Requires the \"Manage Roles\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#create-guild-role)","summary":"<p>Creates a new role on the guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"permissions","doc":null,"default_value":"nil","external_name":"permissions","restriction":"Permissions | ::Nil"},{"name":"colour","doc":null,"default_value":"0_u32","external_name":"colour","restriction":"UInt32"},{"name":"hoist","doc":null,"default_value":"false","external_name":"hoist","restriction":"Bool"},{"name":"mentionable","doc":null,"default_value":"false","external_name":"mentionable","restriction":"Bool"}],"args_string":"(guild_id : UInt64, name : String? = <span class=\"n\">nil</span>, permissions : Permissions? = <span class=\"n\">nil</span>, colour : UInt32 = <span class=\"n\">0_u32</span>, hoist : Bool = <span class=\"n\">false</span>, mentionable : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1009","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1009","def":{"name":"create_guild_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"permissions","doc":null,"default_value":"nil","external_name":"permissions","restriction":"Permissions | ::Nil"},{"name":"colour","doc":null,"default_value":"0_u32","external_name":"colour","restriction":"UInt32"},{"name":"hoist","doc":null,"default_value":"false","external_name":"hoist","restriction":"Bool"},{"name":"mentionable","doc":null,"default_value":"false","external_name":"mentionable","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, permissions: permissions, color: colour, hoist: hoist, mentionable: mentionable)\nresponse = request(:get_guild_roles, guild_id, \"POST\", \"/guilds/#{guild_id}/roles\", HTTP::Headers.new, json)\nRole.from_json(response.body)\n"}},{"id":"create_message(channel_id:UInt64,content:String,tts:Bool=false,embed:Embed?=nil)-instance-method","html_id":"create_message(channel_id:UInt64,content:String,tts:Bool=false,embed:Embed?=nil)-instance-method","name":"create_message","doc":"Sends a message to the channel. Requires the \"Send Messages\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#create-message)\n\nThe `embed` parameter can be used to append a rich embed to the message\nwhich allows for displaying certain kinds of data in a more structured\nway. An example:\n\n```\nembed = Discord::Embed.new(\n  title: \"Title of Embed\",\n  description: \"Description of embed. This can be a long text. Neque porro quisquam est, qui dolorem ipsum, quia dolor sit, amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt, ut labore et dolore magnam aliquam quaerat voluptatem.\",\n  timestamp: Time.now,\n  url: \"https://example.com\",\n  image: Discord::EmbedImage.new(\n    url: \"https://example.com/image.png\",\n  ),\n  fields: [\n    Discord::EmbedField.new(\n      name: \"Name of Field\",\n      value: \"Value of Field\",\n    ),\n  ],\n)\n\nclient.create_message(channel_id, \"The content of the message. This will display separately above the embed. This string can be empty.\", embed)\n```\n\nFor more details on the format of the `embed` object, look at the\n[relevant documentation](https://discordapp.com/developers/docs/resources/channel#embed-object).","summary":"<p>Sends a message to the channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"},{"name":"tts","doc":null,"default_value":"false","external_name":"tts","restriction":"Bool"},{"name":"embed","doc":null,"default_value":"nil","external_name":"embed","restriction":"Embed | ::Nil"}],"args_string":"(channel_id : UInt64, content : String, tts : Bool = <span class=\"n\">false</span>, embed : Embed? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L285","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L285","def":{"name":"create_message","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"},{"name":"tts","doc":null,"default_value":"false","external_name":"tts","restriction":"Bool"},{"name":"embed","doc":null,"default_value":"nil","external_name":"embed","restriction":"Embed | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages, channel_id, \"POST\", \"/channels/#{channel_id}/messages\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, ({content: content, tts: tts, embed: embed}).to_json)\nMessage.from_json(response.body)\n"}},{"id":"create_reaction(channel_id:UInt64,message_id:UInt64,emoji:String)-instance-method","html_id":"create_reaction(channel_id:UInt64,message_id:UInt64,emoji:String)-instance-method","name":"create_reaction","doc":"Adds a reaction to a message. The `emoji` property must be in the format\n`name:id` for custom emoji. For unicode emoji it can simply be the UTF-8\nencoded characters.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#create-reaction)","summary":"<p>Adds a reaction to a message.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"}],"args_string":"(channel_id : UInt64, message_id : UInt64, emoji : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L303","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L303","def":{"name":"create_reaction","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages_mid_reactions_emoji_me, channel_id, \"PUT\", \"/channels/#{channel_id}/messages/#{message_id}/reactions/#{emoji}/@me\", HTTP::Headers.new, nil)"}},{"id":"delete_all_reactions(channel_id:UInt64,message_id:UInt64)-instance-method","html_id":"delete_all_reactions(channel_id:UInt64,message_id:UInt64)-instance-method","name":"delete_all_reactions","doc":"Removes all reactions from a message. Requires the \"Manage Messages\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#delete-all-reactions)","summary":"<p>Removes all reactions from a message.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, message_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L367","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L367","def":{"name":"delete_all_reactions","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:channels_cid_messages_mid_reactions, channel_id, \"DELETE\", \"/channels/#{channel_id}/messages/#{message_id}/reactions\", HTTP::Headers.new, nil)"}},{"id":"delete_channel(channel_id:UInt64)-instance-method","html_id":"delete_channel(channel_id:UInt64)-instance-method","name":"delete_channel","doc":"Deletes a channel by ID. Requires the \"Manage Channel\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#deleteclose-channel)","summary":"<p>Deletes a channel by ID.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L205","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L205","def":{"name":"delete_channel","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:channels_cid, channel_id, \"DELETE\", \"/channels/#{channel_id}\", HTTP::Headers.new, nil)"}},{"id":"delete_channel_permission(channel_id:UInt64,overwrite_id:UInt64)-instance-method","html_id":"delete_channel_permission(channel_id:UInt64,overwrite_id:UInt64)-instance-method","name":"delete_channel_permission","doc":"Deletes a permission overwrite from a channel. Requires the \"Manage\nPermissions\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#delete-channel-permission)","summary":"<p>Deletes a permission overwrite from a channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"overwrite_id","doc":null,"default_value":"","external_name":"overwrite_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, overwrite_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L532","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L532","def":{"name":"delete_channel_permission","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"overwrite_id","doc":null,"default_value":"","external_name":"overwrite_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_permissions_oid, channel_id, \"DELETE\", \"/channels/#{channel_id}/permissions/#{overwrite_id}\", HTTP::Headers.new, nil)"}},{"id":"delete_guild(guild_id:UInt64)-instance-method","html_id":"delete_guild(guild_id:UInt64)-instance-method","name":"delete_guild","doc":"Deletes a guild. Requires the bot to be the server owner.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#delete-guild)","summary":"<p>Deletes a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L656","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L656","def":{"name":"delete_guild","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid, guild_id, \"DELETE\", \"/guilds/#{guild_id}\", HTTP::Headers.new, nil)\nGuild.from_json(response.body)\n"}},{"id":"delete_guild_integration(guild_id:UInt64,integration_id:UInt64)-instance-method","html_id":"delete_guild_integration(guild_id:UInt64,integration_id:UInt64)-instance-method","name":"delete_guild_integration","doc":"Deletes a guild integration. Requires the \"Manage Guild\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#delete-guild-integration)","summary":"<p>Deletes a guild integration.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"integration_id","doc":null,"default_value":"","external_name":"integration_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, integration_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1191","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1191","def":{"name":"delete_guild_integration","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"integration_id","doc":null,"default_value":"","external_name":"integration_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_integrations_iid, guild_id, \"DELETE\", \"/guilds/#{guild_id}/integrations/#{integration_id}\", HTTP::Headers.new, nil)"}},{"id":"delete_guild_role(guild_id:UInt64,role_id:UInt64)-instance-method","html_id":"delete_guild_role(guild_id:UInt64,role_id:UInt64)-instance-method","name":"delete_guild_role","doc":"Deletes a role. Requires the \"Manage Roles\" permission as well as the role\nto be lower than the bot's highest role.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#delete-guild-role)","summary":"<p>Deletes a role.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, role_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1063","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1063","def":{"name":"delete_guild_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_roles_rid, guild_id, \"DELETE\", \"/guilds/#{guild_id}/roles/#{role_id}\", HTTP::Headers.new, nil)\nRole.from_json(response.body)\n"}},{"id":"delete_invite(code:String)-instance-method","html_id":"delete_invite(code:String)-instance-method","name":"delete_invite","doc":"Deletes (revokes) an invite. Requires the \"Manage Channel\" permission for\nthe channel the invite is for, or the \"Manage Server\" permission for the\nserver.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/invite#delete-invite)","summary":"<p>Deletes (revokes) an invite.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(code : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1421","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1421","def":{"name":"delete_invite","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:invites_code, nil, \"DELETE\", \"/invites/#{code}\", HTTP::Headers.new, nil)\nInvite.from_json(response.body)\n"}},{"id":"delete_message(channel_id:UInt64,message_id:UInt64)-instance-method","html_id":"delete_message(channel_id:UInt64,message_id:UInt64)-instance-method","name":"delete_message","doc":"Deletes a message from the channel. Requires the message to either have\nbeen sent by the bot itself or the bot to have the \"Manage Messages\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#delete-message)","summary":"<p>Deletes a message from the channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, message_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L438","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L438","def":{"name":"delete_message","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages_mid, channel_id, \"DELETE\", \"/channels/#{channel_id}/messages/#{message_id}\", HTTP::Headers.new, nil)"}},{"id":"delete_own_reaction(channel_id:UInt64,message_id:UInt64,emoji:String)-instance-method","html_id":"delete_own_reaction(channel_id:UInt64,message_id:UInt64,emoji:String)-instance-method","name":"delete_own_reaction","doc":"Removes the bot's own reaction from a message. The `emoji` property must\nbe in the format `name:id` for custom emoji. For unicode emoji it can\nsimply be the UTF-8 encoded characters.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#delete-own-reaction)","summary":"<p>Removes the bot's own reaction from a message.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"}],"args_string":"(channel_id : UInt64, message_id : UInt64, emoji : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L319","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L319","def":{"name":"delete_own_reaction","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:channels_cid_messages_mid_reactions_emoji_me, channel_id, \"DELETE\", \"/channels/#{channel_id}/messages/#{message_id}/reactions/#{emoji}/@me\", HTTP::Headers.new, nil)"}},{"id":"delete_pinned_channel_message(channel_id:UInt64,message_id:UInt64)-instance-method","html_id":"delete_pinned_channel_message(channel_id:UInt64,message_id:UInt64)-instance-method","name":"delete_pinned_channel_message","doc":"Unpins a message from this channel. Requires the \"Manage Messages\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#delete-pinned-channel-message)","summary":"<p>Unpins a message from this channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, message_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L594","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L594","def":{"name":"delete_pinned_channel_message","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_pins_mid, channel_id, \"DELETE\", \"/channels/#{channel_id}/pins/#{message_id}\", HTTP::Headers.new, nil)"}},{"id":"delete_user_reaction(channel_id:UInt64,message_id:UInt64,emoji:String,user_id:UInt64)-instance-method","html_id":"delete_user_reaction(channel_id:UInt64,message_id:UInt64,emoji:String,user_id:UInt64)-instance-method","name":"delete_user_reaction","doc":"Removes another user's reaction from a message. The `emoji` property must\nbe in the format `name:id` for custom emoji. For unicode emoji it can\nsimply be the UTF-8 encoded characters. Requires the \"Manage Messages\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#delete-user-reaction)","summary":"<p>Removes another user's reaction from a message.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, message_id : UInt64, emoji : String, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L336","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L336","def":{"name":"delete_user_reaction","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:channels_cid_messages_mid_reactions_emoji_uid, channel_id, \"DELETE\", \"/channels/#{channel_id}/messages/#{message_id}/reactions/#{emoji}/#{user_id}\", HTTP::Headers.new, nil)"}},{"id":"delete_webhook(webhook_id:UInt64,token:String)-instance-method","html_id":"delete_webhook(webhook_id:UInt64,token:String)-instance-method","name":"delete_webhook","doc":"Deletes a webhook with a token. Does not require authentication.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#delete-webhook-with-token)","summary":"<p>Deletes a webhook with a token.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(webhook_id : UInt64, token : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1616","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1616","def":{"name":"delete_webhook","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:webhooks_wid, webhook_id, \"DELETE\", \"/webhooks/#{webhook_id}/#{token}\", HTTP::Headers.new, nil)"}},{"id":"delete_webhook(webhook_id:UInt64)-instance-method","html_id":"delete_webhook(webhook_id:UInt64)-instance-method","name":"delete_webhook","doc":"Deletes a webhook. User must be owner.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#delete-webhook)","summary":"<p>Deletes a webhook.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"}],"args_string":"(webhook_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1602","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1602","def":{"name":"delete_webhook","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:webhooks_wid, webhook_id, \"DELETE\", \"/webhooks/#{webhook_id}\", HTTP::Headers.new, nil)"}},{"id":"edit_channel_permissions(channel_id:UInt64,overwrite_id:UInt64,type:String,allow:Permissions,deny:Permissions)-instance-method","html_id":"edit_channel_permissions(channel_id:UInt64,overwrite_id:UInt64,type:String,allow:Permissions,deny:Permissions)-instance-method","name":"edit_channel_permissions","doc":"Edits an existing permission overwrite on a channel with new permissions,\nor creates a new one. The *overwrite_id* should be either a user or a role\nID. Requires the \"Manage Permissions\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#edit-channel-permissions)","summary":"<p>Edits an existing permission overwrite on a channel with new permissions, or creates a new one.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"overwrite_id","doc":null,"default_value":"","external_name":"overwrite_id","restriction":"UInt64"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"allow","doc":null,"default_value":"","external_name":"allow","restriction":"Permissions"},{"name":"deny","doc":null,"default_value":"","external_name":"deny","restriction":"Permissions"}],"args_string":"(channel_id : UInt64, overwrite_id : UInt64, type : String, allow : Permissions, deny : Permissions)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L469","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L469","def":{"name":"edit_channel_permissions","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"overwrite_id","doc":null,"default_value":"","external_name":"overwrite_id","restriction":"UInt64"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"allow","doc":null,"default_value":"","external_name":"allow","restriction":"Permissions"},{"name":"deny","doc":null,"default_value":"","external_name":"deny","restriction":"Permissions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(allow: allow, deny: deny, type: type)\nresponse = request(:channels_cid_permissions_oid, channel_id, \"PUT\", \"/channels/#{channel_id}/permissions/#{overwrite_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\n"}},{"id":"edit_message(channel_id:UInt64,message_id:UInt64,content:String,embed:Embed?=nil)-instance-method","html_id":"edit_message(channel_id:UInt64,message_id:UInt64,content:String,embed:Embed?=nil)-instance-method","name":"edit_message","doc":"Edits an existing message on the channel. This only works for messages\nsent by the bot itself - you can't edit others' messages.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#edit-message)","summary":"<p>Edits an existing message on the channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"},{"name":"embed","doc":null,"default_value":"nil","external_name":"embed","restriction":"Embed | ::Nil"}],"args_string":"(channel_id : UInt64, message_id : UInt64, content : String, embed : Embed? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L420","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L420","def":{"name":"edit_message","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"},{"name":"embed","doc":null,"default_value":"nil","external_name":"embed","restriction":"Embed | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages_mid, channel_id, \"PATCH\", \"/channels/#{channel_id}/messages/#{message_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, ({content: content, embed: embed}).to_json)\nMessage.from_json(response.body)\n"}},{"id":"execute_webhook(webhook_id:UInt64,token:String,content:String?=nil,file:String?=nil,embeds:Array(Embed)?=nil,tts:Bool?=nil,avatar_url:String?=nil,username:String?=nil,wait:Bool?=false)-instance-method","html_id":"execute_webhook(webhook_id:UInt64,token:String,content:String?=nil,file:String?=nil,embeds:Array(Embed)?=nil,tts:Bool?=nil,avatar_url:String?=nil,username:String?=nil,wait:Bool?=false)-instance-method","name":"execute_webhook","doc":"Executes a webhook, with a token.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#execute-webhook)","summary":"<p>Executes a webhook, with a token.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"},{"name":"file","doc":null,"default_value":"nil","external_name":"file","restriction":"String | ::Nil"},{"name":"embeds","doc":null,"default_value":"nil","external_name":"embeds","restriction":"Array(Embed) | ::Nil"},{"name":"tts","doc":null,"default_value":"nil","external_name":"tts","restriction":"Bool | ::Nil"},{"name":"avatar_url","doc":null,"default_value":"nil","external_name":"avatar_url","restriction":"String | ::Nil"},{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"wait","doc":null,"default_value":"false","external_name":"wait","restriction":"Bool | ::Nil"}],"args_string":"(webhook_id : UInt64, token : String, content : String? = <span class=\"n\">nil</span>, file : String? = <span class=\"n\">nil</span>, embeds : Array(Embed)? = <span class=\"n\">nil</span>, tts : Bool? = <span class=\"n\">nil</span>, avatar_url : String? = <span class=\"n\">nil</span>, username : String? = <span class=\"n\">nil</span>, wait : Bool? = <span class=\"n\">false</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1630","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1630","def":{"name":"execute_webhook","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"},{"name":"file","doc":null,"default_value":"nil","external_name":"file","restriction":"String | ::Nil"},{"name":"embeds","doc":null,"default_value":"nil","external_name":"embeds","restriction":"Array(Embed) | ::Nil"},{"name":"tts","doc":null,"default_value":"nil","external_name":"tts","restriction":"Bool | ::Nil"},{"name":"avatar_url","doc":null,"default_value":"nil","external_name":"avatar_url","restriction":"String | ::Nil"},{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"wait","doc":null,"default_value":"false","external_name":"wait","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(content: content, file: file, embeds: embeds, tts: tts, avatar_url: avatar_url, username: username)\nresponse = request(:webhooks_wid, webhook_id, \"POST\", \"/webhooks/#{webhook_id}/#{token}?wait=#{wait}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nif wait\n  Message.from_json(response.body)\nend\n"}},{"id":"get_channel(channel_id:UInt64)-instance-method","html_id":"get_channel(channel_id:UInt64)-instance-method","name":"get_channel","doc":"Gets a channel by ID.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#get-channel)","summary":"<p>Gets a channel by ID.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L162","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L162","def":{"name":"get_channel","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid, channel_id, \"GET\", \"/channels/#{channel_id}\", HTTP::Headers.new, nil)\nChannel.from_json(response.body)\n"}},{"id":"get_channel_invites(channel_id:UInt64)-instance-method","html_id":"get_channel_invites(channel_id:UInt64)-instance-method","name":"get_channel_invites","doc":"Gets a list of invites for this channel. Requires the \"Manage Channel\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#get-channel-invites)","summary":"<p>Gets a list of invites for this channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L491","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L491","def":{"name":"get_channel_invites","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_invites, channel_id, \"GET\", \"/channels/#{channel_id}/invites\", HTTP::Headers.new, nil)\nArray(InviteMetadata).from_json(response.body)\n"}},{"id":"get_channel_message(channel_id:UInt64,message_id:UInt64)-instance-method","html_id":"get_channel_message(channel_id:UInt64,message_id:UInt64)-instance-method","name":"get_channel_message","doc":"Gets a single message from the channel's history. Requires the \"Read\nMessage History\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#get-channel-message)","summary":"<p>Gets a single message from the channel's history.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64, message_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L242","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L242","def":{"name":"get_channel_message","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages_mid, channel_id, \"GET\", \"/channels/#{channel_id}/messages/#{message_id}\", HTTP::Headers.new, nil)\nMessage.from_json(response.body)\n"}},{"id":"get_channel_messages(channel_id:UInt64,limit:UInt8=50,before:UInt64?=nil,after:UInt64?=nil,around:UInt64?=nil)-instance-method","html_id":"get_channel_messages(channel_id:UInt64,limit:UInt8=50,before:UInt64?=nil,after:UInt64?=nil,around:UInt64?=nil)-instance-method","name":"get_channel_messages","doc":"Gets a list of messages from the channel's history. Requires the \"Read\nMessage History\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#get-channel-messages)","summary":"<p>Gets a list of messages from the channel's history.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"limit","doc":null,"default_value":"50","external_name":"limit","restriction":"UInt8"},{"name":"before","doc":null,"default_value":"nil","external_name":"before","restriction":"UInt64 | ::Nil"},{"name":"after","doc":null,"default_value":"nil","external_name":"after","restriction":"UInt64 | ::Nil"},{"name":"around","doc":null,"default_value":"nil","external_name":"around","restriction":"UInt64 | ::Nil"}],"args_string":"(channel_id : UInt64, limit : UInt8 = <span class=\"n\">50</span>, before : UInt64? = <span class=\"n\">nil</span>, after : UInt64? = <span class=\"n\">nil</span>, around : UInt64? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L220","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L220","def":{"name":"get_channel_messages","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"limit","doc":null,"default_value":"50","external_name":"limit","restriction":"UInt8"},{"name":"before","doc":null,"default_value":"nil","external_name":"before","restriction":"UInt64 | ::Nil"},{"name":"after","doc":null,"default_value":"nil","external_name":"after","restriction":"UInt64 | ::Nil"},{"name":"around","doc":null,"default_value":"nil","external_name":"around","restriction":"UInt64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/channels/#{channel_id}/messages?limit=#{limit}\"\nif before\n  path = path + \"&before=#{before}\"\nend\nif after\n  path = path + \"&after=#{after}\"\nend\nif around\n  path = path + \"&around=#{around}\"\nend\nresponse = request(:channels_cid_messages, channel_id, \"GET\", path, HTTP::Headers.new, nil)\nArray(Message).from_json(response.body)\n"}},{"id":"get_channel_webhooks(channel_id:UInt64)-instance-method","html_id":"get_channel_webhooks(channel_id:UInt64)-instance-method","name":"get_channel_webhooks","doc":"Get an array of channel webhooks.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#get-channel-webhooks).","summary":"<p>Get an array of channel webhooks.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1541","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1541","def":{"name":"get_channel_webhooks","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_webhooks, channel_id, \"GET\", \"/channels/#{channel_id}/webhooks\", HTTP::Headers.new, nil)\nArray(Webhook).from_json(response.body)\n"}},{"id":"get_current_user-instance-method","html_id":"get_current_user-instance-method","name":"get_current_user","doc":"Gets the current bot user.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#get-current-user)","summary":"<p>Gets the current bot user.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1273","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1273","def":{"name":"get_current_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:users_me, nil, \"GET\", \"/users/@me\", HTTP::Headers.new, nil)\nUser.from_json(response.body)\n"}},{"id":"get_current_user_guilds(limit:UInt8=100_u8,before:UInt64=0_u64,after:UInt64=0_u64)-instance-method","html_id":"get_current_user_guilds(limit:UInt8=100_u8,before:UInt64=0_u64,after:UInt64=0_u64)-instance-method","name":"get_current_user_guilds","doc":"Gets a list of user guilds the current user is on.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#get-current-user-guilds)","summary":"<p>Gets a list of user guilds the current user is on.</p>","abstract":false,"args":[{"name":"limit","doc":null,"default_value":"100_u8","external_name":"limit","restriction":"UInt8"},{"name":"before","doc":null,"default_value":"0_u64","external_name":"before","restriction":"UInt64"},{"name":"after","doc":null,"default_value":"0_u64","external_name":"after","restriction":"UInt64"}],"args_string":"(limit : UInt8 = <span class=\"n\">100_u8</span>, before : UInt64 = <span class=\"n\">0_u64</span>, after : UInt64 = <span class=\"n\">0_u64</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1311","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1311","def":{"name":"get_current_user_guilds","args":[{"name":"limit","doc":null,"default_value":"100_u8","external_name":"limit","restriction":"UInt8"},{"name":"before","doc":null,"default_value":"0_u64","external_name":"before","restriction":"UInt64"},{"name":"after","doc":null,"default_value":"0_u64","external_name":"after","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"params = HTTP::Params.build do |form|\n  form.add(\"limit\", limit.to_s)\n  if before > 0\n    form.add(\"before\", before.to_s)\n  end\n  if after > 0\n    form.add(\"after\", after.to_s)\n  end\nend\npath = \"/users/@me/guilds?#{params}\"\nresponse = request(:users_me_guilds, nil, \"GET\", path, HTTP::Headers.new, nil)\nArray(UserGuild).from_json(response.body)\n"}},{"id":"get_gateway-instance-method","html_id":"get_gateway-instance-method","name":"get_gateway","doc":"Gets the gateway URL to connect to.\n\n[API docs for this method](https://discordapp.com/developers/docs/topics/gateway#get-gateway)","summary":"<p>Gets the gateway URL to connect to.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L114","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L114","def":{"name":"get_gateway","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:gateway, nil, \"GET\", \"/gateway\", HTTP::Headers.new, nil)\nGatewayResponse.from_json(response.body)\n"}},{"id":"get_gateway_bot-instance-method","html_id":"get_gateway_bot-instance-method","name":"get_gateway_bot","doc":"Gets the gateway Bot URL to connect to, and the recommended amount of shards to make.\n\n[API docs for this method](https://discordapp.com/developers/docs/topics/gateway#get-gateway-bot)","summary":"<p>Gets the gateway Bot URL to connect to, and the recommended amount of shards to make.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L130","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L130","def":{"name":"get_gateway_bot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:gateway_bot, nil, \"GET\", \"/gateway/bot\", HTTP::Headers.new, nil)\nGatewayBotResponse.from_json(response.body)\n"}},{"id":"get_guild(guild_id:UInt64)-instance-method","html_id":"get_guild(guild_id:UInt64)-instance-method","name":"get_guild","doc":"Gets a guild by ID.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild)","summary":"<p>Gets a guild by ID.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L608","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L608","def":{"name":"get_guild","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid, guild_id, \"GET\", \"/guilds/#{guild_id}\", HTTP::Headers.new, nil)\nGuild.from_json(response.body)\n"}},{"id":"get_guild_bans(guild_id:UInt64)-instance-method","html_id":"get_guild_bans(guild_id:UInt64)-instance-method","name":"get_guild_bans","doc":"Gets a list of members banned from this server. Requires the \"Ban Members\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-bans)","summary":"<p>Gets a list of members banned from this server.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L949","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L949","def":{"name":"get_guild_bans","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_bans, guild_id, \"GET\", \"/guilds/#{guild_id}/bans\", HTTP::Headers.new, nil)\nArray(User).from_json(response.body)\n"}},{"id":"get_guild_channels(guild_id:UInt64)-instance-method","html_id":"get_guild_channels(guild_id:UInt64)-instance-method","name":"get_guild_channels","doc":"Gets a list of channels in a guild.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-channels)","summary":"<p>Gets a list of channels in a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L725","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L725","def":{"name":"get_guild_channels","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_channels, guild_id, \"GET\", \"/guilds/#{guild_id}/channels\", HTTP::Headers.new, nil)\nArray(Channel).from_json(response.body)\n"}},{"id":"get_guild_embed(guild_id:UInt64)-instance-method","html_id":"get_guild_embed(guild_id:UInt64)-instance-method","name":"get_guild_embed","doc":"Gets embed data for a guild. Requires the \"Manage Guild\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-embed)","summary":"<p>Gets embed data for a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1219","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1219","def":{"name":"get_guild_embed","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_embed, guild_id, \"GET\", \"/guilds/#{guild_id}/embed\", HTTP::Headers.new, nil)\nGuildEmbed.from_json(response.body)\n"}},{"id":"get_guild_emojis(guild_id:UInt64)-instance-method","html_id":"get_guild_emojis(guild_id:UInt64)-instance-method","name":"get_guild_emojis","doc":"Gets a list of emoji on the guild.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/emoji#list-guild-emojis)","summary":"<p>Gets a list of emoji on the guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L672","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L672","def":{"name":"get_guild_emojis","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guild_gid_emojis, guild_id, \"GET\", \"/guilds/#{guild_id}/emojis\", HTTP::Headers.new, nil)\nArray(Emoji).from_json(response.body)\n"}},{"id":"get_guild_integrations(guild_id:UInt64)-instance-method","html_id":"get_guild_integrations(guild_id:UInt64)-instance-method","name":"get_guild_integrations","doc":"Gets a list of integrations (Twitch, YouTube, etc.) for this guild.\nRequires the \"Manage Guild\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-integrations)","summary":"<p>Gets a list of integrations (Twitch, YouTube, etc.) for this guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1131","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1131","def":{"name":"get_guild_integrations","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_integrations, guild_id, \"GET\", \"/guilds/#{guild_id}/integrations\", HTTP::Headers.new, nil)\nArray(Integration).from_json(response.body)\n"}},{"id":"get_guild_member(guild_id:UInt64,user_id:UInt64)-instance-method","html_id":"get_guild_member(guild_id:UInt64,user_id:UInt64)-instance-method","name":"get_guild_member","doc":"Gets a specific member by both IDs.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-member)","summary":"<p>Gets a specific member by both IDs.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L820","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L820","def":{"name":"get_guild_member","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_members_uid, guild_id, \"GET\", \"/guilds/#{guild_id}/members/#{user_id}\", HTTP::Headers.new, nil)\nGuildMember.from_json(response.body)\n"}},{"id":"get_guild_prune_count(guild_id:UInt64,days:UInt32)-instance-method","html_id":"get_guild_prune_count(guild_id:UInt64,days:UInt32)-instance-method","name":"get_guild_prune_count","doc":"Get a number of members that would be pruned with the given number of\ndays. Requires the \"Kick Members\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-prune-count)","summary":"<p>Get a number of members that would be pruned with the given number of days.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"days","doc":null,"default_value":"","external_name":"days","restriction":"UInt32"}],"args_string":"(guild_id : UInt64, days : UInt32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1080","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1080","def":{"name":"get_guild_prune_count","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"days","doc":null,"default_value":"","external_name":"days","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_prune, guild_id, \"GET\", \"/guilds/#{guild_id}/prune?days=#{days}\", HTTP::Headers.new, nil)\nPruneCountResponse.new(response.body)\n"}},{"id":"get_guild_roles(guild_id:UInt64)-instance-method","html_id":"get_guild_roles(guild_id:UInt64)-instance-method","name":"get_guild_roles","doc":"Get a list of roles on the guild. Requires the \"Manage Roles\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-roles)","summary":"<p>Get a list of roles on the guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L993","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L993","def":{"name":"get_guild_roles","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_roles, guild_id, \"GET\", \"/guilds/#{guild_id}/roles\", HTTP::Headers.new, nil)\nArray(Role).from_json(response.body)\n"}},{"id":"get_guild_vanity_url(guild_id:UInt64)-instance-method","html_id":"get_guild_vanity_url(guild_id:UInt64)-instance-method","name":"get_guild_vanity_url","doc":"Gets the vanity URL of a guild. Requires the guild to be partnered.\n\nThere are no API docs for this method.","summary":"<p>Gets the vanity URL of a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L766","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L766","def":{"name":"get_guild_vanity_url","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_vanityurl, guild_id, \"GET\", \"/guilds/#{guild_id}/vanity-url\", HTTP::Headers.new, nil)\n(GuildVanityURLResponse.from_json(response.body)).code\n"}},{"id":"get_guild_voice_regions(guild_id:UInt64)-instance-method","html_id":"get_guild_voice_regions(guild_id:UInt64)-instance-method","name":"get_guild_voice_regions","doc":"Gets a list of voice regions available for this guild. This may include\nVIP regions for VIP servers.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#get-guild-voice-regions)","summary":"<p>Gets a list of voice regions available for this guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1114","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1114","def":{"name":"get_guild_voice_regions","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_regions, guild_id, \"GET\", \"/guilds/#{guild_id}/regions\", HTTP::Headers.new, nil)\nArray(VoiceRegion).from_json(response.body)\n"}},{"id":"get_guild_webhooks(guild_id:UInt64)-instance-method","html_id":"get_guild_webhooks(guild_id:UInt64)-instance-method","name":"get_guild_webhooks","doc":"Get an array of guild webhooks.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#get-guild-webhooks).","summary":"<p>Get an array of guild webhooks.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1504","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1504","def":{"name":"get_guild_webhooks","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_webhooks, guild_id, \"GET\", \"/guilds/#{guild_id}/webhooks\", HTTP::Headers.new, nil)\nArray(Webhook).from_json(response.body)\n"}},{"id":"get_invite(code:String)-instance-method","html_id":"get_invite(code:String)-instance-method","name":"get_invite","doc":"Gets a specific invite by its code.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/invite#get-invite)","summary":"<p>Gets a specific invite by its code.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(code : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1403","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1403","def":{"name":"get_invite","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:invites_code, nil, \"GET\", \"/invites/#{code}\", HTTP::Headers.new, nil)\nInvite.from_json(response.body)\n"}},{"id":"get_oauth2_application-instance-method","html_id":"get_oauth2_application-instance-method","name":"get_oauth2_application","doc":"Gets the OAuth2 application tied to a client.\n\n[API docs for this method](https://discordapp.com/developers/docs/topics/oauth2#get-current-application-information)","summary":"<p>Gets the OAuth2 application tied to a client.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L146","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L146","def":{"name":"get_oauth2_application","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:ouath2_applications_me, nil, \"GET\", \"/oauth2/applications/@me\", HTTP::Headers.new, nil)\nOAuth2Application.from_json(response.body)\n"}},{"id":"get_pinned_messages(channel_id:UInt64)-instance-method","html_id":"get_pinned_messages(channel_id:UInt64)-instance-method","name":"get_pinned_messages","doc":"Get a list of messages pinned to this channel.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#get-pinned-messages)","summary":"<p>Get a list of messages pinned to this channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L562","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L562","def":{"name":"get_pinned_messages","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_pins, channel_id, \"GET\", \"/channels/#{channel_id}/pins\", HTTP::Headers.new, nil)\nArray(Message).from_json(response.body)\n"}},{"id":"get_reactions(channel_id:UInt64,message_id:UInt64,emoji:String)-instance-method","html_id":"get_reactions(channel_id:UInt64,message_id:UInt64,emoji:String)-instance-method","name":"get_reactions","doc":"Returns all users that have reacted with a specific emoji.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#get-reactions)","summary":"<p>Returns all users that have reacted with a specific emoji.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"}],"args_string":"(channel_id : UInt64, message_id : UInt64, emoji : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L350","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L350","def":{"name":"get_reactions","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"message_id","doc":null,"default_value":"","external_name":"message_id","restriction":"UInt64"},{"name":"emoji","doc":null,"default_value":"","external_name":"emoji","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_messages_mid_reactions_emoji_me, channel_id, \"GET\", \"/channels/#{channel_id}/messages/#{message_id}/reactions/#{emoji}\", HTTP::Headers.new, nil)\nArray(User).from_json(response.body)\n"}},{"id":"get_user(user_id:UInt64)-instance-method","html_id":"get_user(user_id:UInt64)-instance-method","name":"get_user","doc":"Gets a specific user by ID.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#get-user)","summary":"<p>Gets a specific user by ID.</p>","abstract":false,"args":[{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1257","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1257","def":{"name":"get_user","args":[{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:users_uid, nil, \"GET\", \"/users/#{user_id}\", HTTP::Headers.new, nil)\nUser.from_json(response.body)\n"}},{"id":"get_user_dms-instance-method","html_id":"get_user_dms-instance-method","name":"get_user_dms","doc":"Gets a list of DM channels the bot has access to.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#get-user-dms)","summary":"<p>Gets a list of DM channels the bot has access to.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1354","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1354","def":{"name":"get_user_dms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:users_me_channels, nil, \"GET\", \"/users/@me/channels\", HTTP::Headers.new, nil)\nArray(PrivateChannel).from_json(response.body)\n"}},{"id":"get_users_connections-instance-method","html_id":"get_users_connections-instance-method","name":"get_users_connections","doc":"Gets a list of connections the user has set up (Twitch, YouTube, etc.)\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#get-users-connections)","summary":"<p>Gets a list of connections the user has set up (Twitch, YouTube, etc.)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1387","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1387","def":{"name":"get_users_connections","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:users_me_connections, nil, \"GET\", \"/users/@me/connections\", HTTP::Headers.new, nil)\nArray(Connection).from_json(response.body)\n"}},{"id":"get_webhook(webhook_id:UInt64,token:String)-instance-method","html_id":"get_webhook(webhook_id:UInt64,token:String)-instance-method","name":"get_webhook","doc":"Get a webhook, with a token.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#get-webhook-with-token).","summary":"<p>Get a webhook, with a token.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(webhook_id : UInt64, token : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1489","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1489","def":{"name":"get_webhook","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:webhooks_wid, webhook_id, \"GET\", \"/webhooks/#{webhook_id}/#{token}\", HTTP::Headers.new, nil)\nWebhook.from_json(response.body)\n"}},{"id":"get_webhook(webhook_id:UInt64)-instance-method","html_id":"get_webhook(webhook_id:UInt64)-instance-method","name":"get_webhook","doc":"Get a webhook.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#get-webhook).","summary":"<p>Get a webhook.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"}],"args_string":"(webhook_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1474","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1474","def":{"name":"get_webhook","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:webhooks_wid, webhook_id, \"GET\", \"/webhooks/#{webhook_id}\", HTTP::Headers.new, nil)\nWebhook.from_json(response.body)\n"}},{"id":"leave_guild(guild_id:UInt64)-instance-method","html_id":"leave_guild(guild_id:UInt64)-instance-method","name":"leave_guild","doc":"Makes the bot leave a guild.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#leave-guild)","summary":"<p>Makes the bot leave a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1340","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1340","def":{"name":"leave_guild","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:users_me_guilds_gid, nil, \"DELETE\", \"/users/@me/guilds/#{guild_id}\", HTTP::Headers.new, nil)"}},{"id":"list_guild_members(guild_id:UInt64,limit:Int32=1000,after:UInt64=0_u64)-instance-method","html_id":"list_guild_members(guild_id:UInt64,limit:Int32=1000,after:UInt64=0_u64)-instance-method","name":"list_guild_members","doc":"Gets multiple guild members at once. The *limit* can be at most 1000.\nThe resulting list will be sorted by user IDs, use the *after* parameter\nto specify what ID to start at.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#list-guild-members)","summary":"<p>Gets multiple guild members at once.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"limit","doc":null,"default_value":"1000","external_name":"limit","restriction":"Int32"},{"name":"after","doc":null,"default_value":"0_u64","external_name":"after","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, limit : Int32 = <span class=\"n\">1000</span>, after : UInt64 = <span class=\"n\">0_u64</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L838","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L838","def":{"name":"list_guild_members","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"limit","doc":null,"default_value":"1000","external_name":"limit","restriction":"Int32"},{"name":"after","doc":null,"default_value":"0_u64","external_name":"after","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path = \"/guilds/#{guild_id}/members?limit=#{limit}&after=#{after}\"\nresponse = request(:guilds_gid_members, guild_id, \"GET\", path, HTTP::Headers.new, nil)\nArray(GuildMember).from_json(response.body)\n"}},{"id":"list_voice_regions-instance-method","html_id":"list_voice_regions-instance-method","name":"list_voice_regions","doc":"Gets a list of voice regions newly created servers have access to.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/voice#list-voice-regions)","summary":"<p>Gets a list of voice regions newly created servers have access to.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1458","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1458","def":{"name":"list_voice_regions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:voice_regions, nil, \"GET\", \"/voice/regions\", HTTP::Headers.new, nil)\nArray(VoiceRegion).from_json(response.body)\n"}},{"id":"modify_channel(channel_id:UInt64,name:String?=nil,position:UInt32?=nil,topic:String?=nil,bitrate:UInt32?=nil,user_limit:UInt32?=nil,nsfw:Bool?=nil)-instance-method","html_id":"modify_channel(channel_id:UInt64,name:String?=nil,position:UInt32?=nil,topic:String?=nil,bitrate:UInt32?=nil,user_limit:UInt32?=nil,nsfw:Bool?=nil)-instance-method","name":"modify_channel","doc":"Modifies a channel with new properties. Requires the \"Manage Channel\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#modify-channel)","summary":"<p>Modifies a channel with new properties.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"position","doc":null,"default_value":"nil","external_name":"position","restriction":"UInt32 | ::Nil"},{"name":"topic","doc":null,"default_value":"nil","external_name":"topic","restriction":"String | ::Nil"},{"name":"bitrate","doc":null,"default_value":"nil","external_name":"bitrate","restriction":"UInt32 | ::Nil"},{"name":"user_limit","doc":null,"default_value":"nil","external_name":"user_limit","restriction":"UInt32 | ::Nil"},{"name":"nsfw","doc":null,"default_value":"nil","external_name":"nsfw","restriction":"Bool | ::Nil"}],"args_string":"(channel_id : UInt64, name : String? = <span class=\"n\">nil</span>, position : UInt32? = <span class=\"n\">nil</span>, topic : String? = <span class=\"n\">nil</span>, bitrate : UInt32? = <span class=\"n\">nil</span>, user_limit : UInt32? = <span class=\"n\">nil</span>, nsfw : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L179","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L179","def":{"name":"modify_channel","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"position","doc":null,"default_value":"nil","external_name":"position","restriction":"UInt32 | ::Nil"},{"name":"topic","doc":null,"default_value":"nil","external_name":"topic","restriction":"String | ::Nil"},{"name":"bitrate","doc":null,"default_value":"nil","external_name":"bitrate","restriction":"UInt32 | ::Nil"},{"name":"user_limit","doc":null,"default_value":"nil","external_name":"user_limit","restriction":"UInt32 | ::Nil"},{"name":"nsfw","doc":null,"default_value":"nil","external_name":"nsfw","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, position: position, topic: topic, bitrate: bitrate, user_limit: user_limit)\nresponse = request(:channels_cid, channel_id, \"PATCH\", \"/channels/#{channel_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nChannel.from_json(response.body)\n"}},{"id":"modify_current_user(username:String?=nil,avatar:String?=nil)-instance-method","html_id":"modify_current_user(username:String?=nil,avatar:String?=nil)-instance-method","name":"modify_current_user","doc":"Modifies the current bot user, changing the username and avatar.\nNOTE: To remove the current user's avatar, you can send an empty string for the `avatar` argument.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/user#modify-current-user)","summary":"<p>Modifies the current bot user, changing the username and avatar.</p>","abstract":false,"args":[{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"avatar","doc":null,"default_value":"nil","external_name":"avatar","restriction":"String | ::Nil"}],"args_string":"(username : String? = <span class=\"n\">nil</span>, avatar : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1290","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1290","def":{"name":"modify_current_user","args":[{"name":"username","doc":null,"default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"avatar","doc":null,"default_value":"nil","external_name":"avatar","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(username: username, avatar: avatar)\nresponse = request(:users_me, nil, \"PATCH\", \"/users/@me\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nUser.from_json(response.body)\n"}},{"id":"modify_current_user_nick(guild_id:UInt64,nick:String)-instance-method","html_id":"modify_current_user_nick(guild_id:UInt64,nick:String)-instance-method","name":"modify_current_user_nick","doc":"Modifies the nickname of the current user in a guild.\n\nNOTE: To remove a nickname, you can send an empty string for the `nick` argument.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-current-user-nick)","summary":"<p>Modifies the nickname of the current user in a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"nick","doc":null,"default_value":"","external_name":"nick","restriction":"String"}],"args_string":"(guild_id : UInt64, nick : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L892","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L892","def":{"name":"modify_current_user_nick","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"nick","doc":null,"default_value":"","external_name":"nick","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_members_me, guild_id, \"PATCH\", \"/guilds/#{guild_id}/members/@me/nick\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, ({nick: nick}).to_json)"}},{"id":"modify_guild(guild_id:UInt64,name:String?=nil,region:String?=nil,verification_level:UInt8?=nil,afk_channel_id:UInt64?=nil,afk_timeout:Int32?=nil,icon:String?=nil,owner_id:UInt64?=nil,splash:String?=nil)-instance-method","html_id":"modify_guild(guild_id:UInt64,name:String?=nil,region:String?=nil,verification_level:UInt8?=nil,afk_channel_id:UInt64?=nil,afk_timeout:Int32?=nil,icon:String?=nil,owner_id:UInt64?=nil,splash:String?=nil)-instance-method","name":"modify_guild","doc":"Modifies an existing guild with new properties. Requires the \"Manage\nServer\" permission.\nNOTE: To remove a guild's icon, you can send an empty string for the `icon` argument.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-guild)","summary":"<p>Modifies an existing guild with new properties.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":"String | ::Nil"},{"name":"verification_level","doc":null,"default_value":"nil","external_name":"verification_level","restriction":"UInt8 | ::Nil"},{"name":"afk_channel_id","doc":null,"default_value":"nil","external_name":"afk_channel_id","restriction":"UInt64 | ::Nil"},{"name":"afk_timeout","doc":null,"default_value":"nil","external_name":"afk_timeout","restriction":"Int32 | ::Nil"},{"name":"icon","doc":null,"default_value":"nil","external_name":"icon","restriction":"String | ::Nil"},{"name":"owner_id","doc":null,"default_value":"nil","external_name":"owner_id","restriction":"UInt64 | ::Nil"},{"name":"splash","doc":null,"default_value":"nil","external_name":"splash","restriction":"String | ::Nil"}],"args_string":"(guild_id : UInt64, name : String? = <span class=\"n\">nil</span>, region : String? = <span class=\"n\">nil</span>, verification_level : UInt8? = <span class=\"n\">nil</span>, afk_channel_id : UInt64? = <span class=\"n\">nil</span>, afk_timeout : Int32? = <span class=\"n\">nil</span>, icon : String? = <span class=\"n\">nil</span>, owner_id : UInt64? = <span class=\"n\">nil</span>, splash : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L626","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L626","def":{"name":"modify_guild","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"region","doc":null,"default_value":"nil","external_name":"region","restriction":"String | ::Nil"},{"name":"verification_level","doc":null,"default_value":"nil","external_name":"verification_level","restriction":"UInt8 | ::Nil"},{"name":"afk_channel_id","doc":null,"default_value":"nil","external_name":"afk_channel_id","restriction":"UInt64 | ::Nil"},{"name":"afk_timeout","doc":null,"default_value":"nil","external_name":"afk_timeout","restriction":"Int32 | ::Nil"},{"name":"icon","doc":null,"default_value":"nil","external_name":"icon","restriction":"String | ::Nil"},{"name":"owner_id","doc":null,"default_value":"nil","external_name":"owner_id","restriction":"UInt64 | ::Nil"},{"name":"splash","doc":null,"default_value":"nil","external_name":"splash","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, region: region, verification_level: verification_level, afk_channel_id: afk_channel_id, afk_timeout: afk_timeout, icon: icon, owner_id: owner_id, splash: splash)\nresponse = request(:guilds_gid, guild_id, \"PATCH\", \"/guilds/#{guild_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nGuild.from_json(response.body)\n"}},{"id":"modify_guild_channel(guild_id:UInt64,channel_id:UInt64,position:UInt64)-instance-method","html_id":"modify_guild_channel(guild_id:UInt64,channel_id:UInt64,position:UInt64)-instance-method","name":"modify_guild_channel","doc":"Modifies a guild channel's position. Requires the \"Manage Channels\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-guild-channel)","summary":"<p>Modifies a guild channel's position.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, channel_id : UInt64, position : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L798","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L798","def":{"name":"modify_guild_channel","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(id: channel_id, position: position)\nresponse = request(:guilds_gid_channels, guild_id, \"PATCH\", \"/guilds/#{guild_id}/channels\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nChannel.from_json(response.body)\n"}},{"id":"modify_guild_embed(guild_id:UInt64,enabled:Bool,channel_id:UInt64)-instance-method","html_id":"modify_guild_embed(guild_id:UInt64,enabled:Bool,channel_id:UInt64)-instance-method","name":"modify_guild_embed","doc":"Modifies embed data for a guild. Requires the \"Manage Guild\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-guild-embed)","summary":"<p>Modifies embed data for a guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, enabled : Bool, channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1235","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1235","def":{"name":"modify_guild_embed","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"},{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(enabled: enabled, channel_id: channel_id)\nresponse = request(:guilds_gid_embed, guild_id, \"PATCH\", \"/guilds/#{guild_id}/embed\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nGuildEmbed.from_json(response.body)\n"}},{"id":"modify_guild_emoji(guild_id:UInt64,emoji_id:UInt64,name:String)-instance-method","html_id":"modify_guild_emoji(guild_id:UInt64,emoji_id:UInt64,name:String)-instance-method","name":"modify_guild_emoji","doc":"Modifies a guild emoji. Requires the \"Manage Emojis\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/emoji#modify-guild-emoji)","summary":"<p>Modifies a guild emoji.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"emoji_id","doc":null,"default_value":"","external_name":"emoji_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(guild_id : UInt64, emoji_id : UInt64, name : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L688","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L688","def":{"name":"modify_guild_emoji","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"emoji_id","doc":null,"default_value":"","external_name":"emoji_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:guilds_gid_emojis, guild_id, \"PATCH\", \"/guilds/#{guild_id}/emojis/#{emoji_id}\", HTTP::Headers.new, ({name: name}).to_json)\nEmoji.from_json(response.body)\n"}},{"id":"modify_guild_integration(guild_id:UInt64,integration_id:UInt64,expire_behaviour:UInt8,expire_grace_period:Int32,enable_emoticons:Bool)-instance-method","html_id":"modify_guild_integration(guild_id:UInt64,integration_id:UInt64,expire_behaviour:UInt8,expire_grace_period:Int32,enable_emoticons:Bool)-instance-method","name":"modify_guild_integration","doc":"Modifies an existing guild integration. Requires the \"Manage Guild\"\npermission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-guild-integration)","summary":"<p>Modifies an existing guild integration.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"integration_id","doc":null,"default_value":"","external_name":"integration_id","restriction":"UInt64"},{"name":"expire_behaviour","doc":null,"default_value":"","external_name":"expire_behaviour","restriction":"UInt8"},{"name":"expire_grace_period","doc":null,"default_value":"","external_name":"expire_grace_period","restriction":"Int32"},{"name":"enable_emoticons","doc":null,"default_value":"","external_name":"enable_emoticons","restriction":"Bool"}],"args_string":"(guild_id : UInt64, integration_id : UInt64, expire_behaviour : UInt8, expire_grace_period : Int32, enable_emoticons : Bool)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1168","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1168","def":{"name":"modify_guild_integration","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"integration_id","doc":null,"default_value":"","external_name":"integration_id","restriction":"UInt64"},{"name":"expire_behaviour","doc":null,"default_value":"","external_name":"expire_behaviour","restriction":"UInt8"},{"name":"expire_grace_period","doc":null,"default_value":"","external_name":"expire_grace_period","restriction":"Int32"},{"name":"enable_emoticons","doc":null,"default_value":"","external_name":"enable_emoticons","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(expire_behavior: expire_behaviour, expire_grace_period: expire_grace_period, enable_emoticons: enable_emoticons)\nrequest(:guilds_gid_integrations_iid, guild_id, \"PATCH\", \"/guilds/#{guild_id}/integrations/#{integration_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\n"}},{"id":"modify_guild_member(guild_id:UInt64,user_id:UInt64,nick:String?=nil,roles:Array(UInt64)?=nil,mute:Bool?=nil,deaf:Bool?=nil,channel_id:UInt64?=nil)-instance-method","html_id":"modify_guild_member(guild_id:UInt64,user_id:UInt64,nick:String?=nil,roles:Array(UInt64)?=nil,mute:Bool?=nil,deaf:Bool?=nil,channel_id:UInt64?=nil)-instance-method","name":"modify_guild_member","doc":"Changes a specific member's properties. Requires:\n\n - the \"Manage Roles\" permission and the role to change to be lower\n   than the bot's highest role if changing the roles,\n - the \"Manage Nicknames\" permission when changing the nickname,\n - the \"Mute Members\" permission when changing mute status,\n - the \"Deafen Members\" permission when changing deaf status,\n - and the \"Move Members\" permission as well as the \"Connect\" permission\n   to the new channel when changing voice channel ID.\n\nNOTE: To remove a member's nickname, you can send an empty string for the `nick` argument.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-guild-member)","summary":"<p>Changes a specific member's properties.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"},{"name":"nick","doc":null,"default_value":"nil","external_name":"nick","restriction":"String | ::Nil"},{"name":"roles","doc":null,"default_value":"nil","external_name":"roles","restriction":"Array(UInt64) | ::Nil"},{"name":"mute","doc":null,"default_value":"nil","external_name":"mute","restriction":"Bool | ::Nil"},{"name":"deaf","doc":null,"default_value":"nil","external_name":"deaf","restriction":"Bool | ::Nil"},{"name":"channel_id","doc":null,"default_value":"nil","external_name":"channel_id","restriction":"UInt64 | ::Nil"}],"args_string":"(guild_id : UInt64, user_id : UInt64, nick : String? = <span class=\"n\">nil</span>, roles : Array(UInt64)? = <span class=\"n\">nil</span>, mute : Bool? = <span class=\"n\">nil</span>, deaf : Bool? = <span class=\"n\">nil</span>, channel_id : UInt64? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L866","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L866","def":{"name":"modify_guild_member","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"},{"name":"nick","doc":null,"default_value":"nil","external_name":"nick","restriction":"String | ::Nil"},{"name":"roles","doc":null,"default_value":"nil","external_name":"roles","restriction":"Array(UInt64) | ::Nil"},{"name":"mute","doc":null,"default_value":"nil","external_name":"mute","restriction":"Bool | ::Nil"},{"name":"deaf","doc":null,"default_value":"nil","external_name":"deaf","restriction":"Bool | ::Nil"},{"name":"channel_id","doc":null,"default_value":"nil","external_name":"channel_id","restriction":"UInt64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(nick: nick, roles: roles, mute: mute, deaf: deaf, channel_id: channel_id)\nrequest(:guilds_gid_members_uid, guild_id, \"PATCH\", \"/guilds/#{guild_id}/members/#{user_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\n"}},{"id":"modify_guild_role(guild_id:UInt64,role_id:UInt64,name:String?=nil,permissions:Permissions?=nil,colour:UInt32?=nil,position:Int32?=nil,hoist:Bool?=nil)-instance-method","html_id":"modify_guild_role(guild_id:UInt64,role_id:UInt64,name:String?=nil,permissions:Permissions?=nil,colour:UInt32?=nil,position:Int32?=nil,hoist:Bool?=nil)-instance-method","name":"modify_guild_role","doc":"Changes a role's properties. Requires the \"Manage Roles\" permission as\nwell as the role to be lower than the bot's highest role.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#modify-guild-role)","summary":"<p>Changes a role's properties.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"permissions","doc":null,"default_value":"nil","external_name":"permissions","restriction":"Permissions | ::Nil"},{"name":"colour","doc":null,"default_value":"nil","external_name":"colour","restriction":"UInt32 | ::Nil"},{"name":"position","doc":null,"default_value":"nil","external_name":"position","restriction":"Int32 | ::Nil"},{"name":"hoist","doc":null,"default_value":"nil","external_name":"hoist","restriction":"Bool | ::Nil"}],"args_string":"(guild_id : UInt64, role_id : UInt64, name : String? = <span class=\"n\">nil</span>, permissions : Permissions? = <span class=\"n\">nil</span>, colour : UInt32? = <span class=\"n\">nil</span>, position : Int32? = <span class=\"n\">nil</span>, hoist : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1036","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1036","def":{"name":"modify_guild_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"permissions","doc":null,"default_value":"nil","external_name":"permissions","restriction":"Permissions | ::Nil"},{"name":"colour","doc":null,"default_value":"nil","external_name":"colour","restriction":"UInt32 | ::Nil"},{"name":"position","doc":null,"default_value":"nil","external_name":"position","restriction":"Int32 | ::Nil"},{"name":"hoist","doc":null,"default_value":"nil","external_name":"hoist","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, permissions: permissions, color: colour, position: position, hoist: hoist)\nresponse = request(:guilds_gid_roles_rid, guild_id, \"PATCH\", \"/guilds/#{guild_id}/roles/#{role_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nRole.from_json(response.body)\n"}},{"id":"modify_guild_vanity_url(guild_id:UInt64,code:String)-instance-method","html_id":"modify_guild_vanity_url(guild_id:UInt64,code:String)-instance-method","name":"modify_guild_vanity_url","doc":"Sets the vanity URL on this guild. Requires the guild to be\npartnered.\n\nThere are no API docs for this method.","summary":"<p>Sets the vanity URL on this guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(guild_id : UInt64, code : String)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L783","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L783","def":{"name":"modify_guild_vanity_url","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_vanityurl, guild_id, \"PATCH\", \"/guilds/#{guild_id}/vanity-url\", HTTP::Headers.new, ({code: code}).to_json)"}},{"id":"modify_webhook(webhook_id:UInt64,name:String?=nil,avatar:String?=nil,channel_id:UInt64?=nil)-instance-method","html_id":"modify_webhook(webhook_id:UInt64,name:String?=nil,avatar:String?=nil,channel_id:UInt64?=nil)-instance-method","name":"modify_webhook","doc":"Modify a webhook. Accepts optional parameters `name`, `avatar`, and `channel_id`.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#modify-webhook).","summary":"<p>Modify a webhook.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"avatar","doc":null,"default_value":"nil","external_name":"avatar","restriction":"String | ::Nil"},{"name":"channel_id","doc":null,"default_value":"nil","external_name":"channel_id","restriction":"UInt64 | ::Nil"}],"args_string":"(webhook_id : UInt64, name : String? = <span class=\"n\">nil</span>, avatar : String? = <span class=\"n\">nil</span>, channel_id : UInt64? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1557","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1557","def":{"name":"modify_webhook","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"avatar","doc":null,"default_value":"nil","external_name":"avatar","restriction":"String | ::Nil"},{"name":"channel_id","doc":null,"default_value":"nil","external_name":"channel_id","restriction":"UInt64 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, avatar: avatar, channel_id: channel_id)\nresponse = request(:webhooks_wid, webhook_id, \"PATCH\", \"/webhooks/#{webhook_id}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nWebhook.from_json(response.body)\n"}},{"id":"modify_webhook_with_token(webhook_id:UInt64,token:String,name:String?=nil,avatar:String?=nil)-instance-method","html_id":"modify_webhook_with_token(webhook_id:UInt64,token:String,name:String?=nil,avatar:String?=nil)-instance-method","name":"modify_webhook_with_token","doc":"Modify a webhook, with a token. Accepts optional parameters `name`, `avatar`, and `channel_id`.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/webhook#modify-webhook-with-token).","summary":"<p>Modify a webhook, with a token.</p>","abstract":false,"args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"avatar","doc":null,"default_value":"nil","external_name":"avatar","restriction":"String | ::Nil"}],"args_string":"(webhook_id : UInt64, token : String, name : String? = <span class=\"n\">nil</span>, avatar : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1580","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1580","def":{"name":"modify_webhook_with_token","args":[{"name":"webhook_id","doc":null,"default_value":"","external_name":"webhook_id","restriction":"UInt64"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"},{"name":"avatar","doc":null,"default_value":"nil","external_name":"avatar","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = encode_tuple(name: name, avatar: avatar)\nresponse = request(:webhooks_wid, webhook_id, \"PATCH\", \"/webhooks/#{webhook_id}/#{token}\", HTTP::Headers {\"Content-Type\" => \"application/json\"}, json)\nWebhook.from_json(response.body)\n"}},{"id":"raw_request(route_key:Symbol,major_parameter:UInt64?,method:String,path:String,headers:HTTP::Headers,body:String?)-instance-method","html_id":"raw_request(route_key:Symbol,major_parameter:UInt64?,method:String,path:String,headers:HTTP::Headers,body:String?)-instance-method","name":"raw_request","doc":"Like `#request`, but does not do error checking beyond 429.","summary":"<p>Like <code><a href=\"../Discord/REST.html#request%28route_key%3ASymbol%2Cmajor_parameter%3AUInt64%3F%2Cmethod%3AString%2Cpath%3AString%2Cheaders%3AHTTP%3A%3AHeaders%2Cbody%3AString%3F%29-instance-method\">#request</a></code>, but does not do error checking beyond 429.</p>","abstract":false,"args":[{"name":"route_key","doc":null,"default_value":"","external_name":"route_key","restriction":"Symbol"},{"name":"major_parameter","doc":null,"default_value":"","external_name":"major_parameter","restriction":"UInt64 | ::Nil"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(route_key : Symbol, major_parameter : UInt64?, method : String, path : String, headers : HTTP::Headers, body : String?)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L19","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L19","def":{"name":"raw_request","args":[{"name":"route_key","doc":null,"default_value":"","external_name":"route_key","restriction":"Symbol"},{"name":"major_parameter","doc":null,"default_value":"","external_name":"major_parameter","restriction":"UInt64 | ::Nil"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"mutexes = (@mutexes || (@mutexes = Hash(RateLimitKey, Mutex).new))\nglobal_mutex = (@global_mutex || (@global_mutex = Mutex.new))\nheaders[\"Authorization\"] = @token\nheaders[\"User-Agent\"] = USER_AGENT\nrequest_done = false\nrate_limit_key = {route_key: route_key, major_parameter: major_parameter}\nwhile !request_done\n  __temp_1055 = rate_limit_key\n  mutexes[__temp_1055]? || (mutexes[__temp_1055] = Mutex.new)\n  mutexes[rate_limit_key].synchronize do\n  end\n  global_mutex.synchronize do\n  end\n  response = HTTP::Client.exec(method: method, url: API_BASE + path, headers: headers, body: body, tls: SSL_CONTEXT)\n  if (response.status_code == 429) || (response.headers[\"X-RateLimit-Remaining\"]? == \"0\")\n    if response.headers[\"Retry-After\"]?\n      retry_after = response.headers[\"Retry-After\"].to_i / 1000.0\n    else\n      origin_time = (HTTP.parse_time(response.headers[\"Date\"])).not_nil!\n      reset_time = Time.epoch(response.headers[\"X-RateLimit-Reset\"].to_u64)\n      retry_after = reset_time - origin_time\n    end\n    if response.headers[\"X-RateLimit-Global\"]?\n      global_mutex.synchronize do\n        sleep(retry_after)\n      end\n    else\n      mutexes[rate_limit_key].synchronize do\n        sleep(retry_after)\n      end\n    end\n    if response.status_code == 429\n    else\n      request_done = true\n    end\n  else\n    request_done = true\n  end\nend\nresponse.not_nil!\n"}},{"id":"remove_guild_ban(guild_id:UInt64,user_id:UInt64)-instance-method","html_id":"remove_guild_ban(guild_id:UInt64,user_id:UInt64)-instance-method","name":"remove_guild_ban","doc":"Unbans a member from the guild. Requires the \"Ban Members\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#remove-guild-ban)","summary":"<p>Unbans a member from the guild.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L979","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L979","def":{"name":"remove_guild_ban","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_bans_uid, guild_id, \"DELETE\", \"/guilds/#{guild_id}/bans/#{user_id}\", HTTP::Headers.new, nil)"}},{"id":"remove_guild_member(guild_id:UInt64,user_id:UInt64)-instance-method","html_id":"remove_guild_member(guild_id:UInt64,user_id:UInt64)-instance-method","name":"remove_guild_member","doc":"Kicks a member from the server. Requires the \"Kick Members\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#remove-guild-member)","summary":"<p>Kicks a member from the server.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L906","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L906","def":{"name":"remove_guild_member","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_members_uid, guild_id, \"DELETE\", \"/guilds/#{guild_id}/members/#{user_id}\", HTTP::Headers.new, nil)"}},{"id":"remove_guild_member_role(guild_id:UInt64,user_id:UInt64,role_id:UInt64)-instance-method","html_id":"remove_guild_member_role(guild_id:UInt64,user_id:UInt64,role_id:UInt64)-instance-method","name":"remove_guild_member_role","doc":"Removes a role from a member. Requires the \"Manage Roles\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#remove-guild-member-role)","summary":"<p>Removes a role from a member.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, user_id : UInt64, role_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L934","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L934","def":{"name":"remove_guild_member_role","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"},{"name":"role_id","doc":null,"default_value":"","external_name":"role_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_members_uid_roles_rid, guild_id, \"DELETE\", \"/guilds/#{guild_id}/members/#{user_id}/roles/#{role_id}\", HTTP::Headers.new, nil)"}},{"id":"request(route_key:Symbol,major_parameter:UInt64?,method:String,path:String,headers:HTTP::Headers,body:String?)-instance-method","html_id":"request(route_key:Symbol,major_parameter:UInt64?,method:String,path:String,headers:HTTP::Headers,body:String?)-instance-method","name":"request","doc":"Makes a REST request to Discord, with the given *method* to the given\n*path*, with the given *headers* set and with the given *body* being sent.\nThe *route_key* should uniquely identify the route used, for rate limiting\npurposes. The *major_parameter* should be set to the guild or channel ID,\nif either of those appears as the first parameter in the route.\n\nThis method also does rate limit handling, so if a rate limit is\nencountered, it may take longer than usual. (In case you're worried, this\nwon't block events from being processed.) It also performs other kinds\nof error checking, so if a request fails (with a status code that is not\n429) you will be notified of that.","summary":"<p>Makes a REST request to Discord, with the given <em>method</em> to the given <em>path</em>, with the given <em>headers</em> set and with the given <em>body</em> being sent.</p>","abstract":false,"args":[{"name":"route_key","doc":null,"default_value":"","external_name":"route_key","restriction":"Symbol"},{"name":"major_parameter","doc":null,"default_value":"","external_name":"major_parameter","restriction":"UInt64 | ::Nil"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(route_key : Symbol, major_parameter : UInt64?, method : String, path : String, headers : HTTP::Headers, body : String?)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L82","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L82","def":{"name":"request","args":[{"name":"route_key","doc":null,"default_value":"","external_name":"route_key","restriction":"Symbol"},{"name":"major_parameter","doc":null,"default_value":"","external_name":"major_parameter","restriction":"UInt64 | ::Nil"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = raw_request(route_key, major_parameter, method, path, headers, body)\nif response.success?\nelse\n  if response.content_type == \"application/json\"\n  else\n    raise(StatusException.new(response))\n  end\n  begin\n    error = APIError.from_json(response.body)\n  rescue\n    raise(StatusException.new(response))\n  end\n  raise(CodeException.new(response, error))\nend\nresponse\n"}},{"id":"sync_guild_integration(guild_id:UInt64,integration_id:UInt64)-instance-method","html_id":"sync_guild_integration(guild_id:UInt64,integration_id:UInt64)-instance-method","name":"sync_guild_integration","doc":"Syncs an integration. Requires the \"Manage Guild\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/guild#sync-guild-integration)","summary":"<p>Syncs an integration.</p>","abstract":false,"args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"integration_id","doc":null,"default_value":"","external_name":"integration_id","restriction":"UInt64"}],"args_string":"(guild_id : UInt64, integration_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1205","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L1205","def":{"name":"sync_guild_integration","args":[{"name":"guild_id","doc":null,"default_value":"","external_name":"guild_id","restriction":"UInt64"},{"name":"integration_id","doc":null,"default_value":"","external_name":"integration_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request(:guilds_gid_integrations_iid_sync, guild_id, \"POST\", \"/guilds/#{guild_id}/integrations/#{integration_id}/sync\", HTTP::Headers.new, nil)"}},{"id":"trigger_typing_indicator(channel_id:UInt64)-instance-method","html_id":"trigger_typing_indicator(channel_id:UInt64)-instance-method","name":"trigger_typing_indicator","doc":"Causes the bot to appear as typing on the channel. This generally lasts\n10 seconds, but should be refreshed every five seconds. Requires the\n\"Send Messages\" permission.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#trigger-typing-indicator)","summary":"<p>Causes the bot to appear as typing on the channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"args_string":"(channel_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L548","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L548","def":{"name":"trigger_typing_indicator","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"response = request(:channels_cid_typing, channel_id, \"POST\", \"/channels/#{channel_id}/typing\", HTTP::Headers.new, nil)"}},{"id":"upload_file(channel_id:UInt64,content:String?,file:IO,filename:String?=nil)-instance-method","html_id":"upload_file(channel_id:UInt64,content:String?,file:IO,filename:String?=nil)-instance-method","name":"upload_file","doc":"Uploads a file to a channel. Requires the \"Send Messages\" and \"Attach\nFiles\" permissions.\n\nIf the specified `file` is a `File` object and no filename is specified,\nthe file's filename will be used instead. If it is an `IO` without\nfilename information, Discord will generate a placeholder filename.\n\n[API docs for this method](https://discordapp.com/developers/docs/resources/channel#create-message)\n(same as `#create_message` -- this method implements form data bodies\nwhile `#create_message` implements JSON bodies)","summary":"<p>Uploads a file to a channel.</p>","abstract":false,"args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | ::Nil"},{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"IO"},{"name":"filename","doc":null,"default_value":"nil","external_name":"filename","restriction":"String | ::Nil"}],"args_string":"(channel_id : UInt64, content : String?, file : IO, filename : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L388","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr#L388","def":{"name":"upload_file","args":[{"name":"channel_id","doc":null,"default_value":"","external_name":"channel_id","restriction":"UInt64"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | ::Nil"},{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"IO"},{"name":"filename","doc":null,"default_value":"nil","external_name":"filename","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\nif filename\nelse\n  if file.is_a?(File)\n    filename = File.basename(file.path)\n  else\n    filename = \"\"\n  end\nend\nbuilder = HTTP::FormData::Builder.new(io)\nif content\n  builder.field(\"content\", content)\nend\nbuilder.file(\"file\", file, HTTP::FormData::FileMetadata.new(filename: filename))\nbuilder.finish\nresponse = request(:channels_cid_messages, channel_id, \"POST\", \"/channels/#{channel_id}/messages\", HTTP::Headers {\"Content-Type\" => builder.content_type}, io.to_s)\nMessage.from_json(response.body)\n"}}],"macros":[],"types":[{"html_id":"github.com/z64/discordcr/Discord/REST/GatewayBotResponse","path":"Discord/REST/GatewayBotResponse.html","kind":"struct","full_name":"Discord::REST::GatewayBotResponse","name":"GatewayBotResponse","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/rest.cr","line_number":13,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/rest.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},"doc":"A response to the Get Gateway Bot REST API call.","summary":"<p>A response to the Get Gateway Bot REST API call.</p>","class_methods":[],"constructors":[{"id":"new(__temp_945:JSON::PullParser)-class-method","html_id":"new(__temp_945:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_945","doc":null,"default_value":"","external_name":"__temp_945","restriction":"::JSON::PullParser"}],"args_string":"(__temp_945 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_945","doc":null,"default_value":"","external_name":"__temp_945","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_945)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"shards:Int32-instance-method","html_id":"shards:Int32-instance-method","name":"shards","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"shards","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shards"}},{"id":"shards=(_shards:Int32)-instance-method","html_id":"shards=(_shards:Int32)-instance-method","name":"shards=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_shards","doc":null,"default_value":"","external_name":"_shards","restriction":"Int32"}],"args_string":"(_shards : Int32)","source_link":null,"source_link":null,"def":{"name":"shards=","args":[{"name":"_shards","doc":null,"default_value":"","external_name":"_shards","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shards = _shards"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\n  _shards = @shards\n  if _shards.nil?\n  else\n    json.field(\"shards\") do\n      _shards.to_json(json)\n    end\n  end\nend"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:String)-instance-method","html_id":"url=(_url:String)-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"args_string":"(_url : String)","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/REST/GatewayResponse","path":"Discord/REST/GatewayResponse.html","kind":"struct","full_name":"Discord::REST::GatewayResponse","name":"GatewayResponse","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/rest.cr","line_number":6,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/rest.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},"doc":"A response to the Get Gateway REST API call.","summary":"<p>A response to the Get Gateway REST API call.</p>","class_methods":[],"constructors":[{"id":"new(__temp_940:JSON::PullParser)-class-method","html_id":"new(__temp_940:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_940","doc":null,"default_value":"","external_name":"__temp_940","restriction":"::JSON::PullParser"}],"args_string":"(__temp_940 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_940","doc":null,"default_value":"","external_name":"__temp_940","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_940)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _url = @url\n  if _url.nil?\n  else\n    json.field(\"url\") do\n      _url.to_json(json)\n    end\n  end\nend"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"url=(_url:String)-instance-method","html_id":"url=(_url:String)-instance-method","name":"url=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"args_string":"(_url : String)","source_link":null,"source_link":null,"def":{"name":"url=","args":[{"name":"_url","doc":null,"default_value":"","external_name":"_url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = _url"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/REST/GuildVanityURLResponse","path":"Discord/REST/GuildVanityURLResponse.html","kind":"struct","full_name":"Discord::REST::GuildVanityURLResponse","name":"GuildVanityURLResponse","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/rest.cr","line_number":28,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/rest.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},"doc":"A response to the Get Guild Vanity URL REST API call.","summary":"<p>A response to the Get Guild Vanity URL REST API call.</p>","class_methods":[],"constructors":[{"id":"new(__temp_957:JSON::PullParser)-class-method","html_id":"new(__temp_957:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_957","doc":null,"default_value":"","external_name":"__temp_957","restriction":"::JSON::PullParser"}],"args_string":"(__temp_957 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_957","doc":null,"default_value":"","external_name":"__temp_957","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_957)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"code:String-instance-method","html_id":"code:String-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code"}},{"id":"code=(_code:String)-instance-method","html_id":"code=(_code:String)-instance-method","name":"code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"String"}],"args_string":"(_code : String)","source_link":null,"source_link":null,"def":{"name":"code=","args":[{"name":"_code","doc":null,"default_value":"","external_name":"_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code = _code"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _code = @code\n  if _code.nil?\n  else\n    json.field(\"code\") do\n      _code.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/REST/PruneCountResponse","path":"Discord/REST/PruneCountResponse.html","kind":"struct","full_name":"Discord::REST::PruneCountResponse","name":"PruneCountResponse","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/rest.cr","line_number":21,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/rest.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},"doc":"A response to the Get Guild Prune Count REST API call.","summary":"<p>A response to the Get Guild Prune Count REST API call.</p>","class_methods":[],"constructors":[{"id":"new(__temp_952:JSON::PullParser)-class-method","html_id":"new(__temp_952:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_952","doc":null,"default_value":"","external_name":"__temp_952","restriction":"::JSON::PullParser"}],"args_string":"(__temp_952 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_952","doc":null,"default_value":"","external_name":"__temp_952","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_952)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"pruned:UInt32-instance-method","html_id":"pruned:UInt32-instance-method","name":"pruned","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"pruned","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pruned"}},{"id":"pruned=(_pruned:UInt32)-instance-method","html_id":"pruned=(_pruned:UInt32)-instance-method","name":"pruned=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_pruned","doc":null,"default_value":"","external_name":"_pruned","restriction":"UInt32"}],"args_string":"(_pruned : UInt32)","source_link":null,"source_link":null,"def":{"name":"pruned=","args":[{"name":"_pruned","doc":null,"default_value":"","external_name":"_pruned","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pruned = _pruned"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _pruned = @pruned\n  if _pruned.nil?\n  else\n    json.field(\"pruned\") do\n      _pruned.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/REST/RateLimitKey","path":"Discord/REST/RateLimitKey.html","kind":"alias","full_name":"Discord::REST::RateLimitKey","name":"RateLimitKey","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"discordcr/rest.cr","line_number":16,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/rest.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(route_key: Symbol, major_parameter: UInt64 | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord/REST","kind":"module","full_name":"Discord::REST","name":"REST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr/Discord/Role","path":"Discord/Role.html","kind":"struct","full_name":"Discord::Role","name":"Role","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":149,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_461:JSON::PullParser)-class-method","html_id":"new(__temp_461:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_461","doc":null,"default_value":"","external_name":"__temp_461","restriction":"::JSON::PullParser"}],"args_string":"(__temp_461 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_461","doc":null,"default_value":"","external_name":"__temp_461","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_461)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"color-instance-method","html_id":"color-instance-method","name":"color","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L161","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr#L161","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"colour"}},{"id":"colour:UInt32-instance-method","html_id":"colour:UInt32-instance-method","name":"colour","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":null,"source_link":null,"def":{"name":"colour","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@colour"}},{"id":"colour=(_colour:UInt32)-instance-method","html_id":"colour=(_colour:UInt32)-instance-method","name":"colour=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_colour","doc":null,"default_value":"","external_name":"_colour","restriction":"UInt32"}],"args_string":"(_colour : UInt32)","source_link":null,"source_link":null,"def":{"name":"colour=","args":[{"name":"_colour","doc":null,"default_value":"","external_name":"_colour","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@colour = _colour"}},{"id":"hoist:Bool-instance-method","html_id":"hoist:Bool-instance-method","name":"hoist","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"hoist","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hoist"}},{"id":"hoist=(_hoist:Bool)-instance-method","html_id":"hoist=(_hoist:Bool)-instance-method","name":"hoist=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_hoist","doc":null,"default_value":"","external_name":"_hoist","restriction":"Bool"}],"args_string":"(_hoist : Bool)","source_link":null,"source_link":null,"def":{"name":"hoist=","args":[{"name":"_hoist","doc":null,"default_value":"","external_name":"_hoist","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hoist = _hoist"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"managed:Bool-instance-method","html_id":"managed:Bool-instance-method","name":"managed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"managed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@managed"}},{"id":"managed=(_managed:Bool)-instance-method","html_id":"managed=(_managed:Bool)-instance-method","name":"managed=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_managed","doc":null,"default_value":"","external_name":"_managed","restriction":"Bool"}],"args_string":"(_managed : Bool)","source_link":null,"source_link":null,"def":{"name":"managed=","args":[{"name":"_managed","doc":null,"default_value":"","external_name":"_managed","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@managed = _managed"}},{"id":"mentionable:Bool-instance-method","html_id":"mentionable:Bool-instance-method","name":"mentionable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"mentionable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mentionable"}},{"id":"mentionable=(_mentionable:Bool)-instance-method","html_id":"mentionable=(_mentionable:Bool)-instance-method","name":"mentionable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mentionable","doc":null,"default_value":"","external_name":"_mentionable","restriction":"Bool"}],"args_string":"(_mentionable : Bool)","source_link":null,"source_link":null,"def":{"name":"mentionable=","args":[{"name":"_mentionable","doc":null,"default_value":"","external_name":"_mentionable","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mentionable = _mentionable"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"permissions:Discord::Permissions-instance-method","html_id":"permissions:Discord::Permissions-instance-method","name":"permissions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Permissions","source_link":null,"source_link":null,"def":{"name":"permissions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@permissions"}},{"id":"permissions=(_permissions:Permissions)-instance-method","html_id":"permissions=(_permissions:Permissions)-instance-method","name":"permissions=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_permissions","doc":null,"default_value":"","external_name":"_permissions","restriction":"Permissions"}],"args_string":"(_permissions : Permissions)","source_link":null,"source_link":null,"def":{"name":"permissions=","args":[{"name":"_permissions","doc":null,"default_value":"","external_name":"_permissions","restriction":"Permissions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@permissions = _permissions"}},{"id":"position:Int32-instance-method","html_id":"position:Int32-instance-method","name":"position","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position"}},{"id":"position=(_position:Int32)-instance-method","html_id":"position=(_position:Int32)-instance-method","name":"position=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_position","doc":null,"default_value":"","external_name":"_position","restriction":"Int32"}],"args_string":"(_position : Int32)","source_link":null,"source_link":null,"def":{"name":"position=","args":[{"name":"_position","doc":null,"default_value":"","external_name":"_position","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position = _position"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _permissions = @permissions\n  if _permissions.nil?\n  else\n    json.field(\"permissions\") do\n      _permissions.to_json(json)\n    end\n  end\n  _colour = @colour\n  if _colour.nil?\n  else\n    json.field(\"color\") do\n      _colour.to_json(json)\n    end\n  end\n  _hoist = @hoist\n  if _hoist.nil?\n  else\n    json.field(\"hoist\") do\n      _hoist.to_json(json)\n    end\n  end\n  _position = @position\n  if _position.nil?\n  else\n    json.field(\"position\") do\n      _position.to_json(json)\n    end\n  end\n  _managed = @managed\n  if _managed.nil?\n  else\n    json.field(\"managed\") do\n      _managed.to_json(json)\n    end\n  end\n  _mentionable = @mentionable\n  if _mentionable.nil?\n  else\n    json.field(\"mentionable\") do\n      _mentionable.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/StatusException","path":"Discord/StatusException.html","kind":"class","full_name":"Discord::StatusException","name":"StatusException","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/z64/discordcr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/errors.cr","line_number":7,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/z64/discordcr/Discord/CodeException","kind":"class","full_name":"Discord::CodeException","name":"CodeException"}],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"This exception is raised in `REST#request` when a request fails in general,\nwithout returning a special error response.","summary":"<p>This exception is raised in <code><a href=\"../Discord/REST.html#request%28route_key%3ASymbol%2Cmajor_parameter%3AUInt64%3F%2Cmethod%3AString%2Cpath%3AString%2Cheaders%3AHTTP%3A%3AHeaders%2Cbody%3AString%3F%29-instance-method\">REST#request</a></code> when a request fails in general, without returning a special error response.</p>","class_methods":[],"constructors":[{"id":"new(response:HTTP::Client::Response)-class-method","html_id":"new(response:HTTP::Client::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"HTTP::Client::Response"}],"args_string":"(response : HTTP::Client::Response)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L10","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L10","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"HTTP::Client::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"message-instance-method","html_id":"message-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L25","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L25","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@response.status_code} #{@response.status_message}\""}},{"id":"response:HTTP::Client::Response-instance-method","html_id":"response:HTTP::Client::Response-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client::Response","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L8","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L8","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Client::Response","visibility":"Public","body":"@response"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":"The status code of the response that caused this exception, for example\n500 or 418.","summary":"<p>The status code of the response that caused this exception, for example 500 or 418.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L15","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L15","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@response.status_code"}},{"id":"status_message:String-instance-method","html_id":"status_message:String-instance-method","name":"status_message","doc":"The status message of the response that caused this exception, for example\n\"Internal Server Error\" or \"I'm A Teapot\".","summary":"<p>The status message of the response that caused this exception, for example \"Internal Server Error\" or \"I'm A Teapot\".</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L21","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L21","def":{"name":"status_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@response.status_message"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L29","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/errors.cr#L29","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((io << @response.status_code) << \" \") << @response.status_message"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/UnavailableGuild","path":"Discord/UnavailableGuild.html","kind":"struct","full_name":"Discord::UnavailableGuild","name":"UnavailableGuild","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/guild.cr","line_number":55,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/guild.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_387:JSON::PullParser)-class-method","html_id":"new(__temp_387:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_387","doc":null,"default_value":"","external_name":"__temp_387","restriction":"::JSON::PullParser"}],"args_string":"(__temp_387 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_387","doc":null,"default_value":"","external_name":"__temp_387","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_387)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _unavailable = @unavailable\n  if _unavailable.nil?\n  else\n    json.field(\"unavailable\") do\n      _unavailable.to_json(json)\n    end\n  end\nend"}},{"id":"unavailable:Bool-instance-method","html_id":"unavailable:Bool-instance-method","name":"unavailable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"unavailable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unavailable"}},{"id":"unavailable=(_unavailable:Bool)-instance-method","html_id":"unavailable=(_unavailable:Bool)-instance-method","name":"unavailable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_unavailable","doc":null,"default_value":"","external_name":"_unavailable","restriction":"Bool"}],"args_string":"(_unavailable : Bool)","source_link":null,"source_link":null,"def":{"name":"unavailable=","args":[{"name":"_unavailable","doc":null,"default_value":"","external_name":"_unavailable","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unavailable = _unavailable"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/User","path":"Discord/User.html","kind":"struct","full_name":"Discord::User","name":"User","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/user.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_250:JSON::PullParser)-class-method","html_id":"new(__temp_250:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_250","doc":null,"default_value":"","external_name":"__temp_250","restriction":"::JSON::PullParser"}],"args_string":"(__temp_250 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_250","doc":null,"default_value":"","external_name":"__temp_250","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_250)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"avatar:String?-instance-method","html_id":"avatar:String?-instance-method","name":"avatar","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"avatar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar"}},{"id":"avatar=(_avatar:::Union(String,Nil))-instance-method","html_id":"avatar=(_avatar:::Union(String,Nil))-instance-method","name":"avatar=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"::Union(String, ::Nil)"}],"args_string":"(_avatar : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"avatar=","args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar = _avatar"}},{"id":"bot:Bool?-instance-method","html_id":"bot:Bool?-instance-method","name":"bot","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"bot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot"}},{"id":"bot=(_bot:::Union(Bool,Nil))-instance-method","html_id":"bot=(_bot:::Union(Bool,Nil))-instance-method","name":"bot=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_bot","doc":null,"default_value":"","external_name":"_bot","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_bot : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"bot=","args":[{"name":"_bot","doc":null,"default_value":"","external_name":"_bot","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bot = _bot"}},{"id":"discriminator:String-instance-method","html_id":"discriminator:String-instance-method","name":"discriminator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"discriminator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@discriminator"}},{"id":"discriminator=(_discriminator:String)-instance-method","html_id":"discriminator=(_discriminator:String)-instance-method","name":"discriminator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_discriminator","doc":null,"default_value":"","external_name":"_discriminator","restriction":"String"}],"args_string":"(_discriminator : String)","source_link":null,"source_link":null,"def":{"name":"discriminator=","args":[{"name":"_discriminator","doc":null,"default_value":"","external_name":"_discriminator","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@discriminator = _discriminator"}},{"id":"email:String?-instance-method","html_id":"email:String?-instance-method","name":"email","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"email","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email"}},{"id":"email=(_email:::Union(String,Nil))-instance-method","html_id":"email=(_email:::Union(String,Nil))-instance-method","name":"email=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"::Union(String, ::Nil)"}],"args_string":"(_email : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"email=","args":[{"name":"_email","doc":null,"default_value":"","external_name":"_email","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@email = _email"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"mfa_enabled:Bool?-instance-method","html_id":"mfa_enabled:Bool?-instance-method","name":"mfa_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"mfa_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mfa_enabled"}},{"id":"mfa_enabled=(_mfa_enabled:::Union(Bool,Nil))-instance-method","html_id":"mfa_enabled=(_mfa_enabled:::Union(Bool,Nil))-instance-method","name":"mfa_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mfa_enabled","doc":null,"default_value":"","external_name":"_mfa_enabled","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_mfa_enabled : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"mfa_enabled=","args":[{"name":"_mfa_enabled","doc":null,"default_value":"","external_name":"_mfa_enabled","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mfa_enabled = _mfa_enabled"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _username = @username\n  if _username.nil?\n  else\n    json.field(\"username\") do\n      _username.to_json(json)\n    end\n  end\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _discriminator = @discriminator\n  if _discriminator.nil?\n  else\n    json.field(\"discriminator\") do\n      _discriminator.to_json(json)\n    end\n  end\n  _avatar = @avatar\n  if _avatar.nil?\n  else\n    json.field(\"avatar\") do\n      _avatar.to_json(json)\n    end\n  end\n  _email = @email\n  if _email.nil?\n  else\n    json.field(\"email\") do\n      _email.to_json(json)\n    end\n  end\n  _bot = @bot\n  if _bot.nil?\n  else\n    json.field(\"bot\") do\n      _bot.to_json(json)\n    end\n  end\n  _mfa_enabled = @mfa_enabled\n  if _mfa_enabled.nil?\n  else\n    json.field(\"mfa_enabled\") do\n      _mfa_enabled.to_json(json)\n    end\n  end\n  _verified = @verified\n  if _verified.nil?\n  else\n    json.field(\"verified\") do\n      _verified.to_json(json)\n    end\n  end\nend"}},{"id":"username:String-instance-method","html_id":"username:String-instance-method","name":"username","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"username","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username"}},{"id":"username=(_username:String)-instance-method","html_id":"username=(_username:String)-instance-method","name":"username=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"String"}],"args_string":"(_username : String)","source_link":null,"source_link":null,"def":{"name":"username=","args":[{"name":"_username","doc":null,"default_value":"","external_name":"_username","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username = _username"}},{"id":"verified:Bool?-instance-method","html_id":"verified:Bool?-instance-method","name":"verified","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"verified","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verified"}},{"id":"verified=(_verified:::Union(Bool,Nil))-instance-method","html_id":"verified=(_verified:::Union(Bool,Nil))-instance-method","name":"verified=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_verified","doc":null,"default_value":"","external_name":"_verified","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_verified : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"verified=","args":[{"name":"_verified","doc":null,"default_value":"","external_name":"_verified","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@verified = _verified"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/UserGuild","path":"Discord/UserGuild.html","kind":"struct","full_name":"Discord::UserGuild","name":"UserGuild","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/user.cr","line_number":42,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/user.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_284:JSON::PullParser)-class-method","html_id":"new(__temp_284:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_284","doc":null,"default_value":"","external_name":"__temp_284","restriction":"::JSON::PullParser"}],"args_string":"(__temp_284 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_284","doc":null,"default_value":"","external_name":"__temp_284","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_284)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"icon:String?-instance-method","html_id":"icon:String?-instance-method","name":"icon","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"icon","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon"}},{"id":"icon=(_icon:::Union(String,Nil))-instance-method","html_id":"icon=(_icon:::Union(String,Nil))-instance-method","name":"icon=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"args_string":"(_icon : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"icon=","args":[{"name":"_icon","doc":null,"default_value":"","external_name":"_icon","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@icon = _icon"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"owner:Bool-instance-method","html_id":"owner:Bool-instance-method","name":"owner","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"owner","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner"}},{"id":"owner=(_owner:Bool)-instance-method","html_id":"owner=(_owner:Bool)-instance-method","name":"owner=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_owner","doc":null,"default_value":"","external_name":"_owner","restriction":"Bool"}],"args_string":"(_owner : Bool)","source_link":null,"source_link":null,"def":{"name":"owner=","args":[{"name":"_owner","doc":null,"default_value":"","external_name":"_owner","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@owner = _owner"}},{"id":"permissions:Discord::Permissions-instance-method","html_id":"permissions:Discord::Permissions-instance-method","name":"permissions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::Permissions","source_link":null,"source_link":null,"def":{"name":"permissions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@permissions"}},{"id":"permissions=(_permissions:Permissions)-instance-method","html_id":"permissions=(_permissions:Permissions)-instance-method","name":"permissions=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_permissions","doc":null,"default_value":"","external_name":"_permissions","restriction":"Permissions"}],"args_string":"(_permissions : Permissions)","source_link":null,"source_link":null,"def":{"name":"permissions=","args":[{"name":"_permissions","doc":null,"default_value":"","external_name":"_permissions","restriction":"Permissions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@permissions = _permissions"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _icon = @icon\n  if _icon.nil?\n  else\n    json.field(\"icon\") do\n      _icon.to_json(json)\n    end\n  end\n  _owner = @owner\n  if _owner.nil?\n  else\n    json.field(\"owner\") do\n      _owner.to_json(json)\n    end\n  end\n  _permissions = @permissions\n  if _permissions.nil?\n  else\n    json.field(\"permissions\") do\n      _permissions.to_json(json)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/VoiceClient","path":"Discord/VoiceClient.html","kind":"class","full_name":"Discord::VoiceClient","name":"VoiceClient","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/voice.cr","line_number":9,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"ENCRYPTED_MODE","value":"\"xsalsa20_poly1305\"","doc":"The mode that tells Discord we want to send encrypted audio","summary":"<p>The mode that tells Discord we want to send encrypted audio</p>"},{"name":"HEARTBEAT_JSON","value":"({op: OP_HEARTBEAT, d: nil}).to_json","doc":"The heartbeat is the same every time, so it can be a constant","summary":"<p>The heartbeat is the same every time, so it can be a constant</p>"},{"name":"OP_HEARTBEAT","value":"3","doc":null,"summary":null},{"name":"OP_HELLO","value":"8","doc":null,"summary":null},{"name":"OP_IDENTIFY","value":"0","doc":null,"summary":null},{"name":"OP_READY","value":"2","doc":null,"summary":null},{"name":"OP_SELECT_PROTOCOL","value":"1","doc":null,"summary":null},{"name":"OP_SESSION_DESCRIPTION","value":"4","doc":null,"summary":null},{"name":"OP_SPEAKING","value":"5","doc":null,"summary":null},{"name":"UDP_PROTOCOL","value":"\"udp\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(payload:Discord::Gateway::VoiceServerUpdatePayload,session:Discord::Gateway::Session,user_id:UInt64)-class-method","html_id":"new(payload:Discord::Gateway::VoiceServerUpdatePayload,session:Discord::Gateway::Session,user_id:UInt64)-class-method","name":"new","doc":"Creates a new voice client. The *payload* should be a payload received\nfrom Discord as part of a VOICE_SERVER_UPDATE dispatch, received after\nsending a voice state update (gateway op 4) packet. The *session* should\nbe the session currently in use by the gateway client on which the\naforementioned dispatch was received, and the *user_id* should be the\nuser ID of the account on which the voice client is created. (It is\nreceived as part of the gateway READY dispatch, for example)","summary":"<p>Creates a new voice client.</p>","abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Gateway::VoiceServerUpdatePayload"},{"name":"session","doc":null,"default_value":"","external_name":"session","restriction":"Discord::Gateway::Session"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"args_string":"(payload : Discord::Gateway::VoiceServerUpdatePayload, session : Discord::Gateway::Session, user_id : UInt64)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L45","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L45","def":{"name":"new","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"Discord::Gateway::VoiceServerUpdatePayload"},{"name":"session","doc":null,"default_value":"","external_name":"session","restriction":"Discord::Gateway::Session"},{"name":"user_id","doc":null,"default_value":"","external_name":"user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(payload, session, user_id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close(*args,**options)-instance-method","html_id":"close(*args,**options)-instance-method","name":"close","doc":"Closes the VWS connection, in effect disconnecting from voice.","summary":"<p>Closes the VWS connection, in effect disconnecting from voice.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L73","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L73","def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.close(*args, **options)"}},{"id":"close(*args,**options,&block)-instance-method","html_id":"close(*args,**options,&amp;block)-instance-method","name":"close","doc":"Closes the VWS connection, in effect disconnecting from voice.","summary":"<p>Closes the VWS connection, in effect disconnecting from voice.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L73","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L73","def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.close(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"on_ready(&ready_handler:->)-instance-method","html_id":"on_ready(&amp;ready_handler:-&gt;)-instance-method","name":"on_ready","doc":"Sets the handler that should be run once the voice client has connected\nsuccessfully.","summary":"<p>Sets the handler that should be run once the voice client has connected successfully.</p>","abstract":false,"args":[],"args_string":"(&ready_handler :  -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L77","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L77","def":{"name":"on_ready","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"ready_handler","doc":null,"default_value":"","external_name":"ready_handler","restriction":"(-> )"},"return_type":"","visibility":"Public","body":"@ready_handler = ready_handler"}},{"id":"play_opus(buf:Bytes)-instance-method","html_id":"play_opus(buf:Bytes)-instance-method","name":"play_opus","doc":"Plays a single opus packet","summary":"<p>Plays a single opus packet</p>","abstract":false,"args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"Bytes"}],"args_string":"(buf : Bytes)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L88","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L88","def":{"name":"play_opus","args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"increment_packet_metadata\n@udp.send_audio(buf, @sequence, @time)\n"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Initiates the connection process and blocks forever afterwards.","summary":"<p>Initiates the connection process and blocks forever afterwards.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L67","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L67","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"spawn do\n  heartbeat_loop\nend\n@websocket.run\n"}},{"id":"send_speaking(speaking:Bool,delay:Int32=0)-instance-method","html_id":"send_speaking(speaking:Bool,delay:Int32=0)-instance-method","name":"send_speaking","doc":"Sends a packet to indicate to Discord whether or not we are speaking\nright now","summary":"<p>Sends a packet to indicate to Discord whether or not we are speaking right now</p>","abstract":false,"args":[{"name":"speaking","doc":null,"default_value":"","external_name":"speaking","restriction":"Bool"},{"name":"delay","doc":null,"default_value":"0","external_name":"delay","restriction":"Int32"}],"args_string":"(speaking : Bool, delay : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L82","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L82","def":{"name":"send_speaking","args":[{"name":"speaking","doc":null,"default_value":"","external_name":"speaking","restriction":"Bool"},{"name":"delay","doc":null,"default_value":"0","external_name":"delay","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"packet = VWS::SpeakingPacket.new(speaking, delay)\n@websocket.send(packet.to_json)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/VoiceRegion","path":"Discord/VoiceRegion.html","kind":"struct","full_name":"Discord::VoiceRegion","name":"VoiceRegion","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/voice.cr","line_number":18,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/voice.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_329:JSON::PullParser)-class-method","html_id":"new(__temp_329:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_329","doc":null,"default_value":"","external_name":"__temp_329","restriction":"::JSON::PullParser"}],"args_string":"(__temp_329 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_329","doc":null,"default_value":"","external_name":"__temp_329","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_329)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"custom:Bool?-instance-method","html_id":"custom:Bool?-instance-method","name":"custom","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool?","source_link":null,"source_link":null,"def":{"name":"custom","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@custom"}},{"id":"custom=(_custom:::Union(Bool,Nil))-instance-method","html_id":"custom=(_custom:::Union(Bool,Nil))-instance-method","name":"custom=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_custom","doc":null,"default_value":"","external_name":"_custom","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_custom : ::Union(Bool, Nil))","source_link":null,"source_link":null,"def":{"name":"custom=","args":[{"name":"_custom","doc":null,"default_value":"","external_name":"_custom","restriction":"::Union(Bool, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@custom = _custom"}},{"id":"id:String-instance-method","html_id":"id:String-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:String)-instance-method","html_id":"id=(_id:String)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"String"}],"args_string":"(_id : String)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"optimal:Bool-instance-method","html_id":"optimal:Bool-instance-method","name":"optimal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"optimal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@optimal"}},{"id":"optimal=(_optimal:Bool)-instance-method","html_id":"optimal=(_optimal:Bool)-instance-method","name":"optimal=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_optimal","doc":null,"default_value":"","external_name":"_optimal","restriction":"Bool"}],"args_string":"(_optimal : Bool)","source_link":null,"source_link":null,"def":{"name":"optimal=","args":[{"name":"_optimal","doc":null,"default_value":"","external_name":"_optimal","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@optimal = _optimal"}},{"id":"sample_hostname:String-instance-method","html_id":"sample_hostname:String-instance-method","name":"sample_hostname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"sample_hostname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sample_hostname"}},{"id":"sample_hostname=(_sample_hostname:String)-instance-method","html_id":"sample_hostname=(_sample_hostname:String)-instance-method","name":"sample_hostname=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sample_hostname","doc":null,"default_value":"","external_name":"_sample_hostname","restriction":"String"}],"args_string":"(_sample_hostname : String)","source_link":null,"source_link":null,"def":{"name":"sample_hostname=","args":[{"name":"_sample_hostname","doc":null,"default_value":"","external_name":"_sample_hostname","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sample_hostname = _sample_hostname"}},{"id":"sample_port:UInt16-instance-method","html_id":"sample_port:UInt16-instance-method","name":"sample_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","source_link":null,"source_link":null,"def":{"name":"sample_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sample_port"}},{"id":"sample_port=(_sample_port:UInt16)-instance-method","html_id":"sample_port=(_sample_port:UInt16)-instance-method","name":"sample_port=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sample_port","doc":null,"default_value":"","external_name":"_sample_port","restriction":"UInt16"}],"args_string":"(_sample_port : UInt16)","source_link":null,"source_link":null,"def":{"name":"sample_port=","args":[{"name":"_sample_port","doc":null,"default_value":"","external_name":"_sample_port","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sample_port = _sample_port"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      _id.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _sample_hostname = @sample_hostname\n  if _sample_hostname.nil?\n  else\n    json.field(\"sample_hostname\") do\n      _sample_hostname.to_json(json)\n    end\n  end\n  _sample_port = @sample_port\n  if _sample_port.nil?\n  else\n    json.field(\"sample_port\") do\n      _sample_port.to_json(json)\n    end\n  end\n  _custom = @custom\n  if _custom.nil?\n  else\n    json.field(\"custom\") do\n      _custom.to_json(json)\n    end\n  end\n  _vip = @vip\n  if _vip.nil?\n  else\n    json.field(\"vip\") do\n      _vip.to_json(json)\n    end\n  end\n  _optimal = @optimal\n  if _optimal.nil?\n  else\n    json.field(\"optimal\") do\n      _optimal.to_json(json)\n    end\n  end\nend"}},{"id":"vip:Bool-instance-method","html_id":"vip:Bool-instance-method","name":"vip","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"vip","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vip"}},{"id":"vip=(_vip:Bool)-instance-method","html_id":"vip=(_vip:Bool)-instance-method","name":"vip=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_vip","doc":null,"default_value":"","external_name":"_vip","restriction":"Bool"}],"args_string":"(_vip : Bool)","source_link":null,"source_link":null,"def":{"name":"vip=","args":[{"name":"_vip","doc":null,"default_value":"","external_name":"_vip","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vip = _vip"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/VoiceState","path":"Discord/VoiceState.html","kind":"struct","full_name":"Discord::VoiceState","name":"VoiceState","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/voice.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/voice.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_308:JSON::PullParser)-class-method","html_id":"new(__temp_308:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_308","doc":null,"default_value":"","external_name":"__temp_308","restriction":"::JSON::PullParser"}],"args_string":"(__temp_308 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_308","doc":null,"default_value":"","external_name":"__temp_308","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_308)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_id:UInt64?-instance-method","html_id":"channel_id:UInt64?-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:::Union(UInt64,Nil))-instance-method","html_id":"channel_id=(_channel_id:::Union(UInt64,Nil))-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_channel_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"deaf:Bool-instance-method","html_id":"deaf:Bool-instance-method","name":"deaf","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"deaf","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deaf"}},{"id":"deaf=(_deaf:Bool)-instance-method","html_id":"deaf=(_deaf:Bool)-instance-method","name":"deaf=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_deaf","doc":null,"default_value":"","external_name":"_deaf","restriction":"Bool"}],"args_string":"(_deaf : Bool)","source_link":null,"source_link":null,"def":{"name":"deaf=","args":[{"name":"_deaf","doc":null,"default_value":"","external_name":"_deaf","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@deaf = _deaf"}},{"id":"guild_id:UInt64?-instance-method","html_id":"guild_id:UInt64?-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:::Union(UInt64,Nil))-instance-method","html_id":"guild_id=(_guild_id:::Union(UInt64,Nil))-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_guild_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"mute:Bool-instance-method","html_id":"mute:Bool-instance-method","name":"mute","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"mute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mute"}},{"id":"mute=(_mute:Bool)-instance-method","html_id":"mute=(_mute:Bool)-instance-method","name":"mute=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_mute","doc":null,"default_value":"","external_name":"_mute","restriction":"Bool"}],"args_string":"(_mute : Bool)","source_link":null,"source_link":null,"def":{"name":"mute=","args":[{"name":"_mute","doc":null,"default_value":"","external_name":"_mute","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mute = _mute"}},{"id":"self_deaf:Bool-instance-method","html_id":"self_deaf:Bool-instance-method","name":"self_deaf","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"self_deaf","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@self_deaf"}},{"id":"self_deaf=(_self_deaf:Bool)-instance-method","html_id":"self_deaf=(_self_deaf:Bool)-instance-method","name":"self_deaf=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_self_deaf","doc":null,"default_value":"","external_name":"_self_deaf","restriction":"Bool"}],"args_string":"(_self_deaf : Bool)","source_link":null,"source_link":null,"def":{"name":"self_deaf=","args":[{"name":"_self_deaf","doc":null,"default_value":"","external_name":"_self_deaf","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@self_deaf = _self_deaf"}},{"id":"self_mute:Bool-instance-method","html_id":"self_mute:Bool-instance-method","name":"self_mute","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"self_mute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@self_mute"}},{"id":"self_mute=(_self_mute:Bool)-instance-method","html_id":"self_mute=(_self_mute:Bool)-instance-method","name":"self_mute=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_self_mute","doc":null,"default_value":"","external_name":"_self_mute","restriction":"Bool"}],"args_string":"(_self_mute : Bool)","source_link":null,"source_link":null,"def":{"name":"self_mute=","args":[{"name":"_self_mute","doc":null,"default_value":"","external_name":"_self_mute","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@self_mute = _self_mute"}},{"id":"session_id:String-instance-method","html_id":"session_id:String-instance-method","name":"session_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"session_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@session_id"}},{"id":"session_id=(_session_id:String)-instance-method","html_id":"session_id=(_session_id:String)-instance-method","name":"session_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_session_id","doc":null,"default_value":"","external_name":"_session_id","restriction":"String"}],"args_string":"(_session_id : String)","source_link":null,"source_link":null,"def":{"name":"session_id=","args":[{"name":"_session_id","doc":null,"default_value":"","external_name":"_session_id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@session_id = _session_id"}},{"id":"suppress:Bool-instance-method","html_id":"suppress:Bool-instance-method","name":"suppress","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"suppress","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@suppress"}},{"id":"suppress=(_suppress:Bool)-instance-method","html_id":"suppress=(_suppress:Bool)-instance-method","name":"suppress=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_suppress","doc":null,"default_value":"","external_name":"_suppress","restriction":"Bool"}],"args_string":"(_suppress : Bool)","source_link":null,"source_link":null,"def":{"name":"suppress=","args":[{"name":"_suppress","doc":null,"default_value":"","external_name":"_suppress","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@suppress = _suppress"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        MaybeSnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        MaybeSnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _user_id = @user_id\n  if _user_id.nil?\n  else\n    json.field(\"user_id\") do\n      if _user_id\n        SnowflakeConverter.to_json(_user_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _session_id = @session_id\n  if _session_id.nil?\n  else\n    json.field(\"session_id\") do\n      _session_id.to_json(json)\n    end\n  end\n  _deaf = @deaf\n  if _deaf.nil?\n  else\n    json.field(\"deaf\") do\n      _deaf.to_json(json)\n    end\n  end\n  _mute = @mute\n  if _mute.nil?\n  else\n    json.field(\"mute\") do\n      _mute.to_json(json)\n    end\n  end\n  _self_deaf = @self_deaf\n  if _self_deaf.nil?\n  else\n    json.field(\"self_deaf\") do\n      _self_deaf.to_json(json)\n    end\n  end\n  _self_mute = @self_mute\n  if _self_mute.nil?\n  else\n    json.field(\"self_mute\") do\n      _self_mute.to_json(json)\n    end\n  end\n  _suppress = @suppress\n  if _suppress.nil?\n  else\n    json.field(\"suppress\") do\n      _suppress.to_json(json)\n    end\n  end\nend"}},{"id":"user_id:UInt64-instance-method","html_id":"user_id:UInt64-instance-method","name":"user_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"user_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_id"}},{"id":"user_id=(_user_id:UInt64)-instance-method","html_id":"user_id=(_user_id:UInt64)-instance-method","name":"user_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user_id","doc":null,"default_value":"","external_name":"_user_id","restriction":"UInt64"}],"args_string":"(_user_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"user_id=","args":[{"name":"_user_id","doc":null,"default_value":"","external_name":"_user_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user_id = _user_id"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/VoiceUDP","path":"Discord/VoiceUDP.html","kind":"class","full_name":"Discord::VoiceUDP","name":"VoiceUDP","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/voice.cr","line_number":179,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"Client for Discord's voice UDP protocol, on which the actual audio data is\nsent. There should be no reason to manually use this class: use\n`VoiceClient` instead which uses this class internally.","summary":"<p>Client for Discord's voice UDP protocol, on which the actual audio data is sent.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L183","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L183","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"connect(endpoint:String,port:UInt32,ssrc:UInt32)-instance-method","html_id":"connect(endpoint:String,port:UInt32,ssrc:UInt32)-instance-method","name":"connect","doc":null,"summary":null,"abstract":false,"args":[{"name":"endpoint","doc":null,"default_value":"","external_name":"endpoint","restriction":"String"},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"UInt32"},{"name":"ssrc","doc":null,"default_value":"","external_name":"ssrc","restriction":"UInt32"}],"args_string":"(endpoint : String, port : UInt32, ssrc : UInt32)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L187","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L187","def":{"name":"connect","args":[{"name":"endpoint","doc":null,"default_value":"","external_name":"endpoint","restriction":"String"},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"UInt32"},{"name":"ssrc","doc":null,"default_value":"","external_name":"ssrc","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ssrc = ssrc\n@socket.connect(endpoint, port)\n"}},{"id":"receive_discovery_reply:::Tuple(String,UInt16)-instance-method","html_id":"receive_discovery_reply:::Tuple(String,UInt16)-instance-method","name":"receive_discovery_reply","doc":"Awaits a response to the discovery request and returns our local IP and\nport once the response is received","summary":"<p>Awaits a response to the discovery request and returns our local IP and port once the response is received</p>","abstract":false,"args":[],"args_string":" : ::Tuple(String, UInt16)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L205","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L205","def":{"name":"receive_discovery_reply","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(String, UInt16)","visibility":"Public","body":"buf = Bytes.new(70)\n@socket.receive(buf)\nio = IO::Memory.new(buf)\nio.seek(4)\nip = (io.read_string(64)).delete(\"\\u0000\")\nport = io.read_bytes(UInt16, IO::ByteFormat::BigEndian)\n{ip, port}\n"}},{"id":"secret_key:Slice(UInt8)?-instance-method","html_id":"secret_key:Slice(UInt8)?-instance-method","name":"secret_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Slice(UInt8)?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L181","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L181","def":{"name":"secret_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@secret_key"}},{"id":"secret_key=(secret_key)-instance-method","html_id":"secret_key=(secret_key)-instance-method","name":"secret_key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"secret_key","doc":null,"default_value":"","external_name":"secret_key","restriction":""}],"args_string":"(secret_key)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L181","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L181","def":{"name":"secret_key=","args":[{"name":"secret_key","doc":null,"default_value":"","external_name":"secret_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@secret_key = secret_key"}},{"id":"send_audio(buf,sequence,time)-instance-method","html_id":"send_audio(buf,sequence,time)-instance-method","name":"send_audio","doc":"Sends 20 ms of opus audio data to Discord, with the specified sequence and\ntime (used on the receiving client to synchronise packets)","summary":"<p>Sends 20 ms of opus audio data to Discord, with the specified sequence and time (used on the receiving client to synchronise packets)</p>","abstract":false,"args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":""},{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":""}],"args_string":"(buf, sequence, time)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L219","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L219","def":{"name":"send_audio","args":[{"name":"buf","doc":null,"default_value":"","external_name":"buf","restriction":""},{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"header = create_header(sequence, time)\nbuf = encrypt_audio(header, buf)\nnew_buf = Bytes.new(header.size + buf.size)\nheader.copy_to(new_buf)\nbuf.copy_to(new_buf + header.size)\n@socket.write(new_buf)\n"}},{"id":"send_discovery-instance-method","html_id":"send_discovery-instance-method","name":"send_discovery","doc":"Sends a discovery packet to Discord, telling them that we want to know our\nIP so we can select the protocol on the VWS","summary":"<p>Sends a discovery packet to Discord, telling them that we want to know our IP so we can select the protocol on the VWS</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L194","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/voice.cr#L194","def":{"name":"send_discovery","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new(70)\nio.write_bytes(@ssrc.not_nil!, IO::ByteFormat::BigEndian)\nio.write(Bytes.new(70 - (sizeof(UInt32)), 0_u8))\n@socket.write(io.to_slice)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/Webhook","path":"Discord/Webhook.html","kind":"struct","full_name":"Discord::Webhook","name":"Webhook","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/z64/discordcr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/z64/discordcr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/mappings/webhook.cr","line_number":5,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/mappings/webhook.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(__temp_1038:JSON::PullParser)-class-method","html_id":"new(__temp_1038:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_1038","doc":null,"default_value":"","external_name":"__temp_1038","restriction":"::JSON::PullParser"}],"args_string":"(__temp_1038 : JSON::PullParser)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"__temp_1038","doc":null,"default_value":"","external_name":"__temp_1038","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_1038)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"avatar:String?-instance-method","html_id":"avatar:String?-instance-method","name":"avatar","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"avatar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar"}},{"id":"avatar=(_avatar:::Union(String,Nil))-instance-method","html_id":"avatar=(_avatar:::Union(String,Nil))-instance-method","name":"avatar=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"::Union(String, ::Nil)"}],"args_string":"(_avatar : ::Union(String, Nil))","source_link":null,"source_link":null,"def":{"name":"avatar=","args":[{"name":"_avatar","doc":null,"default_value":"","external_name":"_avatar","restriction":"::Union(String, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@avatar = _avatar"}},{"id":"channel_id:UInt64-instance-method","html_id":"channel_id:UInt64-instance-method","name":"channel_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"channel_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id"}},{"id":"channel_id=(_channel_id:UInt64)-instance-method","html_id":"channel_id=(_channel_id:UInt64)-instance-method","name":"channel_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"args_string":"(_channel_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"channel_id=","args":[{"name":"_channel_id","doc":null,"default_value":"","external_name":"_channel_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_id = _channel_id"}},{"id":"guild_id:UInt64?-instance-method","html_id":"guild_id:UInt64?-instance-method","name":"guild_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64?","source_link":null,"source_link":null,"def":{"name":"guild_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id"}},{"id":"guild_id=(_guild_id:::Union(UInt64,Nil))-instance-method","html_id":"guild_id=(_guild_id:::Union(UInt64,Nil))-instance-method","name":"guild_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"::Union(UInt64, ::Nil)"}],"args_string":"(_guild_id : ::Union(UInt64, Nil))","source_link":null,"source_link":null,"def":{"name":"guild_id=","args":[{"name":"_guild_id","doc":null,"default_value":"","external_name":"_guild_id","restriction":"::Union(UInt64, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@guild_id = _guild_id"}},{"id":"id:UInt64-instance-method","html_id":"id:UInt64-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"id=(_id:UInt64)-instance-method","html_id":"id=(_id:UInt64)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"args_string":"(_id : UInt64)","source_link":null,"source_link":null,"def":{"name":"id=","args":[{"name":"_id","doc":null,"default_value":"","external_name":"_id","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = _id"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":null,"source_link":null,"def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":null,"source_link":null,"def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"::JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      if _id\n        SnowflakeConverter.to_json(_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _guild_id = @guild_id\n  if _guild_id.nil?\n  else\n    json.field(\"guild_id\") do\n      if _guild_id\n        SnowflakeConverter.to_json(_guild_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _channel_id = @channel_id\n  if _channel_id.nil?\n  else\n    json.field(\"channel_id\") do\n      if _channel_id\n        SnowflakeConverter.to_json(_channel_id, json)\n      else\n        nil.to_json(json)\n      end\n    end\n  end\n  _user = @user\n  if _user.nil?\n  else\n    json.field(\"user\") do\n      _user.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _avatar = @avatar\n  if _avatar.nil?\n  else\n    json.field(\"avatar\") do\n      _avatar.to_json(json)\n    end\n  end\n  _token = @token\n  if _token.nil?\n  else\n    json.field(\"token\") do\n      _token.to_json(json)\n    end\n  end\nend"}},{"id":"token:String-instance-method","html_id":"token:String-instance-method","name":"token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token=(_token:String)-instance-method","html_id":"token=(_token:String)-instance-method","name":"token=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"args_string":"(_token : String)","source_link":null,"source_link":null,"def":{"name":"token=","args":[{"name":"_token","doc":null,"default_value":"","external_name":"_token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token = _token"}},{"id":"user:Discord::User?-instance-method","html_id":"user:Discord::User?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Discord::User?","source_link":null,"source_link":null,"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(_user:::Union(User,Nil))-instance-method","html_id":"user=(_user:::Union(User,Nil))-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"::Union(User, ::Nil)"}],"args_string":"(_user : ::Union(User, Nil))","source_link":null,"source_link":null,"def":{"name":"user=","args":[{"name":"_user","doc":null,"default_value":"","external_name":"_user","restriction":"::Union(User, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = _user"}}],"macros":[],"types":[]},{"html_id":"github.com/z64/discordcr/Discord/WebSocket","path":"Discord/WebSocket.html","kind":"class","full_name":"Discord::WebSocket","name":"WebSocket","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/websocket.cr","line_number":6,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/z64/discordcr/Discord","kind":"module","full_name":"Discord","name":"Discord"},"doc":"Internal wrapper around HTTP::WebSocket to decode the Discord-specific\npayload format used in the gateway and VWS.","summary":"<p>Internal wrapper around HTTP::WebSocket to decode the Discord-specific payload format used in the gateway and VWS.</p>","class_methods":[],"constructors":[{"id":"new(host:String,path:String,port:Int32,tls:Bool)-class-method","html_id":"new(host:String,path:String,port:Int32,tls:Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"},{"name":"tls","doc":null,"default_value":"","external_name":"tls","restriction":"Bool"}],"args_string":"(host : String, path : String, port : Int32, tls : Bool)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L15","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L15","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"},{"name":"tls","doc":null,"default_value":"","external_name":"tls","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, path, port, tls)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close(*args,**options)-instance-method","html_id":"close(*args,**options)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.close(*args, **options)"}},{"id":"close(*args,**options,&block)-instance-method","html_id":"close(*args,**options,&amp;block)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.close(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"on_close(&handler:String->)-instance-method","html_id":"on_close(&amp;handler:String-&gt;)-instance-method","name":"on_close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&handler : String -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L31","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L31","def":{"name":"on_close","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"@websocket.on_close(&handler)"}},{"id":"on_message(&handler:Packet->)-instance-method","html_id":"on_message(&amp;handler:Packet-&gt;)-instance-method","name":"on_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&handler : Packet -> )","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L24","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L24","def":{"name":"on_message","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"(Packet -> )"},"return_type":"","visibility":"Public","body":"@websocket.on_message do |message|\n  payload = parse_message(message)\n  handler.call(payload)\nend"}},{"id":"run(*args,**options)-instance-method","html_id":"run(*args,**options)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.run(*args, **options)"}},{"id":"run(*args,**options,&block)-instance-method","html_id":"run(*args,**options,&amp;block)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","def":{"name":"run","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.run(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"send(*args,**options)-instance-method","html_id":"send(*args,**options)-instance-method","name":"send","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","def":{"name":"send","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.send(*args, **options)"}},{"id":"send(*args,**options,&block)-instance-method","html_id":"send(*args,**options,&amp;block)-instance-method","name":"send","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/websocket.cr#L35","def":{"name":"send","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket.send(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/z64/discordcr/Logger","path":"Logger.html","kind":"class","full_name":"Logger","name":"Logger","abstract":false,"superclass":{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/z64/discordcr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/z64/discordcr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"discordcr/logger.cr","line_number":4,"url":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/logger.cr"}],"repository_name":"github.com/z64/discordcr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The logger class is monkey patched to have a property for the IO.","summary":"<p>The logger class is monkey patched to have a property for the IO.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"io:IO?-instance-method","html_id":"io:IO?-instance-method","name":"io","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO?","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/logger.cr#L5","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/logger.cr#L5","def":{"name":"io","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@io"}},{"id":"io=(io)-instance-method","html_id":"io=(io)-instance-method","name":"io=","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/logger.cr#L5","source_link":"https://github.com/z64/discordcr/blob/672f81dd5c361808c0168362bba140eb019a52d0/src/discordcr/logger.cr#L5","def":{"name":"io=","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@io = io"}}],"macros":[],"types":[]}]}}